/* eslint-disable import/prefer-default-export */
export const dummySchema = [
  {
    properties: {
      access_key: {
        type: 'string',
        description:
          "The access key for API operations. You can retrieve this\nfrom the 'Security & Credentials' section of the AWS console.",
        optional: true,
      },
      allowed_account_ids: { type: 'object', optional: true },
      forbidden_account_ids: { type: 'object', optional: true },
      insecure: {
        type: 'boolean',
        description:
          'Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`',
        optional: true,
      },
      max_retries: {
        type: 'number',
        description:
          'The maximum number of times an AWS API request is\nbeing executed. If the API request still fails, an error is\nthrown.',
        optional: true,
      },
      profile: {
        type: 'string',
        description:
          'The profile for API operations. If not set, the default profile\ncreated with `aws configure` will be used.',
        optional: true,
      },
      region: {
        type: 'string',
        description:
          'The region where AWS operations will take place. Examples\nare us-east-1, us-west-2, etc.',
        required: true,
      },
      s3_force_path_style: {
        type: 'boolean',
        description:
          'Set this to true to force the request to use path-style addressing,\ni.e., http://s3.amazonaws.com/BUCKET/KEY. By default, the S3 client will\nuse virtual hosted bucket addressing when possible\n(http://BUCKET.s3.amazonaws.com/KEY). Specific to the Amazon S3 service.',
        optional: true,
      },
      secret_key: {
        type: 'string',
        description:
          "The secret key for API operations. You can retrieve this\nfrom the 'Security & Credentials' section of the AWS console.",
        optional: true,
      },
      shared_credentials_file: {
        type: 'string',
        description:
          'The path to the shared credentials file. If not set\nthis defaults to ~/.aws/credentials.',
        optional: true,
      },
      skip_credentials_validation: {
        type: 'boolean',
        description:
          'Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS available/implemented.',
        optional: true,
      },
      skip_get_ec2_platforms: {
        type: 'boolean',
        description:
          "Skip getting the supported EC2 platforms. Used by users that don't have ec2:DescribeAccountAttributes permissions.",
        optional: true,
      },
      skip_metadata_api_check: { type: 'boolean', optional: true },
      skip_region_validation: {
        type: 'boolean',
        description:
          'Skip static validation of region name. Used by users of alternative AWS-like APIs or users w/ access to regions that are not public (yet).',
        optional: true,
      },
      skip_requesting_account_id: {
        type: 'boolean',
        description:
          'Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.',
        optional: true,
      },
      token: {
        type: 'string',
        description:
          'session token. A session token is only required if you are\nusing temporary security credentials.',
        optional: true,
      },
      assume_role: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          duration_seconds: {
            type: 'number',
            description:
              'Seconds to restrict the assume role session duration.',
            optional: true,
          },
          external_id: {
            type: 'string',
            description:
              'Unique identifier that might be required for assuming a role in another account.',
            optional: true,
          },
          policy: {
            type: 'string',
            description:
              'IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.',
            optional: true,
          },
          policy_arns: {
            type: 'object',
            description:
              'Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.',
            optional: true,
          },
          role_arn: {
            type: 'string',
            description:
              'Amazon Resource Name of an IAM Role to assume prior to making API calls.',
            optional: true,
          },
          session_name: {
            type: 'string',
            description: 'Identifier for the assumed role session.',
            optional: true,
          },
          tags: {
            type: 'object',
            description: 'Assume role session tags.',
            optional: true,
          },
          transitive_tag_keys: {
            type: 'object',
            description:
              'Assume role session tag keys to pass to any subsequent sessions.',
            optional: true,
          },
        },
      },
      default_tags: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          tags: {
            type: 'object',
            description: 'Resource tags to default across all resources',
            optional: true,
          },
        },
      },
      endpoints: {
        nesting_mode: 'set',
        properties: {
          accessanalyzer: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          acm: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          acmpca: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          amplify: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          apigateway: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          applicationautoscaling: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          applicationinsights: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          appmesh: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          appstream: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          appsync: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          athena: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          auditmanager: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          autoscaling: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          autoscalingplans: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          backup: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          batch: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          budgets: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloud9: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudformation: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudfront: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudhsm: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudsearch: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudtrail: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudwatch: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudwatchevents: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cloudwatchlogs: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          codeartifact: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          codebuild: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          codecommit: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          codedeploy: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          codepipeline: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          codestarconnections: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cognitoidentity: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cognitoidp: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          configservice: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          connect: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          cur: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          dataexchange: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          datapipeline: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          datasync: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          dax: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          detective: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          devicefarm: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          directconnect: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          dlm: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          dms: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          docdb: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ds: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          dynamodb: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ec2: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ecr: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ecrpublic: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ecs: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          efs: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          eks: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          elasticache: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          elasticbeanstalk: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          elastictranscoder: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          elb: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          emr: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          emrcontainers: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          es: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          firehose: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          fms: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          forecast: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          fsx: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          gamelift: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          glacier: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          globalaccelerator: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          glue: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          greengrass: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          guardduty: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          iam: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          identitystore: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          imagebuilder: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          inspector: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          iot: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          iotanalytics: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          iotevents: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          kafka: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          kinesis: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          kinesisanalytics: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          kinesisanalyticsv2: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          kinesisvideo: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          kms: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          lakeformation: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          lambda: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          lexmodels: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          licensemanager: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          lightsail: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          macie: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          macie2: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          managedblockchain: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          marketplacecatalog: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          mediaconnect: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          mediaconvert: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          medialive: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          mediapackage: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          mediastore: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          mediastoredata: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          mq: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          mwaa: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          neptune: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          networkfirewall: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          networkmanager: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          opsworks: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          organizations: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          outposts: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          personalize: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          pinpoint: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          pricing: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          qldb: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          quicksight: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ram: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          rds: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          redshift: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          resourcegroups: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          resourcegroupstaggingapi: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          route53: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          route53domains: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          route53resolver: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          s3: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          s3control: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          s3outposts: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          sagemaker: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          sdb: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          secretsmanager: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          securityhub: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          serverlessrepo: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          servicecatalog: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          servicediscovery: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          servicequotas: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ses: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          shield: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          signer: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          sns: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          sqs: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ssm: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          ssoadmin: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          stepfunctions: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          storagegateway: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          sts: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          swf: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          synthetics: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          timestreamwrite: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          transfer: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          waf: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          wafregional: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          wafv2: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          worklink: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          workmail: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          workspaces: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
          xray: {
            type: 'string',
            description:
              'Use this to override the default service endpoint URL',
            optional: true,
          },
        },
      },
      ignore_tags: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          key_prefixes: {
            type: 'object',
            description:
              'Resource tag key prefixes to ignore across all resources.',
            optional: true,
          },
          keys: {
            type: 'object',
            description: 'Resource tag keys to ignore across all resources.',
            optional: true,
          },
        },
      },
    },
    title: 'aws_provider',
    type: 'provider',
  },
  {
    properties: {
      analyzer_name: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', optional: true },
    },
    title: 'aws_accessanalyzer_analyzer',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_authority_arn: { type: 'string', optional: true },
      certificate_body: { type: 'string', optional: true },
      certificate_chain: { type: 'string', optional: true },
      domain_name: { type: 'string', optional: true, computed: true },
      domain_validation_options: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      private_key: { type: 'string', optional: true, sensitive: true },
      status: { type: 'string', computed: true },
      subject_alternative_names: {
        type: 'object',
        optional: true,
        computed: true,
      },
      tags: { type: 'object', optional: true },
      validation_emails: { type: ['array', 'string'], computed: true },
      validation_method: { type: 'string', optional: true, computed: true },
      options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          certificate_transparency_logging_preference: {
            type: 'string',
            optional: true,
          },
        },
      },
    },
    title: 'aws_acm_certificate',
    type: 'resource',
  },
  {
    properties: {
      certificate_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      validation_record_fqdns: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_acm_certificate_validation',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate: { type: 'string', computed: true },
      certificate_authority_arn: { type: 'string', required: true },
      certificate_chain: { type: 'string', computed: true },
      certificate_signing_request: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      signing_algorithm: { type: 'string', required: true },
      template_arn: { type: 'string', optional: true },
      validity: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          type: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_acmpca_certificate',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate: { type: 'string', computed: true },
      certificate_chain: { type: 'string', computed: true },
      certificate_signing_request: { type: 'string', computed: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      not_after: { type: 'string', computed: true },
      not_before: { type: 'string', computed: true },
      permanent_deletion_time_in_days: { type: 'number', optional: true },
      serial: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', optional: true },
      certificate_authority_configuration: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          key_algorithm: { type: 'string', required: true },
          signing_algorithm: { type: 'string', required: true },
        },
      },
      revocation_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            crl_configuration: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  custom_cname: { type: 'string', optional: true },
                  enabled: { type: 'bool', optional: true },
                  expiration_in_days: { type: 'number', required: true },
                  s3_bucket_name: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_acmpca_certificate_authority',
    type: 'resource',
  },
  {
    properties: {
      certificate: { type: 'string', required: true },
      certificate_authority_arn: { type: 'string', required: true },
      certificate_chain: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_acmpca_certificate_authority_certificate',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      arn_suffix: { type: 'string', computed: true },
      customer_owned_ipv4_pool: { type: 'string', optional: true },
      dns_name: { type: 'string', computed: true },
      drop_invalid_header_fields: { type: 'boolean', optional: true },
      enable_cross_zone_load_balancing: { type: 'boolean', optional: true },
      enable_deletion_protection: { type: 'boolean', optional: true },
      enable_http2: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      idle_timeout: { type: 'number', optional: true },
      internal: { type: 'boolean', optional: true, computed: true },
      ip_address_type: { type: 'string', optional: true, computed: true },
      load_balancer_type: { type: 'string', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      security_groups: { type: 'object', optional: true, computed: true },
      subnets: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      zone_id: { type: 'string', computed: true },
      access_logs: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket: { type: 'string', required: true },
          enabled: { type: 'boolean', optional: true },
          prefix: { type: 'string', optional: true },
        },
      },
      subnet_mapping: {
        nesting_mode: 'set',
        properties: {
          allocation_id: { type: 'string', optional: true },
          ipv6_address: { type: 'string', optional: true },
          outpost_id: { type: 'string', computed: true },
          private_ipv4_address: { type: 'string', optional: true },
          subnet_id: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_alb',
    type: 'resource',
  },
  {
    properties: {
      alpn_policy: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      certificate_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      load_balancer_arn: { type: 'string', required: true },
      port: { type: 'number', optional: true },
      protocol: { type: 'string', optional: true, computed: true },
      ssl_policy: { type: 'string', optional: true, computed: true },
      default_action: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          order: { type: 'number', optional: true, computed: true },
          target_group_arn: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { read: { type: 'string', optional: true } },
      },
    },
    title: 'aws_alb_listener',
    type: 'resource',
  },
  {
    properties: {
      certificate_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      listener_arn: { type: 'string', required: true },
    },
    title: 'aws_alb_listener_certificate',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      listener_arn: { type: 'string', required: true },
      priority: { type: 'number', optional: true, computed: true },
      action: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          order: { type: 'number', optional: true, computed: true },
          target_group_arn: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      condition: {
        nesting_mode: 'set',
        block: {
          block_types: {
            host_header: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            http_header: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  http_header_name: { type: 'string', required: true },
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            http_request_method: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            path_pattern: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            query_string: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  key: { type: 'string', optional: true },
                  value: { type: 'string', required: true },
                },
              },
            },
            source_ip: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
          },
        },
        min_items: 1,
      },
    },
    title: 'aws_alb_listener_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      arn_suffix: { type: 'string', computed: true },
      deregistration_delay: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      lambda_multi_value_headers_enabled: { type: 'boolean', optional: true },
      load_balancing_algorithm_type: {
        type: 'string',
        optional: true,
        computed: true,
      },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      port: { type: 'number', optional: true },
      preserve_client_ip: { type: 'string', optional: true, computed: true },
      protocol: { type: 'string', optional: true },
      protocol_version: { type: 'string', optional: true, computed: true },
      proxy_protocol_v2: { type: 'boolean', optional: true },
      slow_start: { type: 'number', optional: true },
      tags: { type: 'object', optional: true },
      target_type: { type: 'string', optional: true },
      vpc_id: { type: 'string', optional: true },
      health_check: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true },
          healthy_threshold: { type: 'number', optional: true },
          interval: { type: 'number', optional: true },
          matcher: { type: 'string', optional: true, computed: true },
          path: { type: 'string', optional: true, computed: true },
          port: { type: 'string', optional: true },
          protocol: { type: 'string', optional: true },
          timeout: { type: 'number', optional: true, computed: true },
          unhealthy_threshold: { type: 'number', optional: true },
        },
      },
      stickiness: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cookie_duration: { type: 'number', optional: true },
          enabled: { type: 'boolean', optional: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_alb_target_group',
    type: 'resource',
  },
  {
    properties: {
      availability_zone: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true },
      target_group_arn: { type: 'string', required: true },
      target_id: { type: 'string', required: true },
    },
    title: 'aws_alb_target_group_attachment',
    type: 'resource',
  },
  {
    properties: {
      architecture: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      ena_support: { type: 'boolean', optional: true },
      hypervisor: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_location: { type: 'string', optional: true, computed: true },
      image_owner_alias: { type: 'string', computed: true },
      image_type: { type: 'string', computed: true },
      kernel_id: { type: 'string', optional: true },
      manage_ebs_snapshots: { type: 'boolean', computed: true },
      name: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      platform: { type: 'string', computed: true },
      platform_details: { type: 'string', computed: true },
      public: { type: 'boolean', computed: true },
      ramdisk_id: { type: 'string', optional: true },
      root_device_name: { type: 'string', optional: true },
      root_snapshot_id: { type: 'string', computed: true },
      sriov_net_support: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      usage_operation: { type: 'string', computed: true },
      virtualization_type: { type: 'string', optional: true },
      ebs_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_name: { type: 'string', required: true },
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          snapshot_id: { type: 'string', optional: true },
          throughput: { type: 'number', optional: true, computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true },
        },
      },
      ephemeral_block_device: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', required: true },
          virtual_name: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ami',
    type: 'resource',
  },
  {
    properties: {
      architecture: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      ena_support: { type: 'boolean', computed: true },
      encrypted: { type: 'boolean', optional: true },
      hypervisor: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_location: { type: 'string', computed: true },
      image_owner_alias: { type: 'string', computed: true },
      image_type: { type: 'string', computed: true },
      kernel_id: { type: 'string', computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      manage_ebs_snapshots: { type: 'boolean', computed: true },
      name: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      platform: { type: 'string', computed: true },
      platform_details: { type: 'string', computed: true },
      public: { type: 'boolean', computed: true },
      ramdisk_id: { type: 'string', computed: true },
      root_device_name: { type: 'string', computed: true },
      root_snapshot_id: { type: 'string', computed: true },
      source_ami_id: { type: 'string', required: true },
      source_ami_region: { type: 'string', required: true },
      sriov_net_support: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      usage_operation: { type: 'string', computed: true },
      virtualization_type: { type: 'string', computed: true },
      ebs_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', computed: true },
          device_name: { type: 'string', computed: true },
          encrypted: { type: 'boolean', computed: true },
          iops: { type: 'number', computed: true },
          snapshot_id: { type: 'string', computed: true },
          throughput: { type: 'number', computed: true },
          volume_size: { type: 'number', computed: true },
          volume_type: { type: 'string', computed: true },
        },
      },
      ephemeral_block_device: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', computed: true },
          virtual_name: { type: 'string', computed: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ami_copy',
    type: 'resource',
  },
  {
    properties: {
      architecture: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      ena_support: { type: 'boolean', computed: true },
      hypervisor: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_location: { type: 'string', computed: true },
      image_owner_alias: { type: 'string', computed: true },
      image_type: { type: 'string', computed: true },
      kernel_id: { type: 'string', computed: true },
      manage_ebs_snapshots: { type: 'boolean', computed: true },
      name: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      platform: { type: 'string', computed: true },
      platform_details: { type: 'string', computed: true },
      public: { type: 'boolean', computed: true },
      ramdisk_id: { type: 'string', computed: true },
      root_device_name: { type: 'string', computed: true },
      root_snapshot_id: { type: 'string', computed: true },
      snapshot_without_reboot: { type: 'boolean', optional: true },
      source_instance_id: { type: 'string', required: true },
      sriov_net_support: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      usage_operation: { type: 'string', computed: true },
      virtualization_type: { type: 'string', computed: true },
      ebs_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', computed: true },
          device_name: { type: 'string', computed: true },
          encrypted: { type: 'boolean', computed: true },
          iops: { type: 'number', computed: true },
          snapshot_id: { type: 'string', computed: true },
          throughput: { type: 'number', computed: true },
          volume_size: { type: 'number', computed: true },
          volume_type: { type: 'string', computed: true },
        },
      },
      ephemeral_block_device: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', computed: true },
          virtual_name: { type: 'string', computed: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ami_from_instance',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      image_id: { type: 'string', required: true },
    },
    title: 'aws_ami_launch_permission',
    type: 'resource',
  },
  {
    properties: {
      cloudwatch_role_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      throttle_settings: {
        type: [
          'array',
          ['object', { burst_limit: 'number', rate_limit: 'number' }],
        ],
        computed: true,
      },
    },
    title: 'aws_api_gateway_account',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      value: {
        type: 'string',
        optional: true,
        computed: true,
        sensitive: true,
      },
    },
    title: 'aws_api_gateway_api_key',
    type: 'resource',
  },
  {
    properties: {
      authorizer_credentials: { type: 'string', optional: true },
      authorizer_result_ttl_in_seconds: { type: 'number', optional: true },
      authorizer_uri: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      identity_source: { type: 'string', optional: true },
      identity_validation_expression: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      provider_arns: { type: 'object', optional: true },
      rest_api_id: { type: 'string', required: true },
      type: { type: 'string', optional: true },
    },
    title: 'aws_api_gateway_authorizer',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      base_path: { type: 'string', optional: true },
      domain_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      stage_name: { type: 'string', optional: true },
    },
    title: 'aws_api_gateway_base_path_mapping',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      expiration_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      pem_encoded_certificate: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_api_gateway_client_certificate',
    type: 'resource',
  },
  {
    properties: {
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      execution_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      invoke_url: { type: 'string', computed: true },
      rest_api_id: { type: 'string', required: true },
      stage_description: { type: 'string', optional: true },
      stage_name: { type: 'string', optional: true },
      triggers: { type: 'object', optional: true },
      variables: { type: 'object', optional: true },
    },
    title: 'aws_api_gateway_deployment',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      properties: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
      location: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          method: { type: 'string', optional: true },
          name: { type: 'string', optional: true },
          path: { type: 'string', optional: true },
          status_code: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_api_gateway_documentation_part',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      rest_api_id: { type: 'string', required: true },
      version: { type: 'string', required: true },
    },
    title: 'aws_api_gateway_documentation_version',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_arn: { type: 'string', optional: true },
      certificate_body: { type: 'string', optional: true },
      certificate_chain: { type: 'string', optional: true },
      certificate_name: { type: 'string', optional: true },
      certificate_private_key: {
        type: 'string',
        optional: true,
        sensitive: true,
      },
      certificate_upload_date: { type: 'string', computed: true },
      cloudfront_domain_name: { type: 'string', computed: true },
      cloudfront_zone_id: { type: 'string', computed: true },
      domain_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      regional_certificate_arn: { type: 'string', optional: true },
      regional_certificate_name: { type: 'string', optional: true },
      regional_domain_name: { type: 'string', computed: true },
      regional_zone_id: { type: 'string', computed: true },
      security_policy: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      endpoint_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { types: { type: ['array', 'string'], required: true } },
      },
      mutual_tls_authentication: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          truststore_uri: { type: 'string', required: true },
          truststore_version: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_api_gateway_domain_name',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      response_parameters: { type: 'object', optional: true },
      response_templates: { type: 'object', optional: true },
      response_type: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
      status_code: { type: 'string', optional: true },
    },
    title: 'aws_api_gateway_gateway_response',
    type: 'resource',
  },
  {
    properties: {
      cache_key_parameters: { type: 'object', optional: true },
      cache_namespace: { type: 'string', optional: true, computed: true },
      connection_id: { type: 'string', optional: true },
      connection_type: { type: 'string', optional: true },
      content_handling: { type: 'string', optional: true },
      credentials: { type: 'string', optional: true },
      http_method: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      integration_http_method: { type: 'string', optional: true },
      passthrough_behavior: { type: 'string', optional: true, computed: true },
      request_parameters: { type: 'object', optional: true },
      request_templates: { type: 'object', optional: true },
      resource_id: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
      timeout_milliseconds: { type: 'number', optional: true },
      type: { type: 'string', required: true },
      uri: { type: 'string', optional: true },
      tls_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          insecure_skip_verification: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_api_gateway_integration',
    type: 'resource',
  },
  {
    properties: {
      content_handling: { type: 'string', optional: true },
      http_method: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      resource_id: { type: 'string', required: true },
      response_parameters: { type: 'object', optional: true },
      response_templates: { type: 'object', optional: true },
      rest_api_id: { type: 'string', required: true },
      selection_pattern: { type: 'string', optional: true },
      status_code: { type: 'string', required: true },
    },
    title: 'aws_api_gateway_integration_response',
    type: 'resource',
  },
  {
    properties: {
      api_key_required: { type: 'boolean', optional: true },
      authorization: { type: 'string', required: true },
      authorization_scopes: { type: 'object', optional: true },
      authorizer_id: { type: 'string', optional: true },
      http_method: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      operation_name: { type: 'string', optional: true },
      request_models: { type: 'object', optional: true },
      request_parameters: { type: 'object', optional: true },
      request_validator_id: { type: 'string', optional: true },
      resource_id: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
    },
    title: 'aws_api_gateway_method',
    type: 'resource',
  },
  {
    properties: {
      http_method: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      resource_id: { type: 'string', required: true },
      response_models: { type: 'object', optional: true },
      response_parameters: { type: 'object', optional: true },
      rest_api_id: { type: 'string', required: true },
      status_code: { type: 'string', required: true },
    },
    title: 'aws_api_gateway_method_response',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      method_path: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
      stage_name: { type: 'string', required: true },
      settings: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          cache_data_encrypted: {
            type: 'boolean',
            optional: true,
            computed: true,
          },
          cache_ttl_in_seconds: {
            type: 'number',
            optional: true,
            computed: true,
          },
          caching_enabled: { type: 'boolean', optional: true, computed: true },
          data_trace_enabled: {
            type: 'boolean',
            optional: true,
            computed: true,
          },
          logging_level: { type: 'string', optional: true, computed: true },
          metrics_enabled: { type: 'boolean', optional: true, computed: true },
          require_authorization_for_cache_control: {
            type: 'boolean',
            optional: true,
            computed: true,
          },
          throttling_burst_limit: { type: 'number', optional: true },
          throttling_rate_limit: { type: 'number', optional: true },
          unauthorized_cache_control_header_strategy: {
            type: 'string',
            optional: true,
            computed: true,
          },
        },
      },
    },
    title: 'aws_api_gateway_method_settings',
    type: 'resource',
  },
  {
    properties: {
      content_type: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
      schema: { type: 'string', optional: true },
    },
    title: 'aws_api_gateway_model',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
      validate_request_body: { type: 'boolean', optional: true },
      validate_request_parameters: { type: 'boolean', optional: true },
    },
    title: 'aws_api_gateway_request_validator',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      parent_id: { type: 'string', required: true },
      path: { type: 'string', computed: true },
      path_part: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
    },
    title: 'aws_api_gateway_resource',
    type: 'resource',
  },
  {
    properties: {
      api_key_source: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      binary_media_types: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      body: { type: 'string', optional: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true, computed: true },
      disable_execute_api_endpoint: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      execution_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      minimum_compression_size: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      parameters: { type: 'object', optional: true },
      policy: { type: 'string', optional: true, computed: true },
      root_resource_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      endpoint_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          types: { type: ['array', 'string'], required: true },
          vpc_endpoint_ids: { type: 'object', optional: true, computed: true },
        },
      },
    },
    title: 'aws_api_gateway_rest_api',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      rest_api_id: { type: 'string', required: true },
    },
    title: 'aws_api_gateway_rest_api_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cache_cluster_enabled: { type: 'boolean', optional: true },
      cache_cluster_size: { type: 'string', optional: true },
      client_certificate_id: { type: 'string', optional: true },
      deployment_id: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      documentation_version: { type: 'string', optional: true },
      execution_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      invoke_url: { type: 'string', computed: true },
      rest_api_id: { type: 'string', required: true },
      stage_name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      variables: { type: 'object', optional: true },
      xray_tracing_enabled: { type: 'boolean', optional: true },
      access_log_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          destination_arn: { type: 'string', required: true },
          format: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_api_gateway_stage',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      product_code: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      api_stages: {
        nesting_mode: 'set',
        properties: {
          api_id: { type: 'string', required: true },
          stage: { type: 'string', required: true },
        },
      },
      quota_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          limit: { type: 'number', required: true },
          offset: { type: 'number', optional: true },
          period: { type: 'string', required: true },
        },
      },
      throttle_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          burst_limit: { type: 'number', optional: true },
          rate_limit: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_api_gateway_usage_plan',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      key_id: { type: 'string', required: true },
      key_type: { type: 'string', required: true },
      name: { type: 'string', computed: true },
      usage_plan_id: { type: 'string', required: true },
      value: { type: 'string', computed: true },
    },
    title: 'aws_api_gateway_usage_plan_key',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      target_arns: { type: ['array', 'string'], required: true },
    },
    title: 'aws_api_gateway_vpc_link',
    type: 'resource',
  },
  {
    properties: {
      api_endpoint: { type: 'string', computed: true },
      api_key_selection_expression: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      body: { type: 'string', optional: true },
      credentials_arn: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      disable_execute_api_endpoint: { type: 'boolean', optional: true },
      execution_arn: { type: 'string', computed: true },
      fail_on_warnings: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      protocol_type: { type: 'string', required: true },
      route_key: { type: 'string', optional: true },
      route_selection_expression: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      target: { type: 'string', optional: true },
      version: { type: 'string', optional: true },
      cors_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_credentials: { type: 'boolean', optional: true },
          allow_headers: { type: 'object', optional: true },
          allow_methods: { type: 'object', optional: true },
          allow_origins: { type: 'object', optional: true },
          expose_headers: { type: 'object', optional: true },
          max_age: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_apigatewayv2_api',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      api_mapping_key: { type: 'string', optional: true },
      domain_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      stage: { type: 'string', required: true },
    },
    title: 'aws_apigatewayv2_api_mapping',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      authorizer_credentials_arn: { type: 'string', optional: true },
      authorizer_payload_format_version: { type: 'string', optional: true },
      authorizer_result_ttl_in_seconds: {
        type: 'number',
        optional: true,
        computed: true,
      },
      authorizer_type: { type: 'string', required: true },
      authorizer_uri: { type: 'string', optional: true },
      enable_simple_responses: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      identity_sources: { type: 'object', optional: true },
      name: { type: 'string', required: true },
      jwt_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          audience: { type: 'object', optional: true },
          issuer: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_apigatewayv2_authorizer',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      auto_deployed: { type: 'boolean', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      triggers: { type: 'object', optional: true },
    },
    title: 'aws_apigatewayv2_deployment',
    type: 'resource',
  },
  {
    properties: {
      api_mapping_selection_expression: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      domain_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      domain_name_configuration: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          certificate_arn: { type: 'string', required: true },
          endpoint_type: { type: 'string', required: true },
          hosted_zone_id: { type: 'string', computed: true },
          security_policy: { type: 'string', required: true },
          target_domain_name: { type: 'string', computed: true },
        },
      },
      mutual_tls_authentication: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          truststore_uri: { type: 'string', required: true },
          truststore_version: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_apigatewayv2_domain_name',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      connection_id: { type: 'string', optional: true },
      connection_type: { type: 'string', optional: true },
      content_handling_strategy: { type: 'string', optional: true },
      credentials_arn: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      integration_method: { type: 'string', optional: true },
      integration_response_selection_expression: {
        type: 'string',
        computed: true,
      },
      integration_subtype: { type: 'string', optional: true },
      integration_type: { type: 'string', required: true },
      integration_uri: { type: 'string', optional: true },
      passthrough_behavior: { type: 'string', optional: true },
      payload_format_version: { type: 'string', optional: true },
      request_parameters: { type: 'object', optional: true },
      request_templates: { type: 'object', optional: true },
      template_selection_expression: { type: 'string', optional: true },
      timeout_milliseconds: { type: 'number', optional: true, computed: true },
      response_parameters: {
        nesting_mode: 'set',
        properties: {
          mappings: { type: 'object', required: true },
          status_code: { type: 'string', required: true },
        },
      },
      tls_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          server_name_to_verify: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_apigatewayv2_integration',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      content_handling_strategy: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      integration_id: { type: 'string', required: true },
      integration_response_key: { type: 'string', required: true },
      response_templates: { type: 'object', optional: true },
      template_selection_expression: { type: 'string', optional: true },
    },
    title: 'aws_apigatewayv2_integration_response',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      content_type: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      schema: { type: 'string', required: true },
    },
    title: 'aws_apigatewayv2_model',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      api_key_required: { type: 'boolean', optional: true },
      authorization_scopes: { type: 'object', optional: true },
      authorization_type: { type: 'string', optional: true },
      authorizer_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      model_selection_expression: { type: 'string', optional: true },
      operation_name: { type: 'string', optional: true },
      request_models: { type: 'object', optional: true },
      route_key: { type: 'string', required: true },
      route_response_selection_expression: { type: 'string', optional: true },
      target: { type: 'string', optional: true },
      request_parameter: {
        nesting_mode: 'set',
        properties: {
          request_parameter_key: { type: 'string', required: true },
          required: { type: 'boolean', required: true },
        },
      },
    },
    title: 'aws_apigatewayv2_route',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      model_selection_expression: { type: 'string', optional: true },
      response_models: { type: 'object', optional: true },
      route_id: { type: 'string', required: true },
      route_response_key: { type: 'string', required: true },
    },
    title: 'aws_apigatewayv2_route_response',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      auto_deploy: { type: 'boolean', optional: true },
      client_certificate_id: { type: 'string', optional: true },
      deployment_id: { type: 'string', optional: true, computed: true },
      description: { type: 'string', optional: true },
      execution_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      invoke_url: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      stage_variables: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      access_log_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          destination_arn: { type: 'string', required: true },
          format: { type: 'string', required: true },
        },
      },
      default_route_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          data_trace_enabled: { type: 'boolean', optional: true },
          detailed_metrics_enabled: { type: 'boolean', optional: true },
          logging_level: { type: 'string', optional: true, computed: true },
          throttling_burst_limit: { type: 'number', optional: true },
          throttling_rate_limit: { type: 'number', optional: true },
        },
      },
      route_settings: {
        nesting_mode: 'set',
        properties: {
          data_trace_enabled: { type: 'boolean', optional: true },
          detailed_metrics_enabled: { type: 'boolean', optional: true },
          logging_level: { type: 'string', optional: true, computed: true },
          route_key: { type: 'string', required: true },
          throttling_burst_limit: { type: 'number', optional: true },
          throttling_rate_limit: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_apigatewayv2_stage',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      security_group_ids: { type: 'object', required: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_apigatewayv2_vpc_link',
    type: 'resource',
  },
  {
    properties: {
      cookie_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      lb_port: { type: 'number', required: true },
      load_balancer: { type: 'string', required: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_app_cookie_stickiness_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      policy_type: { type: 'string', optional: true },
      resource_id: { type: 'string', required: true },
      scalable_dimension: { type: 'string', required: true },
      service_namespace: { type: 'string', required: true },
      step_scaling_policy_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          adjustment_type: { type: 'string', optional: true },
          cooldown: { type: 'number', optional: true },
          metric_aggregation_type: { type: 'string', optional: true },
          min_adjustment_magnitude: { type: 'number', optional: true },
        },
      },
      target_tracking_scaling_policy_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          disable_scale_in: { type: 'boolean', optional: true },
          scale_in_cooldown: { type: 'number', optional: true },
          scale_out_cooldown: { type: 'number', optional: true },
          target_value: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_appautoscaling_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      end_time: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_id: { type: 'string', required: true },
      scalable_dimension: { type: 'string', required: true },
      schedule: { type: 'string', required: true },
      service_namespace: { type: 'string', required: true },
      start_time: { type: 'string', optional: true },
      timezone: { type: 'string', optional: true },
      scalable_target_action: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          max_capacity: { type: 'string', optional: true },
          min_capacity: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_appautoscaling_scheduled_action',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      max_capacity: { type: 'number', required: true },
      min_capacity: { type: 'number', required: true },
      resource_id: { type: 'string', required: true },
      role_arn: { type: 'string', optional: true, computed: true },
      scalable_dimension: { type: 'string', required: true },
      service_namespace: { type: 'string', required: true },
    },
    title: 'aws_appautoscaling_target',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      mesh_name: { type: 'string', required: true },
      mesh_owner: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_owner: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      virtual_gateway_name: { type: 'string', required: true },
      spec: {
        nesting_mode: 'list',
        block: {
          block_types: {
            grpc_route: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  action: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        target: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              virtual_service: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    virtual_service_name: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                  match: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        service_name: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            http2_route: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  action: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        target: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              virtual_service: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    virtual_service_name: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                  match: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        prefix: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            http_route: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  action: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        target: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              virtual_service: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    virtual_service_name: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                  match: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        prefix: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_appmesh_gateway_route',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      mesh_owner: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      resource_owner: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      spec: {
        nesting_mode: 'list',
        block: {
          block_types: {
            egress_filter: {
              nesting_mode: 'list',
              block: {
                attributes: { type: { type: 'string', optional: true } },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_appmesh_mesh',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      mesh_name: { type: 'string', required: true },
      mesh_owner: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_owner: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      virtual_router_name: { type: 'string', required: true },
      spec: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { priority: { type: 'number', optional: true } },
      },
    },
    title: 'aws_appmesh_route',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      mesh_name: { type: 'string', required: true },
      mesh_owner: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_owner: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      spec: {
        nesting_mode: 'list',
        block: {
          block_types: {
            backend_defaults: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  client_policy: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        tls: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              enforce: { type: 'bool', optional: true },
                              ports: {
                                type: ['set', 'number'],
                                optional: true,
                              },
                            },
                            block_types: {
                              certificate: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    file: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          certificate_chain: {
                                            type: 'string',
                                            required: true,
                                          },
                                          private_key: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                    sds: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          secret_name: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              validation: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    subject_alternative_names: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          match: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                exact: {
                                                  type: ['set', 'string'],
                                                  required: true,
                                                },
                                              },
                                            },
                                            min_items: 1,
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                    trust: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          acm: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                certificate_authority_arns: {
                                                  type: ['set', 'string'],
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          file: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                certificate_chain: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          sds: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                secret_name: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            listener: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  connection_pool: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        grpc: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              max_requests: { type: 'number', required: true },
                            },
                          },
                          max_items: 1,
                        },
                        http: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              max_connections: {
                                type: 'number',
                                required: true,
                              },
                              max_pending_requests: {
                                type: 'number',
                                optional: true,
                              },
                            },
                          },
                          max_items: 1,
                        },
                        http2: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              max_requests: { type: 'number', required: true },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  health_check: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        healthy_threshold: { type: 'number', required: true },
                        interval_millis: { type: 'number', required: true },
                        path: { type: 'string', optional: true },
                        port: {
                          type: 'number',
                          optional: true,
                          computed: true,
                        },
                        protocol: { type: 'string', required: true },
                        timeout_millis: { type: 'number', required: true },
                        unhealthy_threshold: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                  port_mapping: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        port: { type: 'number', required: true },
                        protocol: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                  tls: {
                    nesting_mode: 'list',
                    block: {
                      attributes: { mode: { type: 'string', required: true } },
                      block_types: {
                        certificate: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              acm: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    certificate_arn: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              file: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    certificate_chain: {
                                      type: 'string',
                                      required: true,
                                    },
                                    private_key: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              sds: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    secret_name: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                        validation: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              subject_alternative_names: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    match: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          exact: {
                                            type: ['set', 'string'],
                                            required: true,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              trust: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    file: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          certificate_chain: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                    sds: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          secret_name: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            logging: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  access_log: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        file: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              path: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_appmesh_virtual_gateway',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      mesh_name: { type: 'string', required: true },
      mesh_owner: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_owner: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      spec: {
        nesting_mode: 'list',
        block: {
          block_types: {
            backend: {
              nesting_mode: 'set',
              block: {
                block_types: {
                  virtual_service: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        virtual_service_name: {
                          type: 'string',
                          required: true,
                        },
                      },
                      block_types: {
                        client_policy: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              tls: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    enforce: { type: 'bool', optional: true },
                                    ports: {
                                      type: ['set', 'number'],
                                      optional: true,
                                    },
                                  },
                                  block_types: {
                                    certificate: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          file: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                certificate_chain: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                                private_key: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          sds: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                secret_name: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                    validation: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          subject_alternative_names: {
                                            nesting_mode: 'list',
                                            block: {
                                              block_types: {
                                                match: {
                                                  nesting_mode: 'list',
                                                  block: {
                                                    attributes: {
                                                      exact: {
                                                        type: ['set', 'string'],
                                                        required: true,
                                                      },
                                                    },
                                                  },
                                                  min_items: 1,
                                                  max_items: 1,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          trust: {
                                            nesting_mode: 'list',
                                            block: {
                                              block_types: {
                                                acm: {
                                                  nesting_mode: 'list',
                                                  block: {
                                                    attributes: {
                                                      certificate_authority_arns:
                                                        {
                                                          type: [
                                                            'set',
                                                            'string',
                                                          ],
                                                          required: true,
                                                        },
                                                    },
                                                  },
                                                  max_items: 1,
                                                },
                                                file: {
                                                  nesting_mode: 'list',
                                                  block: {
                                                    attributes: {
                                                      certificate_chain: {
                                                        type: 'string',
                                                        required: true,
                                                      },
                                                    },
                                                  },
                                                  max_items: 1,
                                                },
                                                sds: {
                                                  nesting_mode: 'list',
                                                  block: {
                                                    attributes: {
                                                      secret_name: {
                                                        type: 'string',
                                                        required: true,
                                                      },
                                                    },
                                                  },
                                                  max_items: 1,
                                                },
                                              },
                                            },
                                            min_items: 1,
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                },
              },
              max_items: 25,
            },
            backend_defaults: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  client_policy: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        tls: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              enforce: { type: 'bool', optional: true },
                              ports: {
                                type: ['set', 'number'],
                                optional: true,
                              },
                            },
                            block_types: {
                              certificate: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    file: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          certificate_chain: {
                                            type: 'string',
                                            required: true,
                                          },
                                          private_key: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                    sds: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          secret_name: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              validation: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    subject_alternative_names: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          match: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                exact: {
                                                  type: ['set', 'string'],
                                                  required: true,
                                                },
                                              },
                                            },
                                            min_items: 1,
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                    trust: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          acm: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                certificate_authority_arns: {
                                                  type: ['set', 'string'],
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          file: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                certificate_chain: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          sds: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                secret_name: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            listener: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  connection_pool: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        grpc: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              max_requests: { type: 'number', required: true },
                            },
                          },
                          max_items: 1,
                        },
                        http: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              max_connections: {
                                type: 'number',
                                required: true,
                              },
                              max_pending_requests: {
                                type: 'number',
                                optional: true,
                              },
                            },
                          },
                          max_items: 1,
                        },
                        http2: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              max_requests: { type: 'number', required: true },
                            },
                          },
                          max_items: 1,
                        },
                        tcp: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              max_connections: {
                                type: 'number',
                                required: true,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  health_check: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        healthy_threshold: { type: 'number', required: true },
                        interval_millis: { type: 'number', required: true },
                        path: { type: 'string', optional: true },
                        port: {
                          type: 'number',
                          optional: true,
                          computed: true,
                        },
                        protocol: { type: 'string', required: true },
                        timeout_millis: { type: 'number', required: true },
                        unhealthy_threshold: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                  outlier_detection: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        max_ejection_percent: {
                          type: 'number',
                          required: true,
                        },
                        max_server_errors: { type: 'number', required: true },
                      },
                      block_types: {
                        base_ejection_duration: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              unit: { type: 'string', required: true },
                              value: { type: 'number', required: true },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                        interval: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              unit: { type: 'string', required: true },
                              value: { type: 'number', required: true },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  port_mapping: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        port: { type: 'number', required: true },
                        protocol: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                  timeout: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        grpc: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              idle: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    unit: { type: 'string', required: true },
                                    value: { type: 'number', required: true },
                                  },
                                },
                                max_items: 1,
                              },
                              per_request: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    unit: { type: 'string', required: true },
                                    value: { type: 'number', required: true },
                                  },
                                },
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                        http: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              idle: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    unit: { type: 'string', required: true },
                                    value: { type: 'number', required: true },
                                  },
                                },
                                max_items: 1,
                              },
                              per_request: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    unit: { type: 'string', required: true },
                                    value: { type: 'number', required: true },
                                  },
                                },
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                        http2: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              idle: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    unit: { type: 'string', required: true },
                                    value: { type: 'number', required: true },
                                  },
                                },
                                max_items: 1,
                              },
                              per_request: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    unit: { type: 'string', required: true },
                                    value: { type: 'number', required: true },
                                  },
                                },
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                        tcp: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              idle: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    unit: { type: 'string', required: true },
                                    value: { type: 'number', required: true },
                                  },
                                },
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  tls: {
                    nesting_mode: 'list',
                    block: {
                      attributes: { mode: { type: 'string', required: true } },
                      block_types: {
                        certificate: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              acm: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    certificate_arn: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              file: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    certificate_chain: {
                                      type: 'string',
                                      required: true,
                                    },
                                    private_key: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              sds: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    secret_name: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                        validation: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              subject_alternative_names: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    match: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          exact: {
                                            type: ['set', 'string'],
                                            required: true,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                max_items: 1,
                              },
                              trust: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    file: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          certificate_chain: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                    sds: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          secret_name: {
                                            type: 'string',
                                            required: true,
                                          },
                                        },
                                      },
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            logging: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  access_log: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        file: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              path: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            service_discovery: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  aws_cloud_map: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        attributes: { type: ['map', 'string'], optional: true },
                        namespace_name: { type: 'string', required: true },
                        service_name: { type: 'string', required: true },
                      },
                    },
                    max_items: 1,
                  },
                  dns: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        hostname: { type: 'string', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_appmesh_virtual_node',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      mesh_name: { type: 'string', required: true },
      mesh_owner: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_owner: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      spec: {
        nesting_mode: 'list',
        block: {
          block_types: {
            listener: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  port_mapping: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        port: { type: 'number', required: true },
                        protocol: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_appmesh_virtual_router',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      mesh_name: { type: 'string', required: true },
      mesh_owner: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_owner: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      spec: {
        nesting_mode: 'list',
        block: {
          block_types: {
            provider: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  virtual_node: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        virtual_node_name: { type: 'string', required: true },
                      },
                    },
                    max_items: 1,
                  },
                  virtual_router: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        virtual_router_name: { type: 'string', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_appmesh_virtual_service',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      expires: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      key: { type: 'string', computed: true, sensitive: true },
    },
    title: 'aws_appsync_api_key',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      service_role_arn: { type: 'string', optional: true },
      type: { type: 'string', required: true },
      dynamodb_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          region: { type: 'string', optional: true, computed: true },
          table_name: { type: 'string', required: true },
          use_caller_credentials: { type: 'boolean', optional: true },
        },
      },
      elasticsearch_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          endpoint: { type: 'string', required: true },
          region: { type: 'string', optional: true, computed: true },
        },
      },
      http_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { endpoint: { type: 'string', required: true } },
      },
      lambda_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { function_arn: { type: 'string', required: true } },
      },
    },
    title: 'aws_appsync_datasource',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      data_source: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      function_id: { type: 'string', computed: true },
      function_version: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      request_mapping_template: { type: 'string', required: true },
      response_mapping_template: { type: 'string', required: true },
    },
    title: 'aws_appsync_function',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      authentication_type: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      schema: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      uris: { type: 'object', computed: true },
      xray_enabled: { type: 'boolean', optional: true },
      additional_authentication_provider: {
        nesting_mode: 'list',
        properties: { authentication_type: { type: 'string', required: true } },
      },
      log_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cloudwatch_logs_role_arn: { type: 'string', required: true },
          exclude_verbose_content: { type: 'boolean', optional: true },
          field_log_level: { type: 'string', required: true },
        },
      },
      openid_connect_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          auth_ttl: { type: 'number', optional: true },
          client_id: { type: 'string', optional: true },
          iat_ttl: { type: 'number', optional: true },
          issuer: { type: 'string', required: true },
        },
      },
      user_pool_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          app_id_client_regex: { type: 'string', optional: true },
          aws_region: { type: 'string', optional: true, computed: true },
          default_action: { type: 'string', required: true },
          user_pool_id: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_appsync_graphql_api',
    type: 'resource',
  },
  {
    properties: {
      api_id: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      data_source: { type: 'string', optional: true },
      field: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      kind: { type: 'string', optional: true },
      request_template: { type: 'string', required: true },
      response_template: { type: 'string', required: true },
      type: { type: 'string', required: true },
      caching_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          caching_keys: { type: 'object', optional: true },
          ttl: { type: 'number', optional: true },
        },
      },
      pipeline_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          functions: { type: ['array', 'string'], optional: true },
        },
      },
    },
    title: 'aws_appsync_resolver',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      force_destroy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      encryption_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          encryption_option: { type: 'string', required: true },
          kms_key: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_athena_database',
    type: 'resource',
  },
  {
    properties: {
      database: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      query: { type: 'string', required: true },
      workgroup: { type: 'string', optional: true },
    },
    title: 'aws_athena_named_query',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      force_destroy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      state: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bytes_scanned_cutoff_per_query: { type: 'number', optional: true },
          enforce_workgroup_configuration: { type: 'boolean', optional: true },
          publish_cloudwatch_metrics_enabled: {
            type: 'boolean',
            optional: true,
          },
        },
      },
    },
    title: 'aws_athena_workgroup',
    type: 'resource',
  },
  {
    properties: {
      alb_target_group_arn: { type: 'string', optional: true },
      autoscaling_group_name: { type: 'string', required: true },
      elb: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_autoscaling_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', optional: true, computed: true },
      capacity_rebalance: { type: 'boolean', optional: true },
      default_cooldown: { type: 'number', optional: true, computed: true },
      desired_capacity: { type: 'number', optional: true, computed: true },
      enabled_metrics: { type: 'object', optional: true },
      force_delete: { type: 'boolean', optional: true },
      force_delete_warm_pool: { type: 'boolean', optional: true },
      health_check_grace_period: { type: 'number', optional: true },
      health_check_type: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      launch_configuration: { type: 'string', optional: true },
      load_balancers: { type: 'object', optional: true },
      max_instance_lifetime: { type: 'number', optional: true },
      max_size: { type: 'number', required: true },
      metrics_granularity: { type: 'string', optional: true },
      min_elb_capacity: { type: 'number', optional: true },
      min_size: { type: 'number', required: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      placement_group: { type: 'string', optional: true },
      protect_from_scale_in: { type: 'boolean', optional: true },
      service_linked_role_arn: {
        type: 'string',
        optional: true,
        computed: true,
      },
      suspended_processes: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      target_group_arns: { type: 'object', optional: true },
      termination_policies: { type: ['array', 'string'], optional: true },
      vpc_zone_identifier: { type: 'object', optional: true, computed: true },
      wait_for_capacity_timeout: { type: 'string', optional: true },
      wait_for_elb_capacity: { type: 'number', optional: true },
      initial_lifecycle_hook: {
        nesting_mode: 'set',
        properties: {
          default_result: { type: 'string', optional: true, computed: true },
          heartbeat_timeout: { type: 'number', optional: true },
          lifecycle_transition: { type: 'string', required: true },
          name: { type: 'string', required: true },
          notification_metadata: { type: 'string', optional: true },
          notification_target_arn: { type: 'string', optional: true },
          role_arn: { type: 'string', optional: true },
        },
      },
      instance_refresh: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          strategy: { type: 'string', required: true },
          triggers: { type: 'object', optional: true },
        },
      },
      launch_template: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', optional: true, computed: true },
          name: { type: 'string', optional: true, computed: true },
          version: { type: 'string', optional: true },
        },
      },
      mixed_instances_policy: {
        nesting_mode: 'list',
        block: {
          block_types: {
            instances_distribution: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  on_demand_allocation_strategy: {
                    type: 'string',
                    optional: true,
                    computed: true,
                  },
                  on_demand_base_capacity: {
                    type: 'number',
                    optional: true,
                    computed: true,
                  },
                  on_demand_percentage_above_base_capacity: {
                    type: 'number',
                    optional: true,
                    computed: true,
                  },
                  spot_allocation_strategy: {
                    type: 'string',
                    optional: true,
                    computed: true,
                  },
                  spot_instance_pools: {
                    type: 'number',
                    optional: true,
                    computed: true,
                  },
                  spot_max_price: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
            launch_template: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  launch_template_specification: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        launch_template_id: {
                          type: 'string',
                          optional: true,
                          computed: true,
                        },
                        launch_template_name: {
                          type: 'string',
                          optional: true,
                          computed: true,
                        },
                        version: { type: 'string', optional: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                  override: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        instance_type: { type: 'string', optional: true },
                        weighted_capacity: { type: 'string', optional: true },
                      },
                      block_types: {
                        launch_template_specification: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              launch_template_id: {
                                type: 'string',
                                optional: true,
                                computed: true,
                              },
                              launch_template_name: {
                                type: 'string',
                                optional: true,
                                computed: true,
                              },
                              version: { type: 'string', optional: true },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      tag: {
        nesting_mode: 'set',
        properties: {
          key: { type: 'string', required: true },
          propagate_at_launch: { type: 'boolean', required: true },
          value: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { delete: { type: 'string', optional: true } },
      },
      warm_pool: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          max_group_prepared_capacity: { type: 'number', optional: true },
          min_size: { type: 'number', optional: true },
          pool_state: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_autoscaling_group',
    type: 'resource',
  },
  {
    properties: {
      autoscaling_group_name: { type: 'string', required: true },
      default_result: { type: 'string', optional: true, computed: true },
      heartbeat_timeout: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      lifecycle_transition: { type: 'string', required: true },
      name: { type: 'string', required: true },
      notification_metadata: { type: 'string', optional: true },
      notification_target_arn: { type: 'string', optional: true },
      role_arn: { type: 'string', optional: true },
    },
    title: 'aws_autoscaling_lifecycle_hook',
    type: 'resource',
  },
  {
    properties: {
      group_names: { type: 'object', required: true },
      id: { type: 'string', optional: true, computed: true },
      notifications: { type: 'object', required: true },
      topic_arn: { type: 'string', required: true },
    },
    title: 'aws_autoscaling_notification',
    type: 'resource',
  },
  {
    properties: {
      adjustment_type: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      autoscaling_group_name: { type: 'string', required: true },
      cooldown: { type: 'number', optional: true },
      estimated_instance_warmup: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      metric_aggregation_type: {
        type: 'string',
        optional: true,
        computed: true,
      },
      min_adjustment_magnitude: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      policy_type: { type: 'string', optional: true },
      scaling_adjustment: { type: 'number', optional: true },
      step_adjustment: {
        nesting_mode: 'set',
        properties: {
          metric_interval_lower_bound: { type: 'string', optional: true },
          metric_interval_upper_bound: { type: 'string', optional: true },
          scaling_adjustment: { type: 'number', required: true },
        },
      },
      target_tracking_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          disable_scale_in: { type: 'boolean', optional: true },
          target_value: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_autoscaling_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      autoscaling_group_name: { type: 'string', required: true },
      desired_capacity: { type: 'number', optional: true, computed: true },
      end_time: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      max_size: { type: 'number', optional: true, computed: true },
      min_size: { type: 'number', optional: true, computed: true },
      recurrence: { type: 'string', optional: true, computed: true },
      scheduled_action_name: { type: 'string', required: true },
      start_time: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_autoscaling_schedule',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      scaling_plan_version: { type: 'number', computed: true },
      application_source: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          cloudformation_stack_arn: { type: 'string', optional: true },
        },
      },
      scaling_instruction: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          disable_dynamic_scaling: { type: 'boolean', optional: true },
          max_capacity: { type: 'number', required: true },
          min_capacity: { type: 'number', required: true },
          predictive_scaling_max_capacity_behavior: {
            type: 'string',
            optional: true,
          },
          predictive_scaling_max_capacity_buffer: {
            type: 'number',
            optional: true,
          },
          predictive_scaling_mode: { type: 'string', optional: true },
          resource_id: { type: 'string', required: true },
          scalable_dimension: { type: 'string', required: true },
          scaling_policy_update_behavior: { type: 'string', optional: true },
          scheduled_action_buffer_time: { type: 'number', optional: true },
          service_namespace: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_autoscalingplans_scaling_plan',
    type: 'resource',
  },
  {
    properties: {
      global_settings: { type: 'object', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_backup_global_settings',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', computed: true },
      advanced_backup_setting: {
        nesting_mode: 'set',
        properties: {
          backup_options: { type: 'object', required: true },
          resource_type: { type: 'string', required: true },
        },
      },
      rule: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          completion_window: { type: 'number', optional: true },
          enable_continuous_backup: { type: 'boolean', optional: true },
          recovery_point_tags: { type: 'object', optional: true },
          rule_name: { type: 'string', required: true },
          schedule: { type: 'string', optional: true },
          start_window: { type: 'number', optional: true },
          target_vault_name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_backup_plan',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      resource_type_opt_in_preference: { type: 'object', required: true },
    },
    title: 'aws_backup_region_settings',
    type: 'resource',
  },
  {
    properties: {
      iam_role_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      plan_id: { type: 'string', required: true },
      resources: { type: 'object', optional: true },
      selection_tag: {
        nesting_mode: 'set',
        properties: {
          key: { type: 'string', required: true },
          type: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_backup_selection',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_arn: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      recovery_points: { type: 'number', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_backup_vault',
    type: 'resource',
  },
  {
    properties: {
      backup_vault_arn: { type: 'string', computed: true },
      backup_vault_events: { type: 'object', required: true },
      backup_vault_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      sns_topic_arn: { type: 'string', required: true },
    },
    title: 'aws_backup_vault_notifications',
    type: 'resource',
  },
  {
    properties: {
      backup_vault_arn: { type: 'string', computed: true },
      backup_vault_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_backup_vault_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      compute_environment_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      compute_environment_name_prefix: { type: 'string', optional: true },
      ecs_cluster_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      service_role: { type: 'string', required: true },
      state: { type: 'string', optional: true },
      status: { type: 'string', computed: true },
      status_reason: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', required: true },
      compute_resources: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allocation_strategy: { type: 'string', optional: true },
          bid_percentage: { type: 'number', optional: true },
          desired_vcpus: { type: 'number', optional: true, computed: true },
          ec2_key_pair: { type: 'string', optional: true },
          image_id: { type: 'string', optional: true },
          instance_role: { type: 'string', required: true },
          instance_type: { type: 'object', required: true },
          max_vcpus: { type: 'number', required: true },
          min_vcpus: { type: 'number', required: true },
          security_group_ids: { type: 'object', required: true },
          spot_iam_fleet_role: { type: 'string', optional: true },
          subnets: { type: 'object', required: true },
          tags: { type: 'object', optional: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_batch_compute_environment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      container_properties: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      parameters: { type: 'object', optional: true },
      revision: { type: 'number', computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', required: true },
      retry_strategy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { attempts: { type: 'number', optional: true } },
      },
      timeout: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          attempt_duration_seconds: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_batch_job_definition',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      compute_environments: { type: ['array', 'string'], required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      priority: { type: 'number', required: true },
      state: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_batch_job_queue',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      budget_type: { type: 'string', required: true },
      cost_filters: { type: 'object', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      limit_amount: { type: 'string', required: true },
      limit_unit: { type: 'string', required: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      time_period_end: { type: 'string', optional: true },
      time_period_start: { type: 'string', required: true },
      time_unit: { type: 'string', required: true },
      cost_types: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          include_credit: { type: 'boolean', optional: true },
          include_discount: { type: 'boolean', optional: true },
          include_other_subscription: { type: 'boolean', optional: true },
          include_recurring: { type: 'boolean', optional: true },
          include_refund: { type: 'boolean', optional: true },
          include_subscription: { type: 'boolean', optional: true },
          include_support: { type: 'boolean', optional: true },
          include_tax: { type: 'boolean', optional: true },
          include_upfront: { type: 'boolean', optional: true },
          use_amortized: { type: 'boolean', optional: true },
          use_blended: { type: 'boolean', optional: true },
        },
      },
      notification: {
        nesting_mode: 'set',
        properties: {
          comparison_operator: { type: 'string', required: true },
          notification_type: { type: 'string', required: true },
          subscriber_email_addresses: { type: 'object', optional: true },
          subscriber_sns_topic_arns: { type: 'object', optional: true },
          threshold: { type: 'number', required: true },
          threshold_type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_budgets_budget',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      automatic_stop_time_minutes: { type: 'number', optional: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_type: { type: 'string', required: true },
      name: { type: 'string', required: true },
      owner_arn: { type: 'string', optional: true, computed: true },
      subnet_id: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', computed: true },
    },
    title: 'aws_cloud9_environment_ec2',
    type: 'resource',
  },
  {
    properties: {
      capabilities: { type: 'object', optional: true },
      disable_rollback: { type: 'boolean', optional: true },
      iam_role_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      notification_arns: { type: 'object', optional: true },
      on_failure: { type: 'string', optional: true },
      outputs: { type: 'object', computed: true },
      parameters: { type: 'object', optional: true, computed: true },
      policy_body: { type: 'string', optional: true, computed: true },
      policy_url: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      template_body: { type: 'string', optional: true, computed: true },
      template_url: { type: 'string', optional: true },
      timeout_in_minutes: { type: 'number', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_cloudformation_stack',
    type: 'resource',
  },
  {
    properties: {
      administration_role_arn: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      capabilities: { type: 'object', optional: true },
      description: { type: 'string', optional: true },
      execution_role_name: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      parameters: { type: 'object', optional: true },
      permission_model: { type: 'string', optional: true },
      stack_set_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      template_body: { type: 'string', optional: true, computed: true },
      template_url: { type: 'string', optional: true },
      auto_deployment: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true },
          retain_stacks_on_account_removal: { type: 'boolean', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { update: { type: 'string', optional: true } },
      },
    },
    title: 'aws_cloudformation_stack_set',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      parameter_overrides: { type: 'object', optional: true },
      region: { type: 'string', optional: true, computed: true },
      retain_stack: { type: 'boolean', optional: true },
      stack_id: { type: 'string', computed: true },
      stack_set_name: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_cloudformation_stack_set_instance',
    type: 'resource',
  },
  {
    properties: {
      comment: { type: 'string', optional: true },
      default_ttl: { type: 'number', optional: true },
      etag: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      max_ttl: { type: 'number', optional: true },
      min_ttl: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      parameters_in_cache_key_and_forwarded_to_origin: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enable_accept_encoding_brotli: { type: 'boolean', optional: true },
          enable_accept_encoding_gzip: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_cloudfront_cache_policy',
    type: 'resource',
  },
  {
    properties: {
      aliases: { type: 'object', optional: true },
      arn: { type: 'string', computed: true },
      caller_reference: { type: 'string', computed: true },
      comment: { type: 'string', optional: true },
      default_root_object: { type: 'string', optional: true },
      domain_name: { type: 'string', computed: true },
      enabled: { type: 'boolean', required: true },
      etag: { type: 'string', computed: true },
      hosted_zone_id: { type: 'string', computed: true },
      http_version: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      in_progress_validation_batches: { type: 'number', computed: true },
      is_ipv6_enabled: { type: 'boolean', optional: true },
      last_modified_time: { type: 'string', computed: true },
      price_class: { type: 'string', optional: true },
      retain_on_delete: { type: 'boolean', optional: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      trusted_key_groups: {
        type: [
          'array',
          [
            'object',
            {
              enabled: 'bool',
              items: [
                'list',
                [
                  'object',
                  { key_group_id: 'string', key_pair_ids: ['set', 'string'] },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      trusted_signers: {
        type: [
          'array',
          [
            'object',
            {
              enabled: 'bool',
              items: [
                'list',
                [
                  'object',
                  {
                    aws_account_number: 'string',
                    key_pair_ids: ['set', 'string'],
                  },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      wait_for_deployment: { type: 'boolean', optional: true },
      web_acl_id: { type: 'string', optional: true },
      custom_error_response: {
        nesting_mode: 'set',
        properties: {
          error_caching_min_ttl: { type: 'number', optional: true },
          error_code: { type: 'number', required: true },
          response_code: { type: 'number', optional: true },
          response_page_path: { type: 'string', optional: true },
        },
      },
      default_cache_behavior: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          allowed_methods: { type: 'object', required: true },
          cache_policy_id: { type: 'string', optional: true },
          cached_methods: { type: 'object', required: true },
          compress: { type: 'boolean', optional: true },
          default_ttl: { type: 'number', optional: true, computed: true },
          field_level_encryption_id: { type: 'string', optional: true },
          max_ttl: { type: 'number', optional: true, computed: true },
          min_ttl: { type: 'number', optional: true },
          origin_request_policy_id: { type: 'string', optional: true },
          realtime_log_config_arn: { type: 'string', optional: true },
          smooth_streaming: { type: 'boolean', optional: true },
          target_origin_id: { type: 'string', required: true },
          trusted_key_groups: {
            type: ['array', 'string'],
            optional: true,
            computed: true,
          },
          trusted_signers: {
            type: ['array', 'string'],
            optional: true,
            computed: true,
          },
          viewer_protocol_policy: { type: 'string', required: true },
        },
      },
      logging_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket: { type: 'string', required: true },
          include_cookies: { type: 'boolean', optional: true },
          prefix: { type: 'string', optional: true },
        },
      },
      ordered_cache_behavior: {
        nesting_mode: 'list',
        properties: {
          allowed_methods: { type: 'object', required: true },
          cache_policy_id: { type: 'string', optional: true },
          cached_methods: { type: 'object', required: true },
          compress: { type: 'boolean', optional: true },
          default_ttl: { type: 'number', optional: true, computed: true },
          field_level_encryption_id: { type: 'string', optional: true },
          max_ttl: { type: 'number', optional: true, computed: true },
          min_ttl: { type: 'number', optional: true },
          origin_request_policy_id: { type: 'string', optional: true },
          path_pattern: { type: 'string', required: true },
          realtime_log_config_arn: { type: 'string', optional: true },
          smooth_streaming: { type: 'boolean', optional: true },
          target_origin_id: { type: 'string', required: true },
          trusted_key_groups: { type: ['array', 'string'], optional: true },
          trusted_signers: { type: ['array', 'string'], optional: true },
          viewer_protocol_policy: { type: 'string', required: true },
        },
      },
      origin: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          domain_name: { type: 'string', required: true },
          origin_id: { type: 'string', required: true },
          origin_path: { type: 'string', optional: true },
        },
      },
      origin_group: {
        nesting_mode: 'set',
        properties: { origin_id: { type: 'string', required: true } },
      },
      restrictions: {
        nesting_mode: 'list',
        block: {
          block_types: {
            geo_restriction: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  locations: {
                    type: ['set', 'string'],
                    optional: true,
                    computed: true,
                  },
                  restriction_type: { type: 'string', required: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
      viewer_certificate: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          acm_certificate_arn: { type: 'string', optional: true },
          cloudfront_default_certificate: { type: 'boolean', optional: true },
          iam_certificate_id: { type: 'string', optional: true },
          minimum_protocol_version: { type: 'string', optional: true },
          ssl_support_method: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_cloudfront_distribution',
    type: 'resource',
  },
  {
    properties: {
      comment: { type: 'string', optional: true },
      etag: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      items: { type: 'object', required: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_cloudfront_key_group',
    type: 'resource',
  },
  {
    properties: {
      caller_reference: { type: 'string', computed: true },
      cloudfront_access_identity_path: { type: 'string', computed: true },
      comment: { type: 'string', optional: true },
      etag: { type: 'string', computed: true },
      iam_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      s3_canonical_user_id: { type: 'string', computed: true },
    },
    title: 'aws_cloudfront_origin_access_identity',
    type: 'resource',
  },
  {
    properties: {
      comment: { type: 'string', optional: true },
      etag: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      cookies_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { cookie_behavior: { type: 'string', required: true } },
      },
      headers_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { header_behavior: { type: 'string', optional: true } },
      },
      query_strings_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          query_string_behavior: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_cloudfront_origin_request_policy',
    type: 'resource',
  },
  {
    properties: {
      caller_reference: { type: 'string', computed: true },
      comment: { type: 'string', optional: true },
      encoded_key: { type: 'string', required: true },
      etag: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_cloudfront_public_key',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      fields: { type: 'object', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      sampling_rate: { type: 'number', required: true },
      endpoint: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { stream_type: { type: 'string', required: true } },
      },
    },
    title: 'aws_cloudfront_realtime_log_config',
    type: 'resource',
  },
  {
    properties: {
      cluster_certificates: {
        type: [
          'array',
          [
            'object',
            {
              aws_hardware_certificate: 'string',
              cluster_certificate: 'string',
              cluster_csr: 'string',
              hsm_certificate: 'string',
              manufacturer_hardware_certificate: 'string',
            },
          ],
        ],
        computed: true,
      },
      cluster_id: { type: 'string', computed: true },
      cluster_state: { type: 'string', computed: true },
      hsm_type: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      security_group_id: { type: 'string', computed: true },
      source_backup_identifier: { type: 'string', optional: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_cloudhsm_v2_cluster',
    type: 'resource',
  },
  {
    properties: {
      availability_zone: { type: 'string', optional: true, computed: true },
      cluster_id: { type: 'string', required: true },
      hsm_eni_id: { type: 'string', computed: true },
      hsm_id: { type: 'string', computed: true },
      hsm_state: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', optional: true, computed: true },
      subnet_id: { type: 'string', optional: true, computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_cloudhsm_v2_hsm',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cloud_watch_logs_group_arn: { type: 'string', optional: true },
      cloud_watch_logs_role_arn: { type: 'string', optional: true },
      enable_log_file_validation: { type: 'boolean', optional: true },
      enable_logging: { type: 'boolean', optional: true },
      home_region: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      include_global_service_events: { type: 'boolean', optional: true },
      is_multi_region_trail: { type: 'boolean', optional: true },
      is_organization_trail: { type: 'boolean', optional: true },
      kms_key_id: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      s3_bucket_name: { type: 'string', required: true },
      s3_key_prefix: { type: 'string', optional: true },
      sns_topic_name: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      event_selector: {
        nesting_mode: 'list',
        max_items: 5,
        properties: {
          include_management_events: { type: 'boolean', optional: true },
          read_write_type: { type: 'string', optional: true },
        },
      },
      insight_selector: {
        nesting_mode: 'list',
        properties: { insight_type: { type: 'string', required: true } },
      },
    },
    title: 'aws_cloudtrail',
    type: 'resource',
  },
  {
    properties: {
      actions_enabled: { type: 'boolean', optional: true },
      alarm_actions: { type: 'object', optional: true },
      alarm_description: { type: 'string', optional: true },
      alarm_name: { type: 'string', required: true },
      alarm_rule: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      insufficient_data_actions: { type: 'object', optional: true },
      ok_actions: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_cloudwatch_composite_alarm',
    type: 'resource',
  },
  {
    properties: {
      dashboard_arn: { type: 'string', computed: true },
      dashboard_body: { type: 'string', required: true },
      dashboard_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_cloudwatch_dashboard',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      event_pattern: { type: 'string', optional: true },
      event_source_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      retention_days: { type: 'number', optional: true },
    },
    title: 'aws_cloudwatch_event_archive',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_cloudwatch_event_bus',
    type: 'resource',
  },
  {
    properties: {
      action: { type: 'string', optional: true },
      event_bus_name: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      principal: { type: 'string', required: true },
      statement_id: { type: 'string', required: true },
      condition: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          key: { type: 'string', required: true },
          type: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_cloudwatch_event_permission',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      event_bus_name: { type: 'string', optional: true },
      event_pattern: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      is_enabled: { type: 'boolean', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      role_arn: { type: 'string', optional: true },
      schedule_expression: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_cloudwatch_event_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      event_bus_name: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      input: { type: 'string', optional: true },
      input_path: { type: 'string', optional: true },
      role_arn: { type: 'string', optional: true },
      rule: { type: 'string', required: true },
      target_id: { type: 'string', optional: true, computed: true },
      batch_target: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          array_size: { type: 'number', optional: true },
          job_attempts: { type: 'number', optional: true },
          job_definition: { type: 'string', required: true },
          job_name: { type: 'string', required: true },
        },
      },
      dead_letter_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { arn: { type: 'string', optional: true } },
      },
      ecs_target: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          group: { type: 'string', optional: true },
          launch_type: { type: 'string', optional: true },
          platform_version: { type: 'string', optional: true },
          task_count: { type: 'number', optional: true },
          task_definition_arn: { type: 'string', required: true },
        },
      },
      input_transformer: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          input_paths: { type: 'object', optional: true },
          input_template: { type: 'string', required: true },
        },
      },
      kinesis_target: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { partition_key_path: { type: 'string', optional: true } },
      },
      retry_policy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          maximum_event_age_in_seconds: { type: 'number', optional: true },
          maximum_retry_attempts: { type: 'number', optional: true },
        },
      },
      run_command_targets: {
        nesting_mode: 'list',
        max_items: 5,
        properties: {
          key: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
      sqs_target: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { message_group_id: { type: 'string', optional: true } },
      },
    },
    title: 'aws_cloudwatch_event_target',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      role_arn: { type: 'string', required: true },
      target_arn: { type: 'string', required: true },
    },
    title: 'aws_cloudwatch_log_destination',
    type: 'resource',
  },
  {
    properties: {
      access_policy: { type: 'string', required: true },
      destination_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_cloudwatch_log_destination_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      retention_in_days: { type: 'number', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_cloudwatch_log_group',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      log_group_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      pattern: { type: 'string', required: true },
      metric_transformation: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          default_value: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          namespace: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_cloudwatch_log_metric_filter',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy_document: { type: 'string', required: true },
      policy_name: { type: 'string', required: true },
    },
    title: 'aws_cloudwatch_log_resource_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      log_group_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_cloudwatch_log_stream',
    type: 'resource',
  },
  {
    properties: {
      destination_arn: { type: 'string', required: true },
      distribution: { type: 'string', optional: true },
      filter_pattern: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      log_group_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      role_arn: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_cloudwatch_log_subscription_filter',
    type: 'resource',
  },
  {
    properties: {
      actions_enabled: { type: 'boolean', optional: true },
      alarm_actions: { type: 'object', optional: true },
      alarm_description: { type: 'string', optional: true },
      alarm_name: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      comparison_operator: { type: 'string', required: true },
      datapoints_to_alarm: { type: 'number', optional: true },
      dimensions: { type: 'object', optional: true },
      evaluate_low_sample_count_percentiles: {
        type: 'string',
        optional: true,
        computed: true,
      },
      evaluation_periods: { type: 'number', required: true },
      extended_statistic: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      insufficient_data_actions: { type: 'object', optional: true },
      metric_name: { type: 'string', optional: true },
      namespace: { type: 'string', optional: true },
      ok_actions: { type: 'object', optional: true },
      period: { type: 'number', optional: true },
      statistic: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      threshold: { type: 'number', optional: true },
      threshold_metric_id: { type: 'string', optional: true },
      treat_missing_data: { type: 'string', optional: true },
      unit: { type: 'string', optional: true },
      metric_query: {
        nesting_mode: 'set',
        properties: {
          expression: { type: 'string', optional: true },
          id: { type: 'string', required: true },
          label: { type: 'string', optional: true },
          return_data: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_cloudwatch_metric_alarm',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      log_group_names: { type: ['array', 'string'], optional: true },
      name: { type: 'string', required: true },
      query_definition_id: { type: 'string', computed: true },
      query_string: { type: 'string', required: true },
    },
    title: 'aws_cloudwatch_query_definition',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      asset_size_bytes: { type: 'number', computed: true },
      created_time: { type: 'string', computed: true },
      domain: { type: 'string', required: true },
      encryption_key: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      owner: { type: 'string', computed: true },
      repository_count: { type: 'number', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_codeartifact_domain',
    type: 'resource',
  },
  {
    properties: {
      domain: { type: 'string', required: true },
      domain_owner: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      policy_document: { type: 'string', required: true },
      policy_revision: { type: 'string', optional: true, computed: true },
      resource_arn: { type: 'string', computed: true },
    },
    title: 'aws_codeartifact_domain_permissions_policy',
    type: 'resource',
  },
  {
    properties: {
      administrator_account: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      domain: { type: 'string', required: true },
      domain_owner: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      repository: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      external_connections: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          external_connection_name: { type: 'string', required: true },
          package_format: { type: 'string', computed: true },
          status: { type: 'string', computed: true },
        },
      },
      upstream: {
        nesting_mode: 'list',
        properties: { repository_name: { type: 'string', required: true } },
      },
    },
    title: 'aws_codeartifact_repository',
    type: 'resource',
  },
  {
    properties: {
      domain: { type: 'string', required: true },
      domain_owner: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      policy_document: { type: 'string', required: true },
      policy_revision: { type: 'string', optional: true, computed: true },
      repository: { type: 'string', required: true },
      resource_arn: { type: 'string', computed: true },
    },
    title: 'aws_codeartifact_repository_permissions_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      badge_enabled: { type: 'boolean', optional: true },
      badge_url: { type: 'string', computed: true },
      build_timeout: { type: 'number', optional: true },
      description: { type: 'string', optional: true, computed: true },
      encryption_key: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      queued_timeout: { type: 'number', optional: true },
      service_role: { type: 'string', required: true },
      source_version: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      artifacts: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          artifact_identifier: { type: 'string', optional: true },
          encryption_disabled: { type: 'boolean', optional: true },
          location: { type: 'string', optional: true },
          name: { type: 'string', optional: true },
          namespace_type: { type: 'string', optional: true },
          override_artifact_name: { type: 'boolean', optional: true },
          packaging: { type: 'string', optional: true },
          path: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      cache: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          location: { type: 'string', optional: true },
          modes: { type: ['array', 'string'], optional: true },
          type: { type: 'string', optional: true },
        },
      },
      environment: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          certificate: { type: 'string', optional: true },
          compute_type: { type: 'string', required: true },
          image: { type: 'string', required: true },
          image_pull_credentials_type: { type: 'string', optional: true },
          privileged_mode: { type: 'boolean', optional: true },
          type: { type: 'string', required: true },
        },
      },
      logs_config: {
        nesting_mode: 'list',
        block: {
          block_types: {
            cloudwatch_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  group_name: { type: 'string', optional: true },
                  status: { type: 'string', optional: true },
                  stream_name: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
            s3_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  encryption_disabled: { type: 'bool', optional: true },
                  location: { type: 'string', optional: true },
                  status: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      secondary_artifacts: {
        nesting_mode: 'set',
        properties: {
          artifact_identifier: { type: 'string', required: true },
          encryption_disabled: { type: 'boolean', optional: true },
          location: { type: 'string', optional: true },
          name: { type: 'string', optional: true },
          namespace_type: { type: 'string', optional: true },
          override_artifact_name: { type: 'boolean', optional: true },
          packaging: { type: 'string', optional: true },
          path: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      secondary_sources: {
        nesting_mode: 'set',
        properties: {
          buildspec: { type: 'string', optional: true },
          git_clone_depth: { type: 'number', optional: true },
          insecure_ssl: { type: 'boolean', optional: true },
          location: { type: 'string', optional: true },
          report_build_status: { type: 'boolean', optional: true },
          source_identifier: { type: 'string', required: true },
          type: { type: 'string', required: true },
        },
      },
      source: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          buildspec: { type: 'string', optional: true },
          git_clone_depth: { type: 'number', optional: true },
          insecure_ssl: { type: 'boolean', optional: true },
          location: { type: 'string', optional: true },
          report_build_status: { type: 'boolean', optional: true },
          type: { type: 'string', required: true },
        },
      },
      vpc_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          security_group_ids: { type: 'object', required: true },
          subnets: { type: 'object', required: true },
          vpc_id: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_codebuild_project',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created: { type: 'string', computed: true },
      delete_reports: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', required: true },
      export_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { type: { type: 'string', required: true } },
      },
    },
    title: 'aws_codebuild_report_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auth_type: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      server_type: { type: 'string', required: true },
      token: { type: 'string', required: true, sensitive: true },
      user_name: { type: 'string', optional: true },
    },
    title: 'aws_codebuild_source_credential',
    type: 'resource',
  },
  {
    properties: {
      branch_filter: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      payload_url: { type: 'string', computed: true },
      project_name: { type: 'string', required: true },
      secret: { type: 'string', computed: true, sensitive: true },
      url: { type: 'string', computed: true },
      filter_group: {
        nesting_mode: 'set',
        block: {
          block_types: {
            filter: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  exclude_matched_pattern: { type: 'bool', optional: true },
                  pattern: { type: 'string', required: true },
                  type: { type: 'string', required: true },
                },
              },
            },
          },
        },
      },
    },
    title: 'aws_codebuild_webhook',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      clone_url_http: { type: 'string', computed: true },
      clone_url_ssh: { type: 'string', computed: true },
      default_branch: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      repository_id: { type: 'string', computed: true },
      repository_name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_codecommit_repository',
    type: 'resource',
  },
  {
    properties: {
      configuration_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      repository_name: { type: 'string', required: true },
      trigger: {
        nesting_mode: 'set',
        min_items: 1,
        max_items: 10,
        properties: {
          branches: { type: ['array', 'string'], optional: true },
          custom_data: { type: 'string', optional: true },
          destination_arn: { type: 'string', required: true },
          events: { type: ['array', 'string'], required: true },
          name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_codecommit_trigger',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      compute_platform: { type: 'string', optional: true },
      github_account_name: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      linked_to_github: { type: 'boolean', computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_codedeploy_app',
    type: 'resource',
  },
  {
    properties: {
      compute_platform: { type: 'string', optional: true },
      deployment_config_id: { type: 'string', computed: true },
      deployment_config_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      minimum_healthy_hosts: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          type: { type: 'string', optional: true },
          value: { type: 'number', optional: true },
        },
      },
      traffic_routing_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { type: { type: 'string', optional: true } },
      },
    },
    title: 'aws_codedeploy_deployment_config',
    type: 'resource',
  },
  {
    properties: {
      app_name: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      autoscaling_groups: { type: 'object', optional: true },
      compute_platform: { type: 'string', computed: true },
      deployment_config_name: { type: 'string', optional: true },
      deployment_group_id: { type: 'string', computed: true },
      deployment_group_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      service_role_arn: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      alarm_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          alarms: { type: 'object', optional: true },
          enabled: { type: 'boolean', optional: true },
          ignore_poll_alarm_failure: { type: 'boolean', optional: true },
        },
      },
      auto_rollback_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true },
          events: { type: 'object', optional: true },
        },
      },
      blue_green_deployment_config: {
        nesting_mode: 'list',
        block: {
          block_types: {
            deployment_ready_option: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  action_on_timeout: { type: 'string', optional: true },
                  wait_time_in_minutes: { type: 'number', optional: true },
                },
              },
              max_items: 1,
            },
            green_fleet_provisioning_option: {
              nesting_mode: 'list',
              block: {
                attributes: { action: { type: 'string', optional: true } },
              },
              max_items: 1,
            },
            terminate_blue_instances_on_deployment_success: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  action: { type: 'string', optional: true },
                  termination_wait_time_in_minutes: {
                    type: 'number',
                    optional: true,
                  },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      deployment_style: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          deployment_option: { type: 'string', optional: true },
          deployment_type: { type: 'string', optional: true },
        },
      },
      ec2_tag_filter: {
        nesting_mode: 'set',
        properties: {
          key: { type: 'string', optional: true },
          type: { type: 'string', optional: true },
          value: { type: 'string', optional: true },
        },
      },
      ec2_tag_set: {
        nesting_mode: 'set',
        block: {
          block_types: {
            ec2_tag_filter: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  key: { type: 'string', optional: true },
                  type: { type: 'string', optional: true },
                  value: { type: 'string', optional: true },
                },
              },
            },
          },
        },
      },
      ecs_service: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cluster_name: { type: 'string', required: true },
          service_name: { type: 'string', required: true },
        },
      },
      load_balancer_info: {
        nesting_mode: 'list',
        block: {
          block_types: {
            elb_info: {
              nesting_mode: 'set',
              block: {
                attributes: { name: { type: 'string', optional: true } },
              },
            },
            target_group_info: {
              nesting_mode: 'set',
              block: {
                attributes: { name: { type: 'string', optional: true } },
              },
            },
            target_group_pair_info: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  prod_traffic_route: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        listener_arns: {
                          type: ['set', 'string'],
                          required: true,
                        },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                  target_group: {
                    nesting_mode: 'list',
                    block: {
                      attributes: { name: { type: 'string', required: true } },
                    },
                    min_items: 1,
                    max_items: 2,
                  },
                  test_traffic_route: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        listener_arns: {
                          type: ['set', 'string'],
                          required: true,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      on_premises_instance_tag_filter: {
        nesting_mode: 'set',
        properties: {
          key: { type: 'string', optional: true },
          type: { type: 'string', optional: true },
          value: { type: 'string', optional: true },
        },
      },
      trigger_configuration: {
        nesting_mode: 'set',
        properties: {
          trigger_events: { type: 'object', required: true },
          trigger_name: { type: 'string', required: true },
          trigger_target_arn: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_codedeploy_deployment_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      role_arn: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      artifact_store: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          location: { type: 'string', required: true },
          region: { type: 'string', optional: true, computed: true },
          type: { type: 'string', required: true },
        },
      },
      stage: {
        nesting_mode: 'list',
        min_items: 2,
        properties: { name: { type: 'string', required: true } },
      },
    },
    title: 'aws_codepipeline',
    type: 'resource',
  },
  {
    properties: {
      authentication: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      target_action: { type: 'string', required: true },
      target_pipeline: { type: 'string', required: true },
      url: { type: 'string', computed: true },
      authentication_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allowed_ip_range: { type: 'string', optional: true },
          secret_token: { type: 'string', optional: true, sensitive: true },
        },
      },
      filter: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          json_path: { type: 'string', required: true },
          match_equals: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_codepipeline_webhook',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      connection_status: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      provider_type: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_codestarconnections_connection',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      detail_type: { type: 'string', required: true },
      event_type_ids: { type: 'object', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource: { type: 'string', required: true },
      status: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      target: {
        nesting_mode: 'set',
        max_items: 10,
        properties: {
          address: { type: 'string', required: true },
          status: { type: 'string', computed: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_codestarnotifications_notification_rule',
    type: 'resource',
  },
  {
    properties: {
      allow_unauthenticated_identities: { type: 'boolean', optional: true },
      arn: { type: 'string', computed: true },
      developer_provider_name: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      identity_pool_name: { type: 'string', required: true },
      openid_connect_provider_arns: { type: 'object', optional: true },
      saml_provider_arns: { type: ['array', 'string'], optional: true },
      supported_login_providers: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      cognito_identity_providers: {
        nesting_mode: 'set',
        properties: {
          client_id: { type: 'string', optional: true },
          provider_name: { type: 'string', optional: true },
          server_side_token_check: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_cognito_identity_pool',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      identity_pool_id: { type: 'string', required: true },
      roles: { type: 'object', required: true },
      role_mapping: {
        nesting_mode: 'set',
        properties: {
          ambiguous_role_resolution: { type: 'string', optional: true },
          identity_provider: { type: 'string', required: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_cognito_identity_pool_roles_attachment',
    type: 'resource',
  },
  {
    properties: {
      attribute_mapping: { type: 'object', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      idp_identifiers: { type: ['array', 'string'], optional: true },
      provider_details: { type: 'object', required: true },
      provider_name: { type: 'string', required: true },
      provider_type: { type: 'string', required: true },
      user_pool_id: { type: 'string', required: true },
    },
    title: 'aws_cognito_identity_provider',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      identifier: { type: 'string', required: true },
      name: { type: 'string', required: true },
      scope_identifiers: { type: ['array', 'string'], computed: true },
      user_pool_id: { type: 'string', required: true },
      scope: {
        nesting_mode: 'set',
        max_items: 100,
        properties: {
          scope_description: { type: 'string', required: true },
          scope_name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_cognito_resource_server',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      precedence: { type: 'number', optional: true },
      role_arn: { type: 'string', optional: true },
      user_pool_id: { type: 'string', required: true },
    },
    title: 'aws_cognito_user_group',
    type: 'resource',
  },
  {
    properties: {
      alias_attributes: { type: 'object', optional: true },
      arn: { type: 'string', computed: true },
      auto_verified_attributes: { type: 'object', optional: true },
      creation_date: { type: 'string', computed: true },
      email_verification_message: {
        type: 'string',
        optional: true,
        computed: true,
      },
      email_verification_subject: {
        type: 'string',
        optional: true,
        computed: true,
      },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_modified_date: { type: 'string', computed: true },
      mfa_configuration: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      sms_authentication_message: { type: 'string', optional: true },
      sms_verification_message: {
        type: 'string',
        optional: true,
        computed: true,
      },
      tags: { type: 'object', optional: true },
      username_attributes: { type: ['array', 'string'], optional: true },
      account_recovery_setting: {
        nesting_mode: 'list',
        block: {
          block_types: {
            recovery_mechanism: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  name: { type: 'string', required: true },
                  priority: { type: 'number', required: true },
                },
              },
              min_items: 1,
            },
          },
        },
        max_items: 1,
      },
      admin_create_user_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_admin_create_user_only: { type: 'boolean', optional: true },
        },
      },
      device_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          challenge_required_on_new_device: { type: 'boolean', optional: true },
          device_only_remembered_on_user_prompt: {
            type: 'boolean',
            optional: true,
          },
        },
      },
      email_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          configuration_set: { type: 'string', optional: true },
          email_sending_account: { type: 'string', optional: true },
          from_email_address: { type: 'string', optional: true },
          reply_to_email_address: { type: 'string', optional: true },
          source_arn: { type: 'string', optional: true },
        },
      },
      lambda_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          create_auth_challenge: { type: 'string', optional: true },
          custom_message: { type: 'string', optional: true },
          define_auth_challenge: { type: 'string', optional: true },
          post_authentication: { type: 'string', optional: true },
          post_confirmation: { type: 'string', optional: true },
          pre_authentication: { type: 'string', optional: true },
          pre_sign_up: { type: 'string', optional: true },
          pre_token_generation: { type: 'string', optional: true },
          user_migration: { type: 'string', optional: true },
          verify_auth_challenge_response: { type: 'string', optional: true },
        },
      },
      password_policy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          minimum_length: { type: 'number', optional: true },
          require_lowercase: { type: 'boolean', optional: true },
          require_numbers: { type: 'boolean', optional: true },
          require_symbols: { type: 'boolean', optional: true },
          require_uppercase: { type: 'boolean', optional: true },
          temporary_password_validity_days: { type: 'number', optional: true },
        },
      },
      schema: {
        nesting_mode: 'set',
        max_items: 50,
        properties: {
          attribute_data_type: { type: 'string', required: true },
          developer_only_attribute: { type: 'boolean', optional: true },
          mutable: { type: 'boolean', optional: true },
          name: { type: 'string', required: true },
          required: { type: 'boolean', optional: true },
        },
      },
      sms_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          external_id: { type: 'string', required: true },
          sns_caller_arn: { type: 'string', required: true },
        },
      },
      software_token_mfa_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { enabled: { type: 'boolean', required: true } },
      },
      user_pool_add_ons: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          advanced_security_mode: { type: 'string', required: true },
        },
      },
      username_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { case_sensitive: { type: 'boolean', required: true } },
      },
      verification_message_template: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          default_email_option: { type: 'string', optional: true },
          email_message: { type: 'string', optional: true, computed: true },
          email_message_by_link: {
            type: 'string',
            optional: true,
            computed: true,
          },
          email_subject: { type: 'string', optional: true, computed: true },
          email_subject_by_link: {
            type: 'string',
            optional: true,
            computed: true,
          },
          sms_message: { type: 'string', optional: true, computed: true },
        },
      },
    },
    title: 'aws_cognito_user_pool',
    type: 'resource',
  },
  {
    properties: {
      access_token_validity: { type: 'number', optional: true },
      allowed_oauth_flows: { type: 'object', optional: true },
      allowed_oauth_flows_user_pool_client: { type: 'boolean', optional: true },
      allowed_oauth_scopes: { type: 'object', optional: true },
      callback_urls: { type: 'object', optional: true },
      client_secret: { type: 'string', computed: true, sensitive: true },
      default_redirect_uri: { type: 'string', optional: true },
      explicit_auth_flows: { type: 'object', optional: true },
      generate_secret: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      id_token_validity: { type: 'number', optional: true },
      logout_urls: { type: 'object', optional: true },
      name: { type: 'string', required: true },
      prevent_user_existence_errors: {
        type: 'string',
        optional: true,
        computed: true,
      },
      read_attributes: { type: 'object', optional: true },
      refresh_token_validity: { type: 'number', optional: true },
      supported_identity_providers: { type: 'object', optional: true },
      user_pool_id: { type: 'string', required: true },
      write_attributes: { type: 'object', optional: true },
      analytics_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          application_arn: { type: 'string', optional: true },
          application_id: { type: 'string', optional: true },
          external_id: { type: 'string', optional: true },
          role_arn: { type: 'string', optional: true, computed: true },
          user_data_shared: { type: 'boolean', optional: true },
        },
      },
      token_validity_units: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          access_token: { type: 'string', optional: true },
          id_token: { type: 'string', optional: true },
          refresh_token: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_cognito_user_pool_client',
    type: 'resource',
  },
  {
    properties: {
      aws_account_id: { type: 'string', computed: true },
      certificate_arn: { type: 'string', optional: true },
      cloudfront_distribution_arn: { type: 'string', computed: true },
      domain: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      s3_bucket: { type: 'string', computed: true },
      user_pool_id: { type: 'string', required: true },
      version: { type: 'string', computed: true },
    },
    title: 'aws_cognito_user_pool_domain',
    type: 'resource',
  },
  {
    properties: {
      client_id: { type: 'string', optional: true },
      creation_date: { type: 'string', computed: true },
      css: { type: 'string', optional: true },
      css_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_file: { type: 'string', optional: true },
      image_url: { type: 'string', computed: true },
      last_modified_date: { type: 'string', computed: true },
      user_pool_id: { type: 'string', required: true },
    },
    title: 'aws_cognito_user_pool_ui_customization',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_config_aggregate_authorization',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      input_parameters: { type: 'string', optional: true },
      maximum_execution_frequency: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      rule_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      scope: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          compliance_resource_id: { type: 'string', optional: true },
          compliance_resource_types: { type: 'object', optional: true },
          tag_key: { type: 'string', optional: true },
          tag_value: { type: 'string', optional: true },
        },
      },
      source: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          owner: { type: 'string', required: true },
          source_identifier: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_config_config_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      account_aggregation_source: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          account_ids: { type: ['array', 'string'], required: true },
          all_regions: { type: 'boolean', optional: true },
          regions: { type: ['array', 'string'], optional: true },
        },
      },
      organization_aggregation_source: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          all_regions: { type: 'boolean', optional: true },
          regions: { type: ['array', 'string'], optional: true },
          role_arn: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_config_configuration_aggregator',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      role_arn: { type: 'string', required: true },
      recording_group: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          all_supported: { type: 'boolean', optional: true },
          include_global_resource_types: { type: 'boolean', optional: true },
          resource_types: { type: 'object', optional: true },
        },
      },
    },
    title: 'aws_config_configuration_recorder',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      is_enabled: { type: 'boolean', required: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_config_configuration_recorder_status',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      delivery_s3_bucket: { type: 'string', optional: true },
      delivery_s3_key_prefix: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      template_body: { type: 'string', optional: true },
      template_s3_uri: { type: 'string', optional: true },
      input_parameter: {
        nesting_mode: 'set',
        max_items: 60,
        properties: {
          parameter_name: { type: 'string', required: true },
          parameter_value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_config_conformance_pack',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      s3_bucket_name: { type: 'string', required: true },
      s3_key_prefix: { type: 'string', optional: true },
      sns_topic_arn: { type: 'string', optional: true },
      snapshot_delivery_properties: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { delivery_frequency: { type: 'string', optional: true } },
      },
    },
    title: 'aws_config_delivery_channel',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      excluded_accounts: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      input_parameters: { type: 'string', optional: true },
      lambda_function_arn: { type: 'string', required: true },
      maximum_execution_frequency: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      resource_id_scope: { type: 'string', optional: true },
      resource_types_scope: { type: 'object', optional: true },
      tag_key_scope: { type: 'string', optional: true },
      tag_value_scope: { type: 'string', optional: true },
      trigger_types: { type: 'object', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_config_organization_custom_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      excluded_accounts: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      input_parameters: { type: 'string', optional: true },
      maximum_execution_frequency: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      resource_id_scope: { type: 'string', optional: true },
      resource_types_scope: { type: 'object', optional: true },
      rule_identifier: { type: 'string', required: true },
      tag_key_scope: { type: 'string', optional: true },
      tag_value_scope: { type: 'string', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_config_organization_managed_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      config_rule_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      resource_type: { type: 'string', optional: true },
      target_id: { type: 'string', required: true },
      target_type: { type: 'string', required: true },
      target_version: { type: 'string', optional: true },
      parameter: {
        nesting_mode: 'set',
        max_items: 25,
        properties: {
          name: { type: 'string', required: true },
          resource_value: { type: 'string', optional: true },
          static_value: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_config_remediation_configuration',
    type: 'resource',
  },
  {
    properties: {
      additional_artifacts: { type: 'object', optional: true },
      additional_schema_elements: { type: 'object', required: true },
      compression: { type: 'string', required: true },
      format: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      refresh_closed_reports: { type: 'boolean', optional: true },
      report_name: { type: 'string', required: true },
      report_versioning: { type: 'string', optional: true },
      s3_bucket: { type: 'string', required: true },
      s3_prefix: { type: 'string', optional: true },
      s3_region: { type: 'string', required: true },
      time_unit: { type: 'string', required: true },
    },
    title: 'aws_cur_report_definition',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bgp_asn: { type: 'string', required: true },
      device_name: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', required: true },
    },
    title: 'aws_customer_gateway',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_datapipeline_pipeline',
    type: 'resource',
  },
  {
    properties: {
      activation_key: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_datasync_agent',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      efs_file_system_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      subdirectory: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      uri: { type: 'string', computed: true },
      ec2_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          security_group_arns: { type: 'object', required: true },
          subnet_arn: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_datasync_location_efs',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      creation_time: { type: 'string', computed: true },
      domain: { type: 'string', optional: true },
      fsx_filesystem_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      password: { type: 'string', required: true, sensitive: true },
      security_group_arns: { type: 'object', required: true },
      subdirectory: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      uri: { type: 'string', computed: true },
      user: { type: 'string', required: true },
    },
    title: 'aws_datasync_location_fsx_windows_file_system',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      server_hostname: { type: 'string', required: true },
      subdirectory: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      uri: { type: 'string', computed: true },
      on_prem_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { agent_arns: { type: 'object', required: true } },
      },
    },
    title: 'aws_datasync_location_nfs',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      s3_bucket_arn: { type: 'string', required: true },
      subdirectory: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      uri: { type: 'string', computed: true },
      s3_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          bucket_access_role_arn: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_datasync_location_s3',
    type: 'resource',
  },
  {
    properties: {
      agent_arns: { type: 'object', required: true },
      arn: { type: 'string', computed: true },
      domain: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      password: { type: 'string', required: true, sensitive: true },
      server_hostname: { type: 'string', required: true },
      subdirectory: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      uri: { type: 'string', computed: true },
      user: { type: 'string', required: true },
      mount_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { version: { type: 'string', optional: true } },
      },
    },
    title: 'aws_datasync_location_smb',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cloudwatch_log_group_arn: { type: 'string', optional: true },
      destination_location_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      source_location_arn: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          atime: { type: 'string', optional: true },
          bytes_per_second: { type: 'number', optional: true },
          gid: { type: 'string', optional: true },
          mtime: { type: 'string', optional: true },
          posix_permissions: { type: 'string', optional: true },
          preserve_deleted_files: { type: 'string', optional: true },
          preserve_devices: { type: 'string', optional: true },
          uid: { type: 'string', optional: true },
          verify_mode: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_datasync_task',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', optional: true },
      cluster_address: { type: 'string', computed: true },
      cluster_name: { type: 'string', required: true },
      configuration_endpoint: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      iam_role_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      maintenance_window: { type: 'string', optional: true, computed: true },
      node_type: { type: 'string', required: true },
      nodes: {
        type: [
          'array',
          [
            'object',
            {
              address: 'string',
              availability_zone: 'string',
              id: 'string',
              port: 'number',
            },
          ],
        ],
        computed: true,
      },
      notification_topic_arn: { type: 'string', optional: true },
      parameter_group_name: { type: 'string', optional: true, computed: true },
      port: { type: 'number', computed: true },
      replication_factor: { type: 'number', required: true },
      security_group_ids: { type: 'object', optional: true, computed: true },
      subnet_group_name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      server_side_encryption: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { enabled: { type: 'boolean', optional: true } },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dax_cluster',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      parameters: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_dax_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      subnet_ids: { type: 'object', required: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_dax_subnet_group',
    type: 'resource',
  },
  {
    properties: {
      allocated_storage: { type: 'number', computed: true },
      availability_zones: { type: ['array', 'string'], computed: true },
      db_cluster_identifier: { type: 'string', required: true },
      db_cluster_snapshot_arn: { type: 'string', computed: true },
      db_cluster_snapshot_identifier: { type: 'string', required: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      license_model: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      snapshot_type: { type: 'string', computed: true },
      source_db_cluster_snapshot_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      storage_encrypted: { type: 'boolean', computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_db_cluster_snapshot',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      customer_aws_id: { type: 'string', computed: true },
      enabled: { type: 'boolean', optional: true },
      event_categories: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      sns_topic: { type: 'string', required: true },
      source_ids: { type: 'object', optional: true },
      source_type: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_db_event_subscription',
    type: 'resource',
  },
  {
    properties: {
      address: { type: 'string', computed: true },
      allocated_storage: { type: 'number', optional: true, computed: true },
      allow_major_version_upgrade: { type: 'boolean', optional: true },
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      auto_minor_version_upgrade: { type: 'boolean', optional: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      backup_retention_period: {
        type: 'number',
        optional: true,
        computed: true,
      },
      backup_window: { type: 'string', optional: true, computed: true },
      ca_cert_identifier: { type: 'string', optional: true, computed: true },
      character_set_name: { type: 'string', optional: true, computed: true },
      copy_tags_to_snapshot: { type: 'boolean', optional: true },
      db_subnet_group_name: { type: 'string', optional: true, computed: true },
      delete_automated_backups: { type: 'boolean', optional: true },
      deletion_protection: { type: 'boolean', optional: true },
      domain: { type: 'string', optional: true },
      domain_iam_role_name: { type: 'string', optional: true },
      enabled_cloudwatch_logs_exports: { type: 'object', optional: true },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true, computed: true },
      engine_version: { type: 'string', optional: true, computed: true },
      final_snapshot_identifier: { type: 'string', optional: true },
      hosted_zone_id: { type: 'string', computed: true },
      iam_database_authentication_enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      identifier: { type: 'string', optional: true, computed: true },
      identifier_prefix: { type: 'string', optional: true, computed: true },
      instance_class: { type: 'string', required: true },
      iops: { type: 'number', optional: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      latest_restorable_time: { type: 'string', computed: true },
      license_model: { type: 'string', optional: true, computed: true },
      maintenance_window: { type: 'string', optional: true, computed: true },
      max_allocated_storage: { type: 'number', optional: true },
      monitoring_interval: { type: 'number', optional: true },
      monitoring_role_arn: { type: 'string', optional: true, computed: true },
      multi_az: { type: 'boolean', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      option_group_name: { type: 'string', optional: true, computed: true },
      parameter_group_name: { type: 'string', optional: true, computed: true },
      password: { type: 'string', optional: true, sensitive: true },
      performance_insights_enabled: { type: 'boolean', optional: true },
      performance_insights_kms_key_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      performance_insights_retention_period: {
        type: 'number',
        optional: true,
        computed: true,
      },
      port: { type: 'number', optional: true, computed: true },
      publicly_accessible: { type: 'boolean', optional: true },
      replicas: { type: ['array', 'string'], computed: true },
      replicate_source_db: { type: 'string', optional: true },
      resource_id: { type: 'string', computed: true },
      security_group_names: { type: 'object', optional: true },
      skip_final_snapshot: { type: 'boolean', optional: true },
      snapshot_identifier: { type: 'string', optional: true, computed: true },
      status: { type: 'string', computed: true },
      storage_encrypted: { type: 'boolean', optional: true },
      storage_type: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      timezone: { type: 'string', optional: true, computed: true },
      username: { type: 'string', optional: true, computed: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      restore_to_point_in_time: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          restore_time: { type: 'string', optional: true },
          source_db_instance_identifier: { type: 'string', optional: true },
          source_dbi_resource_id: { type: 'string', optional: true },
          use_latest_restorable_time: { type: 'boolean', optional: true },
        },
      },
      s3_import: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_name: { type: 'string', required: true },
          bucket_prefix: { type: 'string', optional: true },
          ingestion_role: { type: 'string', required: true },
          source_engine: { type: 'string', required: true },
          source_engine_version: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_db_instance',
    type: 'resource',
  },
  {
    properties: {
      db_instance_identifier: { type: 'string', required: true },
      feature_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      role_arn: { type: 'string', required: true },
    },
    title: 'aws_db_instance_role_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      engine_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      major_engine_version: { type: 'string', required: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      option_group_description: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      option: {
        nesting_mode: 'set',
        properties: {
          db_security_group_memberships: { type: 'object', optional: true },
          option_name: { type: 'string', required: true },
          port: { type: 'number', optional: true },
          version: { type: 'string', optional: true },
          vpc_security_group_memberships: { type: 'object', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { delete: { type: 'string', optional: true } },
      },
    },
    title: 'aws_db_option_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      parameter: {
        nesting_mode: 'set',
        properties: {
          apply_method: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_db_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      debug_logging: { type: 'boolean', optional: true },
      endpoint: { type: 'string', computed: true },
      engine_family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      idle_client_timeout: { type: 'number', optional: true, computed: true },
      name: { type: 'string', required: true },
      require_tls: { type: 'boolean', optional: true },
      role_arn: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      vpc_subnet_ids: { type: 'object', required: true },
      auth: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          auth_scheme: { type: 'string', optional: true },
          description: { type: 'string', optional: true },
          iam_auth: { type: 'string', optional: true },
          secret_arn: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_db_proxy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      db_proxy_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      connection_pool_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          connection_borrow_timeout: { type: 'number', optional: true },
          init_query: { type: 'string', optional: true },
          max_connections_percent: { type: 'number', optional: true },
          max_idle_connections_percent: { type: 'number', optional: true },
          session_pinning_filters: { type: 'object', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_db_proxy_default_target_group',
    type: 'resource',
  },
  {
    properties: {
      db_cluster_identifier: { type: 'string', optional: true },
      db_instance_identifier: { type: 'string', optional: true },
      db_proxy_name: { type: 'string', required: true },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      port: { type: 'number', computed: true },
      rds_resource_id: { type: 'string', computed: true },
      target_arn: { type: 'string', computed: true },
      target_group_name: { type: 'string', required: true },
      tracked_cluster_id: { type: 'string', computed: true },
      type: { type: 'string', computed: true },
    },
    title: 'aws_db_proxy_target',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      ingress: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          cidr: { type: 'string', optional: true },
          security_group_id: { type: 'string', optional: true, computed: true },
          security_group_name: {
            type: 'string',
            optional: true,
            computed: true,
          },
          security_group_owner_id: {
            type: 'string',
            optional: true,
            computed: true,
          },
        },
      },
    },
    title: 'aws_db_security_group',
    type: 'resource',
  },
  {
    properties: {
      allocated_storage: { type: 'number', computed: true },
      availability_zone: { type: 'string', computed: true },
      db_instance_identifier: { type: 'string', required: true },
      db_snapshot_arn: { type: 'string', computed: true },
      db_snapshot_identifier: { type: 'string', required: true },
      encrypted: { type: 'boolean', computed: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      iops: { type: 'number', computed: true },
      kms_key_id: { type: 'string', computed: true },
      license_model: { type: 'string', computed: true },
      option_group_name: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      snapshot_type: { type: 'string', computed: true },
      source_db_snapshot_identifier: { type: 'string', computed: true },
      source_region: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      storage_type: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { read: { type: 'string', optional: true } },
      },
    },
    title: 'aws_db_snapshot',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_db_subnet_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      default_network_acl_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      subnet_ids: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      egress: {
        nesting_mode: 'set',
        properties: {
          action: { type: 'string', required: true },
          cidr_block: { type: 'string', optional: true },
          from_port: { type: 'number', required: true },
          icmp_code: { type: 'number', optional: true },
          icmp_type: { type: 'number', optional: true },
          ipv6_cidr_block: { type: 'string', optional: true },
          protocol: { type: 'string', required: true },
          rule_no: { type: 'number', required: true },
          to_port: { type: 'number', required: true },
        },
      },
      ingress: {
        nesting_mode: 'set',
        properties: {
          action: { type: 'string', required: true },
          cidr_block: { type: 'string', optional: true },
          from_port: { type: 'number', required: true },
          icmp_code: { type: 'number', optional: true },
          icmp_type: { type: 'number', optional: true },
          ipv6_cidr_block: { type: 'string', optional: true },
          protocol: { type: 'string', required: true },
          rule_no: { type: 'number', required: true },
          to_port: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_default_network_acl',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      default_route_table_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      propagating_vgws: { type: 'object', optional: true },
      route: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_default_route_table',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      egress: { type: 'object', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      ingress: { type: 'object', optional: true, computed: true },
      name: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      revoke_rules_on_delete: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_default_security_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      assign_ipv6_address_on_creation: { type: 'boolean', computed: true },
      availability_zone: { type: 'string', required: true },
      availability_zone_id: { type: 'string', computed: true },
      cidr_block: { type: 'string', computed: true },
      customer_owned_ipv4_pool: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_cidr_block: { type: 'string', computed: true },
      ipv6_cidr_block_association_id: { type: 'string', computed: true },
      map_customer_owned_ip_on_launch: { type: 'boolean', optional: true },
      map_public_ip_on_launch: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      outpost_arn: { type: 'string', optional: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      tags_all: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_default_subnet',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      assign_generated_ipv6_cidr_block: { type: 'boolean', computed: true },
      cidr_block: { type: 'string', computed: true },
      default_network_acl_id: { type: 'string', computed: true },
      default_route_table_id: { type: 'string', computed: true },
      default_security_group_id: { type: 'string', computed: true },
      dhcp_options_id: { type: 'string', computed: true },
      enable_classiclink: { type: 'boolean', optional: true, computed: true },
      enable_classiclink_dns_support: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      enable_dns_hostnames: { type: 'boolean', optional: true, computed: true },
      enable_dns_support: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_tenancy: { type: 'string', computed: true },
      ipv6_association_id: { type: 'string', computed: true },
      ipv6_cidr_block: { type: 'string', computed: true },
      main_route_table_id: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      tags_all: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_default_vpc',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain_name: { type: 'string', computed: true },
      domain_name_servers: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      netbios_name_servers: { type: ['array', 'string'], optional: true },
      netbios_node_type: { type: 'string', optional: true },
      ntp_servers: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_default_vpc_dhcp_options',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_devicefarm_project',
    type: 'resource',
  },
  {
    properties: {
      directory_id: { type: 'string', required: true },
      dns_ips: { type: ['array', 'string'], required: true },
      id: { type: 'string', optional: true, computed: true },
      remote_domain_name: { type: 'string', required: true },
    },
    title: 'aws_directory_service_conditional_forwarder',
    type: 'resource',
  },
  {
    properties: {
      access_url: { type: 'string', computed: true },
      alias: { type: 'string', optional: true, computed: true },
      description: { type: 'string', optional: true },
      dns_ip_addresses: { type: 'object', computed: true },
      edition: { type: 'string', optional: true, computed: true },
      enable_sso: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      password: { type: 'string', required: true, sensitive: true },
      security_group_id: { type: 'string', computed: true },
      short_name: { type: 'string', optional: true, computed: true },
      size: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', optional: true },
      connect_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          availability_zones: { type: 'object', computed: true },
          connect_ips: { type: 'object', computed: true },
          customer_dns_ips: { type: 'object', required: true },
          customer_username: { type: 'string', required: true },
          subnet_ids: { type: 'object', required: true },
          vpc_id: { type: 'string', required: true },
        },
      },
      vpc_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          availability_zones: { type: 'object', computed: true },
          subnet_ids: { type: 'object', required: true },
          vpc_id: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_directory_service_directory',
    type: 'resource',
  },
  {
    properties: {
      directory_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      log_group_name: { type: 'string', required: true },
    },
    title: 'aws_directory_service_log_subscription',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', required: true },
      execution_role_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      state: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      policy_details: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          resource_types: { type: ['array', 'string'], required: true },
          target_tags: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_dlm_lifecycle_policy',
    type: 'resource',
  },
  {
    properties: {
      certificate_arn: { type: 'string', computed: true },
      certificate_id: { type: 'string', required: true },
      certificate_pem: { type: 'string', optional: true, sensitive: true },
      certificate_wallet: { type: 'string', optional: true, sensitive: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_dms_certificate',
    type: 'resource',
  },
  {
    properties: {
      certificate_arn: { type: 'string', optional: true, computed: true },
      database_name: { type: 'string', optional: true },
      endpoint_arn: { type: 'string', computed: true },
      endpoint_id: { type: 'string', required: true },
      endpoint_type: { type: 'string', required: true },
      engine_name: { type: 'string', required: true },
      extra_connection_attributes: {
        type: 'string',
        optional: true,
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      kms_key_arn: { type: 'string', optional: true, computed: true },
      password: { type: 'string', optional: true, sensitive: true },
      port: { type: 'number', optional: true },
      server_name: { type: 'string', optional: true },
      service_access_role: { type: 'string', optional: true },
      ssl_mode: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      username: { type: 'string', optional: true },
      elasticsearch_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          endpoint_uri: { type: 'string', required: true },
          error_retry_duration: { type: 'number', optional: true },
          full_load_error_percentage: { type: 'number', optional: true },
          service_access_role_arn: { type: 'string', required: true },
        },
      },
      kafka_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          broker: { type: 'string', required: true },
          topic: { type: 'string', optional: true },
        },
      },
      kinesis_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          message_format: { type: 'string', optional: true },
          service_access_role_arn: { type: 'string', optional: true },
          stream_arn: { type: 'string', optional: true },
        },
      },
      mongodb_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          auth_mechanism: { type: 'string', optional: true },
          auth_source: { type: 'string', optional: true },
          auth_type: { type: 'string', optional: true },
          docs_to_investigate: { type: 'string', optional: true },
          extract_doc_id: { type: 'string', optional: true },
          nesting_level: { type: 'string', optional: true },
        },
      },
      s3_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_folder: { type: 'string', optional: true },
          bucket_name: { type: 'string', optional: true },
          compression_type: { type: 'string', optional: true },
          csv_delimiter: { type: 'string', optional: true },
          csv_row_delimiter: { type: 'string', optional: true },
          date_partition_enabled: { type: 'boolean', optional: true },
          external_table_definition: { type: 'string', optional: true },
          service_access_role_arn: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dms_endpoint',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      enabled: { type: 'boolean', optional: true },
      event_categories: { type: 'object', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      sns_topic_arn: { type: 'string', required: true },
      source_ids: { type: 'object', optional: true },
      source_type: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dms_event_subscription',
    type: 'resource',
  },
  {
    properties: {
      allocated_storage: { type: 'number', optional: true, computed: true },
      allow_major_version_upgrade: { type: 'boolean', optional: true },
      apply_immediately: { type: 'boolean', optional: true },
      auto_minor_version_upgrade: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      availability_zone: { type: 'string', optional: true, computed: true },
      engine_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_arn: { type: 'string', optional: true, computed: true },
      multi_az: { type: 'boolean', optional: true, computed: true },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      publicly_accessible: { type: 'boolean', optional: true, computed: true },
      replication_instance_arn: { type: 'string', computed: true },
      replication_instance_class: { type: 'string', required: true },
      replication_instance_id: { type: 'string', required: true },
      replication_instance_private_ips: {
        type: ['array', 'string'],
        computed: true,
      },
      replication_instance_public_ips: {
        type: ['array', 'string'],
        computed: true,
      },
      replication_subnet_group_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dms_replication_instance',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      replication_subnet_group_arn: { type: 'string', computed: true },
      replication_subnet_group_description: { type: 'string', required: true },
      replication_subnet_group_id: { type: 'string', required: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_dms_replication_subnet_group',
    type: 'resource',
  },
  {
    properties: {
      cdc_start_time: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      migration_type: { type: 'string', required: true },
      replication_instance_arn: { type: 'string', required: true },
      replication_task_arn: { type: 'string', computed: true },
      replication_task_id: { type: 'string', required: true },
      replication_task_settings: { type: 'string', optional: true },
      source_endpoint_arn: { type: 'string', required: true },
      table_mappings: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      target_endpoint_arn: { type: 'string', required: true },
    },
    title: 'aws_dms_replication_task',
    type: 'resource',
  },
  {
    properties: {
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', optional: true, computed: true },
      backup_retention_period: { type: 'number', optional: true },
      cluster_identifier: { type: 'string', optional: true, computed: true },
      cluster_identifier_prefix: {
        type: 'string',
        optional: true,
        computed: true,
      },
      cluster_members: { type: 'object', optional: true, computed: true },
      cluster_resource_id: { type: 'string', computed: true },
      db_cluster_parameter_group_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      db_subnet_group_name: { type: 'string', optional: true, computed: true },
      deletion_protection: { type: 'boolean', optional: true },
      enabled_cloudwatch_logs_exports: {
        type: ['array', 'string'],
        optional: true,
      },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      final_snapshot_identifier: { type: 'string', optional: true },
      hosted_zone_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      master_password: { type: 'string', optional: true, sensitive: true },
      master_username: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true },
      preferred_backup_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      reader_endpoint: { type: 'string', computed: true },
      skip_final_snapshot: { type: 'boolean', optional: true },
      snapshot_identifier: { type: 'string', optional: true },
      storage_encrypted: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_docdb_cluster',
    type: 'resource',
  },
  {
    properties: {
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      auto_minor_version_upgrade: { type: 'boolean', optional: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      ca_cert_identifier: { type: 'string', optional: true, computed: true },
      cluster_identifier: { type: 'string', required: true },
      db_subnet_group_name: { type: 'string', computed: true },
      dbi_resource_id: { type: 'string', computed: true },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      identifier: { type: 'string', optional: true, computed: true },
      identifier_prefix: { type: 'string', optional: true, computed: true },
      instance_class: { type: 'string', required: true },
      kms_key_id: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      preferred_backup_window: { type: 'string', computed: true },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      promotion_tier: { type: 'number', optional: true },
      publicly_accessible: { type: 'boolean', computed: true },
      storage_encrypted: { type: 'boolean', computed: true },
      tags: { type: 'object', optional: true },
      writer: { type: 'boolean', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_docdb_cluster_instance',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      parameter: {
        nesting_mode: 'set',
        properties: {
          apply_method: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_docdb_cluster_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      availability_zones: { type: ['array', 'string'], computed: true },
      db_cluster_identifier: { type: 'string', required: true },
      db_cluster_snapshot_arn: { type: 'string', computed: true },
      db_cluster_snapshot_identifier: { type: 'string', required: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      snapshot_type: { type: 'string', computed: true },
      source_db_cluster_snapshot_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      storage_encrypted: { type: 'boolean', computed: true },
      vpc_id: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_docdb_cluster_snapshot',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_docdb_subnet_group',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      amazon_address: { type: 'string', optional: true, computed: true },
      aws_device: { type: 'string', computed: true },
      bgp_asn: { type: 'number', required: true },
      bgp_auth_key: { type: 'string', optional: true, computed: true },
      bgp_peer_id: { type: 'string', computed: true },
      bgp_status: { type: 'string', computed: true },
      customer_address: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      virtual_interface_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_bgp_peer',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      aws_device: { type: 'string', computed: true },
      bandwidth: { type: 'string', required: true },
      has_logical_redundancy: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      jumbo_frame_capable: { type: 'boolean', computed: true },
      location: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_dx_connection',
    type: 'resource',
  },
  {
    properties: {
      connection_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      lag_id: { type: 'string', required: true },
    },
    title: 'aws_dx_connection_association',
    type: 'resource',
  },
  {
    properties: {
      amazon_side_asn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owner_account_id: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_gateway',
    type: 'resource',
  },
  {
    properties: {
      allowed_prefixes: { type: 'object', optional: true, computed: true },
      associated_gateway_id: { type: 'string', optional: true, computed: true },
      associated_gateway_owner_account_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      associated_gateway_type: { type: 'string', computed: true },
      dx_gateway_association_id: { type: 'string', computed: true },
      dx_gateway_id: { type: 'string', required: true },
      dx_gateway_owner_account_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      proposal_id: { type: 'string', optional: true },
      vpn_gateway_id: { type: 'string', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_gateway_association',
    type: 'resource',
  },
  {
    properties: {
      allowed_prefixes: { type: 'object', optional: true, computed: true },
      associated_gateway_id: { type: 'string', required: true },
      associated_gateway_owner_account_id: { type: 'string', computed: true },
      associated_gateway_type: { type: 'string', computed: true },
      dx_gateway_id: { type: 'string', required: true },
      dx_gateway_owner_account_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_dx_gateway_association_proposal',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      amazon_address: { type: 'string', optional: true, computed: true },
      amazon_side_asn: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      aws_device: { type: 'string', computed: true },
      bgp_asn: { type: 'number', required: true },
      bgp_auth_key: { type: 'string', optional: true, computed: true },
      connection_id: { type: 'string', required: true },
      customer_address: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      jumbo_frame_capable: { type: 'boolean', computed: true },
      mtu: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      owner_account_id: { type: 'string', required: true },
      vlan: { type: 'number', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_hosted_private_virtual_interface',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      dx_gateway_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      virtual_interface_id: { type: 'string', required: true },
      vpn_gateway_id: { type: 'string', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_hosted_private_virtual_interface_accepter',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      amazon_address: { type: 'string', optional: true, computed: true },
      amazon_side_asn: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      aws_device: { type: 'string', computed: true },
      bgp_asn: { type: 'number', required: true },
      bgp_auth_key: { type: 'string', optional: true, computed: true },
      connection_id: { type: 'string', required: true },
      customer_address: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owner_account_id: { type: 'string', required: true },
      route_filter_prefixes: { type: 'object', required: true },
      vlan: { type: 'number', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_hosted_public_virtual_interface',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      virtual_interface_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_hosted_public_virtual_interface_accepter',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      amazon_address: { type: 'string', optional: true, computed: true },
      amazon_side_asn: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      aws_device: { type: 'string', computed: true },
      bgp_asn: { type: 'number', required: true },
      bgp_auth_key: { type: 'string', optional: true, computed: true },
      connection_id: { type: 'string', required: true },
      customer_address: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      jumbo_frame_capable: { type: 'boolean', computed: true },
      mtu: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      owner_account_id: { type: 'string', required: true },
      vlan: { type: 'number', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_hosted_transit_virtual_interface',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      dx_gateway_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      virtual_interface_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_hosted_transit_virtual_interface_accepter',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      connections_bandwidth: { type: 'string', required: true },
      force_destroy: { type: 'boolean', optional: true },
      has_logical_redundancy: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      jumbo_frame_capable: { type: 'boolean', computed: true },
      location: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_dx_lag',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      amazon_address: { type: 'string', optional: true, computed: true },
      amazon_side_asn: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      aws_device: { type: 'string', computed: true },
      bgp_asn: { type: 'number', required: true },
      bgp_auth_key: { type: 'string', optional: true, computed: true },
      connection_id: { type: 'string', required: true },
      customer_address: { type: 'string', optional: true, computed: true },
      dx_gateway_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      jumbo_frame_capable: { type: 'boolean', computed: true },
      mtu: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      vlan: { type: 'number', required: true },
      vpn_gateway_id: { type: 'string', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_private_virtual_interface',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      amazon_address: { type: 'string', optional: true, computed: true },
      amazon_side_asn: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      aws_device: { type: 'string', computed: true },
      bgp_asn: { type: 'number', required: true },
      bgp_auth_key: { type: 'string', optional: true, computed: true },
      connection_id: { type: 'string', required: true },
      customer_address: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      route_filter_prefixes: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      vlan: { type: 'number', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_public_virtual_interface',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      amazon_address: { type: 'string', optional: true, computed: true },
      amazon_side_asn: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      aws_device: { type: 'string', computed: true },
      bgp_asn: { type: 'number', required: true },
      bgp_auth_key: { type: 'string', optional: true, computed: true },
      connection_id: { type: 'string', required: true },
      customer_address: { type: 'string', optional: true, computed: true },
      dx_gateway_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      jumbo_frame_capable: { type: 'boolean', computed: true },
      mtu: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      vlan: { type: 'number', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dx_transit_virtual_interface',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      replica: {
        nesting_mode: 'set',
        min_items: 1,
        properties: { region_name: { type: 'string', required: true } },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_dynamodb_global_table',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      billing_mode: { type: 'string', optional: true },
      hash_key: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      range_key: { type: 'string', optional: true },
      read_capacity: { type: 'number', optional: true },
      stream_arn: { type: 'string', computed: true },
      stream_enabled: { type: 'boolean', optional: true },
      stream_label: { type: 'string', computed: true },
      stream_view_type: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      write_capacity: { type: 'number', optional: true },
      attribute: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          name: { type: 'string', required: true },
          type: { type: 'string', required: true },
        },
      },
      global_secondary_index: {
        nesting_mode: 'set',
        properties: {
          hash_key: { type: 'string', required: true },
          name: { type: 'string', required: true },
          non_key_attributes: { type: 'object', optional: true },
          projection_type: { type: 'string', required: true },
          range_key: { type: 'string', optional: true },
          read_capacity: { type: 'number', optional: true },
          write_capacity: { type: 'number', optional: true },
        },
      },
      local_secondary_index: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          non_key_attributes: { type: ['array', 'string'], optional: true },
          projection_type: { type: 'string', required: true },
          range_key: { type: 'string', required: true },
        },
      },
      point_in_time_recovery: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { enabled: { type: 'boolean', required: true } },
      },
      replica: {
        nesting_mode: 'set',
        properties: {
          kms_key_arn: { type: 'string', optional: true, computed: true },
          region_name: { type: 'string', required: true },
        },
      },
      server_side_encryption: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', required: true },
          kms_key_arn: { type: 'string', optional: true, computed: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
      ttl: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          attribute_name: { type: 'string', required: true },
          enabled: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_dynamodb_table',
    type: 'resource',
  },
  {
    properties: {
      hash_key: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      item: { type: 'string', required: true },
      range_key: { type: 'string', optional: true },
      table_name: { type: 'string', required: true },
    },
    title: 'aws_dynamodb_table_item',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      key_arn: { type: 'string', required: true },
    },
    title: 'aws_ebs_default_kms_key',
    type: 'resource',
  },
  {
    properties: {
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_ebs_encryption_by_default',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      data_encryption_key_id: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      encrypted: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      owner_alias: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      volume_id: { type: 'string', required: true },
      volume_size: { type: 'number', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ebs_snapshot',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      data_encryption_key_id: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      encrypted: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true },
      owner_alias: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      source_region: { type: 'string', required: true },
      source_snapshot_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      volume_id: { type: 'string', computed: true },
      volume_size: { type: 'number', computed: true },
    },
    title: 'aws_ebs_snapshot_copy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', required: true },
      encrypted: { type: 'boolean', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      iops: { type: 'number', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      multi_attach_enabled: { type: 'boolean', optional: true },
      outpost_arn: { type: 'string', optional: true },
      size: { type: 'number', optional: true, computed: true },
      snapshot_id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      throughput: { type: 'number', optional: true, computed: true },
      type: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_ebs_volume',
    type: 'resource',
  },
  {
    properties: {
      group_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      opt_in_status: { type: 'string', required: true },
    },
    title: 'aws_ec2_availability_zone_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', required: true },
      ebs_optimized: { type: 'boolean', optional: true },
      end_date: { type: 'string', optional: true },
      end_date_type: { type: 'string', optional: true },
      ephemeral_storage: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_count: { type: 'number', required: true },
      instance_match_criteria: { type: 'string', optional: true },
      instance_platform: { type: 'string', required: true },
      instance_type: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      tenancy: { type: 'string', optional: true },
    },
    title: 'aws_ec2_capacity_reservation',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_carrier_gateway',
    type: 'resource',
  },
  {
    properties: {
      access_group_id: { type: 'string', optional: true },
      authorize_all_groups: { type: 'boolean', optional: true },
      client_vpn_endpoint_id: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      target_network_cidr: { type: 'string', required: true },
    },
    title: 'aws_ec2_client_vpn_authorization_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      client_cidr_block: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      dns_name: { type: 'string', computed: true },
      dns_servers: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      server_certificate_arn: { type: 'string', required: true },
      split_tunnel: { type: 'boolean', optional: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      transport_protocol: { type: 'string', optional: true },
      authentication_options: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 2,
        properties: {
          active_directory_id: { type: 'string', optional: true },
          root_certificate_chain_arn: { type: 'string', optional: true },
          saml_provider_arn: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      connection_log_options: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          cloudwatch_log_group: { type: 'string', optional: true },
          cloudwatch_log_stream: { type: 'string', optional: true },
          enabled: { type: 'boolean', required: true },
        },
      },
    },
    title: 'aws_ec2_client_vpn_endpoint',
    type: 'resource',
  },
  {
    properties: {
      association_id: { type: 'string', computed: true },
      client_vpn_endpoint_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      security_groups: { type: 'object', optional: true, computed: true },
      status: { type: 'string', computed: true },
      subnet_id: { type: 'string', required: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_ec2_client_vpn_network_association',
    type: 'resource',
  },
  {
    properties: {
      client_vpn_endpoint_id: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      destination_cidr_block: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      origin: { type: 'string', computed: true },
      target_vpc_subnet_id: { type: 'string', required: true },
      type: { type: 'string', computed: true },
    },
    title: 'aws_ec2_client_vpn_route',
    type: 'resource',
  },
  {
    properties: {
      excess_capacity_termination_policy: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      replace_unhealthy_instances: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      terminate_instances: { type: 'boolean', optional: true },
      terminate_instances_with_expiration: { type: 'boolean', optional: true },
      type: { type: 'string', optional: true },
      launch_template_config: {
        nesting_mode: 'list',
        block: {
          block_types: {
            launch_template_specification: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  launch_template_id: { type: 'string', optional: true },
                  launch_template_name: { type: 'string', optional: true },
                  version: { type: 'string', required: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            override: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  availability_zone: { type: 'string', optional: true },
                  instance_type: { type: 'string', optional: true },
                  max_price: { type: 'string', optional: true },
                  priority: { type: 'number', optional: true },
                  subnet_id: { type: 'string', optional: true },
                  weighted_capacity: { type: 'number', optional: true },
                },
              },
              max_items: 50,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
      on_demand_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { allocation_strategy: { type: 'string', optional: true } },
      },
      spot_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allocation_strategy: { type: 'string', optional: true },
          instance_interruption_behavior: { type: 'string', optional: true },
          instance_pools_to_use_count: { type: 'number', optional: true },
        },
      },
      target_capacity_specification: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          default_target_capacity_type: { type: 'string', required: true },
          on_demand_target_capacity: { type: 'number', optional: true },
          spot_target_capacity: { type: 'number', optional: true },
          total_target_capacity: { type: 'number', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ec2_fleet',
    type: 'resource',
  },
  {
    properties: {
      destination_cidr_block: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      local_gateway_route_table_id: { type: 'string', required: true },
      local_gateway_virtual_interface_group_id: {
        type: 'string',
        required: true,
      },
    },
    title: 'aws_ec2_local_gateway_route',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      local_gateway_id: { type: 'string', computed: true },
      local_gateway_route_table_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_local_gateway_route_table_vpc_association',
    type: 'resource',
  },
  {
    properties: {
      address_family: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      max_entries: { type: 'number', required: true },
      name: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version: { type: 'number', computed: true },
      entry: {
        nesting_mode: 'set',
        properties: {
          cidr: { type: 'string', required: true },
          description: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ec2_managed_prefix_list',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      key: { type: 'string', required: true },
      resource_id: { type: 'string', required: true },
      value: { type: 'string', required: true },
    },
    title: 'aws_ec2_tag',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      network_services: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_ec2_traffic_mirror_filter',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      destination_cidr_block: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      protocol: { type: 'number', optional: true },
      rule_action: { type: 'string', required: true },
      rule_number: { type: 'number', required: true },
      source_cidr_block: { type: 'string', required: true },
      traffic_direction: { type: 'string', required: true },
      traffic_mirror_filter_id: { type: 'string', required: true },
      destination_port_range: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          from_port: { type: 'number', optional: true },
          to_port: { type: 'number', optional: true },
        },
      },
      source_port_range: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          from_port: { type: 'number', optional: true },
          to_port: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_ec2_traffic_mirror_filter_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      network_interface_id: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      packet_length: { type: 'number', optional: true },
      session_number: { type: 'number', required: true },
      tags: { type: 'object', optional: true },
      traffic_mirror_filter_id: { type: 'string', required: true },
      traffic_mirror_target_id: { type: 'string', required: true },
      virtual_network_id: { type: 'number', optional: true, computed: true },
    },
    title: 'aws_ec2_traffic_mirror_session',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      network_interface_id: { type: 'string', optional: true },
      network_load_balancer_arn: { type: 'string', optional: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_ec2_traffic_mirror_target',
    type: 'resource',
  },
  {
    properties: {
      amazon_side_asn: { type: 'number', optional: true },
      arn: { type: 'string', computed: true },
      association_default_route_table_id: { type: 'string', computed: true },
      auto_accept_shared_attachments: { type: 'string', optional: true },
      default_route_table_association: { type: 'string', optional: true },
      default_route_table_propagation: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      dns_support: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      propagation_default_route_table_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      vpn_ecmp_support: { type: 'string', optional: true },
    },
    title: 'aws_ec2_transit_gateway',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      peer_account_id: { type: 'string', optional: true, computed: true },
      peer_region: { type: 'string', required: true },
      peer_transit_gateway_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      transit_gateway_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_transit_gateway_peering_attachment',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      peer_account_id: { type: 'string', computed: true },
      peer_region: { type: 'string', computed: true },
      peer_transit_gateway_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      transit_gateway_attachment_id: { type: 'string', required: true },
      transit_gateway_id: { type: 'string', computed: true },
    },
    title: 'aws_ec2_transit_gateway_peering_attachment_accepter',
    type: 'resource',
  },
  {
    properties: {
      blackhole: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      prefix_list_id: { type: 'string', required: true },
      prefix_list_owner_id: { type: 'string', computed: true },
      transit_gateway_attachment_id: { type: 'string', optional: true },
      transit_gateway_route_table_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_transit_gateway_prefix_list_reference',
    type: 'resource',
  },
  {
    properties: {
      blackhole: { type: 'boolean', optional: true },
      destination_cidr_block: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      transit_gateway_attachment_id: { type: 'string', optional: true },
      transit_gateway_route_table_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_transit_gateway_route',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      default_association_route_table: { type: 'boolean', computed: true },
      default_propagation_route_table: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      transit_gateway_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_transit_gateway_route_table',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      resource_id: { type: 'string', computed: true },
      resource_type: { type: 'string', computed: true },
      transit_gateway_attachment_id: { type: 'string', required: true },
      transit_gateway_route_table_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_transit_gateway_route_table_association',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      resource_id: { type: 'string', computed: true },
      resource_type: { type: 'string', computed: true },
      transit_gateway_attachment_id: { type: 'string', required: true },
      transit_gateway_route_table_id: { type: 'string', required: true },
    },
    title: 'aws_ec2_transit_gateway_route_table_propagation',
    type: 'resource',
  },
  {
    properties: {
      appliance_mode_support: { type: 'string', optional: true },
      dns_support: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_support: { type: 'string', optional: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      transit_gateway_default_route_table_association: {
        type: 'boolean',
        optional: true,
      },
      transit_gateway_default_route_table_propagation: {
        type: 'boolean',
        optional: true,
      },
      transit_gateway_id: { type: 'string', required: true },
      vpc_id: { type: 'string', required: true },
      vpc_owner_id: { type: 'string', computed: true },
    },
    title: 'aws_ec2_transit_gateway_vpc_attachment',
    type: 'resource',
  },
  {
    properties: {
      appliance_mode_support: { type: 'string', computed: true },
      dns_support: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_support: { type: 'string', computed: true },
      subnet_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true },
      transit_gateway_attachment_id: { type: 'string', required: true },
      transit_gateway_default_route_table_association: {
        type: 'boolean',
        optional: true,
      },
      transit_gateway_default_route_table_propagation: {
        type: 'boolean',
        optional: true,
      },
      transit_gateway_id: { type: 'string', computed: true },
      vpc_id: { type: 'string', computed: true },
      vpc_owner_id: { type: 'string', computed: true },
    },
    title: 'aws_ec2_transit_gateway_vpc_attachment_accepter',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      registry_id: { type: 'string', computed: true },
      repository: { type: 'string', required: true },
    },
    title: 'aws_ecr_lifecycle_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      registry_id: { type: 'string', computed: true },
    },
    title: 'aws_ecr_registry_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      registry_id: { type: 'string', computed: true },
      replication_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            rule: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  destination: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        region: { type: 'string', required: true },
                        registry_id: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_ecr_replication_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_tag_mutability: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      registry_id: { type: 'string', computed: true },
      repository_url: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      encryption_configuration: {
        nesting_mode: 'list',
        properties: {
          encryption_type: { type: 'string', optional: true },
          kms_key: { type: 'string', optional: true, computed: true },
        },
      },
      image_scanning_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { scan_on_push: { type: 'boolean', required: true } },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { delete: { type: 'string', optional: true } },
      },
    },
    title: 'aws_ecr_repository',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      registry_id: { type: 'string', computed: true },
      repository: { type: 'string', required: true },
    },
    title: 'aws_ecr_repository_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      force_destroy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      registry_id: { type: 'string', computed: true },
      repository_name: { type: 'string', required: true },
      repository_uri: { type: 'string', computed: true },
      catalog_data: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          about_text: { type: 'string', optional: true },
          architectures: { type: 'object', optional: true },
          description: { type: 'string', optional: true },
          logo_image_blob: { type: 'string', optional: true, computed: true },
          operating_systems: { type: 'object', optional: true },
          usage_text: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { delete: { type: 'string', optional: true } },
      },
    },
    title: 'aws_ecrpublic_repository',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      auto_scaling_group_provider: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          auto_scaling_group_arn: { type: 'string', required: true },
          managed_termination_protection: {
            type: 'string',
            optional: true,
            computed: true,
          },
        },
      },
    },
    title: 'aws_ecs_capacity_provider',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      capacity_providers: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      default_capacity_provider_strategy: {
        nesting_mode: 'set',
        properties: {
          base: { type: 'number', optional: true },
          capacity_provider: { type: 'string', required: true },
          weight: { type: 'number', optional: true },
        },
      },
      setting: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_ecs_cluster',
    type: 'resource',
  },
  {
    properties: {
      cluster: { type: 'string', optional: true, computed: true },
      deployment_maximum_percent: { type: 'number', optional: true },
      deployment_minimum_healthy_percent: { type: 'number', optional: true },
      desired_count: { type: 'number', optional: true },
      enable_ecs_managed_tags: { type: 'boolean', optional: true },
      enable_execute_command: { type: 'boolean', optional: true },
      force_new_deployment: { type: 'boolean', optional: true },
      health_check_grace_period_seconds: { type: 'number', optional: true },
      iam_role: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      launch_type: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      platform_version: { type: 'string', optional: true, computed: true },
      propagate_tags: { type: 'string', optional: true },
      scheduling_strategy: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      task_definition: { type: 'string', optional: true },
      wait_for_steady_state: { type: 'boolean', optional: true },
      capacity_provider_strategy: {
        nesting_mode: 'set',
        properties: {
          base: { type: 'number', optional: true },
          capacity_provider: { type: 'string', required: true },
          weight: { type: 'number', optional: true },
        },
      },
      deployment_circuit_breaker: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enable: { type: 'boolean', required: true },
          rollback: { type: 'boolean', required: true },
        },
      },
      deployment_controller: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { type: { type: 'string', optional: true } },
      },
      load_balancer: {
        nesting_mode: 'set',
        properties: {
          container_name: { type: 'string', required: true },
          container_port: { type: 'number', required: true },
          elb_name: { type: 'string', optional: true },
          target_group_arn: { type: 'string', optional: true },
        },
      },
      network_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          assign_public_ip: { type: 'boolean', optional: true },
          security_groups: { type: 'object', optional: true },
          subnets: { type: 'object', required: true },
        },
      },
      ordered_placement_strategy: {
        nesting_mode: 'list',
        max_items: 5,
        properties: {
          field: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      placement_constraints: {
        nesting_mode: 'set',
        max_items: 10,
        properties: {
          expression: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      service_registries: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          container_name: { type: 'string', optional: true },
          container_port: { type: 'number', optional: true },
          port: { type: 'number', optional: true },
          registry_arn: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { delete: { type: 'string', optional: true } },
      },
    },
    title: 'aws_ecs_service',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      container_definitions: { type: 'string', required: true },
      cpu: { type: 'string', optional: true },
      execution_role_arn: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      ipc_mode: { type: 'string', optional: true },
      memory: { type: 'string', optional: true },
      network_mode: { type: 'string', optional: true, computed: true },
      pid_mode: { type: 'string', optional: true },
      requires_compatibilities: { type: 'object', optional: true },
      revision: { type: 'number', computed: true },
      tags: { type: 'object', optional: true },
      task_role_arn: { type: 'string', optional: true },
      inference_accelerator: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', required: true },
          device_type: { type: 'string', required: true },
        },
      },
      placement_constraints: {
        nesting_mode: 'set',
        max_items: 10,
        properties: {
          expression: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      proxy_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          container_name: { type: 'string', required: true },
          properties: { type: 'object', optional: true },
          type: { type: 'string', optional: true },
        },
      },
      volume: {
        nesting_mode: 'set',
        properties: {
          host_path: { type: 'string', optional: true },
          name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_ecs_task_definition',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      file_system_arn: { type: 'string', computed: true },
      file_system_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      posix_user: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          gid: { type: 'number', required: true },
          secondary_gids: { type: 'object', optional: true },
          uid: { type: 'number', required: true },
        },
      },
      root_directory: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          path: { type: 'string', optional: true, computed: true },
        },
      },
    },
    title: 'aws_efs_access_point',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zone_id: { type: 'string', computed: true },
      availability_zone_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      creation_token: { type: 'string', optional: true, computed: true },
      dns_name: { type: 'string', computed: true },
      encrypted: { type: 'boolean', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      number_of_mount_targets: { type: 'number', computed: true },
      owner_id: { type: 'string', computed: true },
      performance_mode: { type: 'string', optional: true, computed: true },
      provisioned_throughput_in_mibps: { type: 'number', optional: true },
      size_in_bytes: {
        type: [
          'array',
          [
            'object',
            {
              value: 'number',
              value_in_ia: 'number',
              value_in_standard: 'number',
            },
          ],
        ],
        computed: true,
      },
      tags: { type: 'object', optional: true },
      throughput_mode: { type: 'string', optional: true },
      lifecycle_policy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { transition_to_ia: { type: 'string', required: true } },
      },
    },
    title: 'aws_efs_file_system',
    type: 'resource',
  },
  {
    properties: {
      file_system_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_efs_file_system_policy',
    type: 'resource',
  },
  {
    properties: {
      availability_zone_id: { type: 'string', computed: true },
      availability_zone_name: { type: 'string', computed: true },
      dns_name: { type: 'string', computed: true },
      file_system_arn: { type: 'string', computed: true },
      file_system_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', optional: true, computed: true },
      mount_target_dns_name: { type: 'string', computed: true },
      network_interface_id: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      security_groups: { type: 'object', optional: true, computed: true },
      subnet_id: { type: 'string', required: true },
    },
    title: 'aws_efs_mount_target',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', required: true },
    },
    title: 'aws_egress_only_internet_gateway',
    type: 'resource',
  },
  {
    properties: {
      allocation_id: { type: 'string', computed: true },
      associate_with_private_ip: { type: 'string', optional: true },
      association_id: { type: 'string', computed: true },
      carrier_ip: { type: 'string', computed: true },
      customer_owned_ip: { type: 'string', computed: true },
      customer_owned_ipv4_pool: { type: 'string', optional: true },
      domain: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance: { type: 'string', optional: true, computed: true },
      network_border_group: { type: 'string', optional: true, computed: true },
      network_interface: { type: 'string', optional: true, computed: true },
      private_dns: { type: 'string', computed: true },
      private_ip: { type: 'string', computed: true },
      public_dns: { type: 'string', computed: true },
      public_ip: { type: 'string', computed: true },
      public_ipv4_pool: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc: { type: 'boolean', optional: true, computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          delete: { type: 'string', optional: true },
          read: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_eip',
    type: 'resource',
  },
  {
    properties: {
      allocation_id: { type: 'string', optional: true, computed: true },
      allow_reassociation: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', optional: true, computed: true },
      network_interface_id: { type: 'string', optional: true, computed: true },
      private_ip_address: { type: 'string', optional: true, computed: true },
      public_ip: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_eip_association',
    type: 'resource',
  },
  {
    properties: {
      addon_name: { type: 'string', required: true },
      addon_version: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      cluster_name: { type: 'string', required: true },
      created_at: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      modified_at: { type: 'string', computed: true },
      resolve_conflicts: { type: 'string', optional: true },
      service_account_role_arn: { type: 'string', optional: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_eks_addon',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_authority: {
        type: ['array', ['object', { data: 'string' }]],
        computed: true,
      },
      created_at: { type: 'string', computed: true },
      enabled_cluster_log_types: { type: 'object', optional: true },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      identity: {
        type: [
          'array',
          ['object', { oidc: ['list', ['object', { issuer: 'string' }]] }],
        ],
        computed: true,
      },
      name: { type: 'string', required: true },
      platform_version: { type: 'string', computed: true },
      role_arn: { type: 'string', required: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', optional: true, computed: true },
      encryption_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { resources: { type: 'object', required: true } },
      },
      kubernetes_network_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          service_ipv4_cidr: { type: 'string', optional: true, computed: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
      vpc_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          cluster_security_group_id: { type: 'string', computed: true },
          endpoint_private_access: { type: 'boolean', optional: true },
          endpoint_public_access: { type: 'boolean', optional: true },
          public_access_cidrs: {
            type: 'object',
            optional: true,
            computed: true,
          },
          security_group_ids: { type: 'object', optional: true },
          subnet_ids: { type: 'object', required: true },
          vpc_id: { type: 'string', computed: true },
        },
      },
    },
    title: 'aws_eks_cluster',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cluster_name: { type: 'string', required: true },
      fargate_profile_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      pod_execution_role_arn: { type: 'string', required: true },
      status: { type: 'string', computed: true },
      subnet_ids: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      selector: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          labels: { type: 'object', optional: true },
          namespace: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_eks_fargate_profile',
    type: 'resource',
  },
  {
    properties: {
      ami_type: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      capacity_type: { type: 'string', optional: true, computed: true },
      cluster_name: { type: 'string', required: true },
      disk_size: { type: 'number', optional: true, computed: true },
      force_update_version: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_types: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      labels: { type: 'object', optional: true },
      node_group_name: { type: 'string', required: true },
      node_role_arn: { type: 'string', required: true },
      release_version: { type: 'string', optional: true, computed: true },
      resources: {
        type: [
          'array',
          [
            'object',
            {
              autoscaling_groups: ['list', ['object', { name: 'string' }]],
              remote_access_security_group_id: 'string',
            },
          ],
        ],
        computed: true,
      },
      status: { type: 'string', computed: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', optional: true, computed: true },
      launch_template: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', optional: true, computed: true },
          name: { type: 'string', optional: true, computed: true },
          version: { type: 'string', required: true },
        },
      },
      remote_access: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          ec2_ssh_key: { type: 'string', optional: true },
          source_security_group_ids: { type: 'object', optional: true },
        },
      },
      scaling_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          desired_size: { type: 'number', required: true },
          max_size: { type: 'number', required: true },
          min_size: { type: 'number', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_eks_node_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      appversion_lifecycle: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          delete_source_from_s3: { type: 'boolean', optional: true },
          max_age_in_days: { type: 'number', optional: true },
          max_count: { type: 'number', optional: true },
          service_role: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_elastic_beanstalk_application',
    type: 'resource',
  },
  {
    properties: {
      application: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      bucket: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      force_delete: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      key: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_elastic_beanstalk_application_version',
    type: 'resource',
  },
  {
    properties: {
      application: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      environment_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      solution_stack_name: { type: 'string', optional: true },
      setting: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          namespace: { type: 'string', required: true },
          resource: { type: 'string', optional: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_elastic_beanstalk_configuration_template',
    type: 'resource',
  },
  {
    properties: {
      all_settings: { type: 'object', computed: true },
      application: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      autoscaling_groups: { type: ['array', 'string'], computed: true },
      cname: { type: 'string', computed: true },
      cname_prefix: { type: 'string', optional: true, computed: true },
      description: { type: 'string', optional: true },
      endpoint_url: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instances: { type: ['array', 'string'], computed: true },
      launch_configurations: { type: ['array', 'string'], computed: true },
      load_balancers: { type: ['array', 'string'], computed: true },
      name: { type: 'string', required: true },
      platform_arn: { type: 'string', optional: true, computed: true },
      poll_interval: { type: 'string', optional: true },
      queues: { type: ['array', 'string'], computed: true },
      solution_stack_name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      template_name: { type: 'string', optional: true },
      tier: { type: 'string', optional: true },
      triggers: { type: ['array', 'string'], computed: true },
      version_label: { type: 'string', optional: true, computed: true },
      wait_for_ready_timeout: { type: 'string', optional: true },
      setting: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          namespace: { type: 'string', required: true },
          resource: { type: 'string', optional: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_elastic_beanstalk_environment',
    type: 'resource',
  },
  {
    properties: {
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      az_mode: { type: 'string', optional: true, computed: true },
      cache_nodes: {
        type: [
          'array',
          [
            'object',
            {
              address: 'string',
              availability_zone: 'string',
              id: 'string',
              port: 'number',
            },
          ],
        ],
        computed: true,
      },
      cluster_address: { type: 'string', computed: true },
      cluster_id: { type: 'string', required: true },
      configuration_endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true, computed: true },
      engine_version: { type: 'string', optional: true, computed: true },
      final_snapshot_identifier: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      maintenance_window: { type: 'string', optional: true, computed: true },
      node_type: { type: 'string', optional: true, computed: true },
      notification_topic_arn: { type: 'string', optional: true },
      num_cache_nodes: { type: 'number', optional: true, computed: true },
      parameter_group_name: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true, computed: true },
      preferred_availability_zones: {
        type: ['array', 'string'],
        optional: true,
      },
      replication_group_id: { type: 'string', optional: true, computed: true },
      security_group_ids: { type: 'object', optional: true, computed: true },
      security_group_names: { type: 'object', optional: true, computed: true },
      snapshot_arns: { type: ['array', 'string'], optional: true },
      snapshot_name: { type: 'string', optional: true },
      snapshot_retention_limit: { type: 'number', optional: true },
      snapshot_window: { type: 'string', optional: true, computed: true },
      subnet_group_name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_elasticache_cluster',
    type: 'resource',
  },
  {
    properties: {
      actual_engine_version: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      at_rest_encryption_enabled: { type: 'boolean', computed: true },
      auth_token_enabled: { type: 'boolean', computed: true },
      cache_node_type: { type: 'string', computed: true },
      cluster_enabled: { type: 'boolean', computed: true },
      engine: { type: 'string', computed: true },
      global_replication_group_description: { type: 'string', optional: true },
      global_replication_group_id: { type: 'string', computed: true },
      global_replication_group_id_suffix: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      primary_replication_group_id: { type: 'string', required: true },
      transit_encryption_enabled: { type: 'boolean', computed: true },
    },
    title: 'aws_elasticache_global_replication_group',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      parameter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_elasticache_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      at_rest_encryption_enabled: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      auth_token: { type: 'string', optional: true, sensitive: true },
      auto_minor_version_upgrade: { type: 'boolean', optional: true },
      automatic_failover_enabled: { type: 'boolean', optional: true },
      availability_zones: { type: 'object', optional: true },
      cluster_enabled: { type: 'boolean', computed: true },
      configuration_endpoint_address: { type: 'string', computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      final_snapshot_identifier: { type: 'string', optional: true },
      global_replication_group_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true },
      maintenance_window: { type: 'string', optional: true, computed: true },
      member_clusters: { type: 'object', computed: true },
      multi_az_enabled: { type: 'boolean', optional: true },
      node_type: { type: 'string', optional: true, computed: true },
      notification_topic_arn: { type: 'string', optional: true },
      number_cache_clusters: { type: 'number', optional: true, computed: true },
      parameter_group_name: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true },
      primary_endpoint_address: { type: 'string', computed: true },
      reader_endpoint_address: { type: 'string', computed: true },
      replication_group_description: { type: 'string', required: true },
      replication_group_id: { type: 'string', required: true },
      security_group_ids: { type: 'object', optional: true, computed: true },
      security_group_names: { type: 'object', optional: true, computed: true },
      snapshot_arns: { type: 'object', optional: true },
      snapshot_name: { type: 'string', optional: true },
      snapshot_retention_limit: { type: 'number', optional: true },
      snapshot_window: { type: 'string', optional: true, computed: true },
      subnet_group_name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      transit_encryption_enabled: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      cluster_mode: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          num_node_groups: { type: 'number', required: true },
          replicas_per_node_group: { type: 'number', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_elasticache_replication_group',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      security_group_names: { type: 'object', required: true },
    },
    title: 'aws_elasticache_security_group',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      subnet_ids: { type: 'object', required: true },
    },
    title: 'aws_elasticache_subnet_group',
    type: 'resource',
  },
  {
    properties: {
      access_policies: { type: 'string', optional: true, computed: true },
      advanced_options: { type: 'object', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      domain_id: { type: 'string', computed: true },
      domain_name: { type: 'string', required: true },
      elasticsearch_version: { type: 'string', optional: true },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kibana_endpoint: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      advanced_security_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', required: true },
          internal_user_database_enabled: { type: 'boolean', optional: true },
        },
      },
      cluster_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          dedicated_master_count: { type: 'number', optional: true },
          dedicated_master_enabled: { type: 'boolean', optional: true },
          dedicated_master_type: { type: 'string', optional: true },
          instance_count: { type: 'number', optional: true },
          instance_type: { type: 'string', optional: true },
          warm_count: { type: 'number', optional: true },
          warm_enabled: { type: 'boolean', optional: true },
          warm_type: { type: 'string', optional: true },
          zone_awareness_enabled: { type: 'boolean', optional: true },
        },
      },
      cognito_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true },
          identity_pool_id: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
          user_pool_id: { type: 'string', required: true },
        },
      },
      domain_endpoint_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          custom_endpoint: { type: 'string', optional: true },
          custom_endpoint_certificate_arn: { type: 'string', optional: true },
          custom_endpoint_enabled: { type: 'boolean', optional: true },
          enforce_https: { type: 'boolean', optional: true },
          tls_security_policy: {
            type: 'string',
            optional: true,
            computed: true,
          },
        },
      },
      ebs_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          ebs_enabled: { type: 'boolean', required: true },
          iops: { type: 'number', optional: true },
          volume_size: { type: 'number', optional: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      encrypt_at_rest: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', required: true },
          kms_key_id: { type: 'string', optional: true, computed: true },
        },
      },
      log_publishing_options: {
        nesting_mode: 'set',
        properties: {
          cloudwatch_log_group_arn: { type: 'string', required: true },
          enabled: { type: 'boolean', optional: true },
          log_type: { type: 'string', required: true },
        },
      },
      node_to_node_encryption: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { enabled: { type: 'boolean', required: true } },
      },
      snapshot_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          automated_snapshot_start_hour: { type: 'number', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { update: { type: 'string', optional: true } },
      },
      vpc_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          availability_zones: { type: 'object', computed: true },
          security_group_ids: { type: 'object', optional: true },
          subnet_ids: { type: 'object', optional: true },
          vpc_id: { type: 'string', computed: true },
        },
      },
    },
    title: 'aws_elasticsearch_domain',
    type: 'resource',
  },
  {
    properties: {
      access_policies: { type: 'string', required: true },
      domain_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_elasticsearch_domain_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      aws_kms_key_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      input_bucket: { type: 'string', required: true },
      name: { type: 'string', optional: true, computed: true },
      output_bucket: { type: 'string', optional: true, computed: true },
      role: { type: 'string', required: true },
      content_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket: { type: 'string', optional: true, computed: true },
          storage_class: { type: 'string', optional: true },
        },
      },
      content_config_permissions: {
        nesting_mode: 'set',
        properties: {
          access: { type: ['array', 'string'], optional: true },
          grantee: { type: 'string', optional: true },
          grantee_type: { type: 'string', optional: true },
        },
      },
      notifications: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          completed: { type: 'string', optional: true },
          error: { type: 'string', optional: true },
          progressing: { type: 'string', optional: true },
          warning: { type: 'string', optional: true },
        },
      },
      thumbnail_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket: { type: 'string', optional: true, computed: true },
          storage_class: { type: 'string', optional: true },
        },
      },
      thumbnail_config_permissions: {
        nesting_mode: 'set',
        properties: {
          access: { type: ['array', 'string'], optional: true },
          grantee: { type: 'string', optional: true },
          grantee_type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_elastictranscoder_pipeline',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      container: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      type: { type: 'string', optional: true, computed: true },
      video_codec_options: { type: 'object', optional: true },
      audio: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          audio_packing_mode: { type: 'string', optional: true },
          bit_rate: { type: 'string', optional: true },
          channels: { type: 'string', optional: true },
          codec: { type: 'string', optional: true },
          sample_rate: { type: 'string', optional: true },
        },
      },
      audio_codec_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bit_depth: { type: 'string', optional: true },
          bit_order: { type: 'string', optional: true },
          profile: { type: 'string', optional: true },
          signed: { type: 'string', optional: true },
        },
      },
      thumbnails: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          aspect_ratio: { type: 'string', optional: true },
          format: { type: 'string', optional: true },
          interval: { type: 'string', optional: true },
          max_height: { type: 'string', optional: true },
          max_width: { type: 'string', optional: true },
          padding_policy: { type: 'string', optional: true },
          resolution: { type: 'string', optional: true },
          sizing_policy: { type: 'string', optional: true },
        },
      },
      video: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          aspect_ratio: { type: 'string', optional: true },
          bit_rate: { type: 'string', optional: true },
          codec: { type: 'string', optional: true },
          display_aspect_ratio: { type: 'string', optional: true },
          fixed_gop: { type: 'string', optional: true },
          frame_rate: { type: 'string', optional: true },
          keyframes_max_dist: { type: 'string', optional: true },
          max_frame_rate: { type: 'string', optional: true, computed: true },
          max_height: { type: 'string', optional: true },
          max_width: { type: 'string', optional: true },
          padding_policy: { type: 'string', optional: true },
          resolution: { type: 'string', optional: true },
          sizing_policy: { type: 'string', optional: true },
        },
      },
      video_watermarks: {
        nesting_mode: 'set',
        properties: {
          horizontal_align: { type: 'string', optional: true },
          horizontal_offset: { type: 'string', optional: true },
          id: { type: 'string', optional: true },
          max_height: { type: 'string', optional: true },
          max_width: { type: 'string', optional: true },
          opacity: { type: 'string', optional: true },
          sizing_policy: { type: 'string', optional: true },
          target: { type: 'string', optional: true },
          vertical_align: { type: 'string', optional: true },
          vertical_offset: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_elastictranscoder_preset',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', optional: true, computed: true },
      connection_draining: { type: 'boolean', optional: true },
      connection_draining_timeout: { type: 'number', optional: true },
      cross_zone_load_balancing: { type: 'boolean', optional: true },
      dns_name: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      idle_timeout: { type: 'number', optional: true },
      instances: { type: 'object', optional: true, computed: true },
      internal: { type: 'boolean', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      security_groups: { type: 'object', optional: true, computed: true },
      source_security_group: { type: 'string', optional: true, computed: true },
      source_security_group_id: { type: 'string', computed: true },
      subnets: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      zone_id: { type: 'string', computed: true },
      access_logs: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket: { type: 'string', required: true },
          bucket_prefix: { type: 'string', optional: true },
          enabled: { type: 'boolean', optional: true },
          interval: { type: 'number', optional: true },
        },
      },
      health_check: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          healthy_threshold: { type: 'number', required: true },
          interval: { type: 'number', required: true },
          target: { type: 'string', required: true },
          timeout: { type: 'number', required: true },
          unhealthy_threshold: { type: 'number', required: true },
        },
      },
      listener: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          instance_port: { type: 'number', required: true },
          instance_protocol: { type: 'string', required: true },
          lb_port: { type: 'number', required: true },
          lb_protocol: { type: 'string', required: true },
          ssl_certificate_id: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_elb',
    type: 'resource',
  },
  {
    properties: {
      elb: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      instance: { type: 'string', required: true },
    },
    title: 'aws_elb_attachment',
    type: 'resource',
  },
  {
    properties: {
      additional_info: { type: 'string', optional: true },
      applications: { type: 'object', optional: true },
      arn: { type: 'string', computed: true },
      autoscaling_role: { type: 'string', optional: true },
      cluster_state: { type: 'string', computed: true },
      configurations: { type: 'string', optional: true },
      configurations_json: { type: 'string', optional: true },
      custom_ami_id: { type: 'string', optional: true },
      ebs_root_volume_size: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      keep_job_flow_alive_when_no_steps: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      log_uri: { type: 'string', optional: true },
      master_public_dns: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      release_label: { type: 'string', required: true },
      scale_down_behavior: { type: 'string', optional: true, computed: true },
      security_configuration: { type: 'string', optional: true },
      service_role: { type: 'string', required: true },
      step: {
        type: [
          'array',
          [
            'object',
            {
              action_on_failure: 'string',
              hadoop_jar_step: [
                'list',
                [
                  'object',
                  {
                    args: ['list', 'string'],
                    jar: 'string',
                    main_class: 'string',
                    properties: ['map', 'string'],
                  },
                ],
              ],
              name: 'string',
            },
          ],
        ],
        optional: true,
        computed: true,
      },
      step_concurrency_level: { type: 'number', optional: true },
      tags: { type: 'object', optional: true },
      termination_protection: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      visible_to_all_users: { type: 'boolean', optional: true },
      bootstrap_action: {
        nesting_mode: 'list',
        properties: {
          args: { type: ['array', 'string'], optional: true },
          name: { type: 'string', required: true },
          path: { type: 'string', required: true },
        },
      },
      core_instance_fleet: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', computed: true },
          name: { type: 'string', optional: true },
          provisioned_on_demand_capacity: { type: 'number', computed: true },
          provisioned_spot_capacity: { type: 'number', computed: true },
          target_on_demand_capacity: { type: 'number', optional: true },
          target_spot_capacity: { type: 'number', optional: true },
        },
      },
      core_instance_group: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          autoscaling_policy: { type: 'string', optional: true },
          bid_price: { type: 'string', optional: true },
          id: { type: 'string', computed: true },
          instance_count: { type: 'number', optional: true },
          instance_type: { type: 'string', required: true },
          name: { type: 'string', optional: true },
        },
      },
      ec2_attributes: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          additional_master_security_groups: { type: 'string', optional: true },
          additional_slave_security_groups: { type: 'string', optional: true },
          emr_managed_master_security_group: {
            type: 'string',
            optional: true,
            computed: true,
          },
          emr_managed_slave_security_group: {
            type: 'string',
            optional: true,
            computed: true,
          },
          instance_profile: { type: 'string', required: true },
          key_name: { type: 'string', optional: true },
          service_access_security_group: {
            type: 'string',
            optional: true,
            computed: true,
          },
          subnet_id: { type: 'string', optional: true, computed: true },
          subnet_ids: { type: 'object', optional: true, computed: true },
        },
      },
      kerberos_attributes: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          ad_domain_join_password: {
            type: 'string',
            optional: true,
            sensitive: true,
          },
          ad_domain_join_user: { type: 'string', optional: true },
          cross_realm_trust_principal_password: {
            type: 'string',
            optional: true,
            sensitive: true,
          },
          kdc_admin_password: {
            type: 'string',
            required: true,
            sensitive: true,
          },
          realm: { type: 'string', required: true },
        },
      },
      master_instance_fleet: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', computed: true },
          name: { type: 'string', optional: true },
          provisioned_on_demand_capacity: { type: 'number', computed: true },
          provisioned_spot_capacity: { type: 'number', computed: true },
          target_on_demand_capacity: { type: 'number', optional: true },
          target_spot_capacity: { type: 'number', optional: true },
        },
      },
      master_instance_group: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bid_price: { type: 'string', optional: true },
          id: { type: 'string', computed: true },
          instance_count: { type: 'number', optional: true },
          instance_type: { type: 'string', required: true },
          name: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_emr_cluster',
    type: 'resource',
  },
  {
    properties: {
      cluster_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      provisioned_on_demand_capacity: { type: 'number', computed: true },
      provisioned_spot_capacity: { type: 'number', computed: true },
      target_on_demand_capacity: { type: 'number', optional: true },
      target_spot_capacity: { type: 'number', optional: true },
      instance_type_configs: {
        nesting_mode: 'set',
        properties: {
          bid_price: { type: 'string', optional: true },
          bid_price_as_percentage_of_on_demand_price: {
            type: 'number',
            optional: true,
          },
          instance_type: { type: 'string', required: true },
          weighted_capacity: { type: 'number', optional: true },
        },
      },
      launch_specifications: {
        nesting_mode: 'list',
        block: {
          block_types: {
            on_demand_specification: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  allocation_strategy: { type: 'string', required: true },
                },
              },
            },
            spot_specification: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  allocation_strategy: { type: 'string', required: true },
                  block_duration_minutes: { type: 'number', optional: true },
                  timeout_action: { type: 'string', required: true },
                  timeout_duration_minutes: { type: 'number', required: true },
                },
              },
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_emr_instance_fleet',
    type: 'resource',
  },
  {
    properties: {
      autoscaling_policy: { type: 'string', optional: true },
      bid_price: { type: 'string', optional: true },
      cluster_id: { type: 'string', required: true },
      configurations_json: { type: 'string', optional: true },
      ebs_optimized: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_count: { type: 'number', optional: true },
      instance_type: { type: 'string', required: true },
      name: { type: 'string', optional: true },
      running_instance_count: { type: 'number', computed: true },
      status: { type: 'string', computed: true },
      ebs_config: {
        nesting_mode: 'set',
        properties: {
          iops: { type: 'number', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', required: true },
          volumes_per_instance: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_emr_instance_group',
    type: 'resource',
  },
  {
    properties: {
      cluster_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      compute_limits: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          maximum_capacity_units: { type: 'number', required: true },
          maximum_core_capacity_units: { type: 'number', optional: true },
          maximum_ondemand_capacity_units: { type: 'number', optional: true },
          minimum_capacity_units: { type: 'number', required: true },
          unit_type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_emr_managed_scaling_policy',
    type: 'resource',
  },
  {
    properties: {
      configuration: { type: 'string', required: true },
      creation_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
    },
    title: 'aws_emr_security_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      eni_id: { type: 'string', optional: true },
      iam_role_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      log_destination: { type: 'string', optional: true, computed: true },
      log_destination_type: { type: 'string', optional: true },
      log_format: { type: 'string', optional: true, computed: true },
      log_group_name: { type: 'string', optional: true, computed: true },
      max_aggregation_interval: { type: 'number', optional: true },
      subnet_id: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      traffic_type: { type: 'string', required: true },
      vpc_id: { type: 'string', optional: true },
    },
    title: 'aws_flow_log',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_fms_admin_account',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      delete_all_policy_resources: { type: 'boolean', optional: true },
      exclude_resource_tags: { type: 'boolean', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      policy_update_token: { type: 'string', computed: true },
      remediation_enabled: { type: 'boolean', optional: true },
      resource_tags: { type: 'object', optional: true },
      resource_type: { type: 'string', optional: true, computed: true },
      resource_type_list: { type: 'object', optional: true, computed: true },
      exclude_map: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          account: { type: 'object', optional: true },
          orgunit: { type: 'object', optional: true },
        },
      },
      include_map: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          account: { type: 'object', optional: true },
          orgunit: { type: 'object', optional: true },
        },
      },
      security_service_policy_data: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          managed_service_data: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_fms_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_import_policy: { type: 'string', optional: true, computed: true },
      automatic_backup_retention_days: {
        type: 'number',
        optional: true,
        computed: true,
      },
      copy_tags_to_backups: { type: 'boolean', optional: true },
      daily_automatic_backup_start_time: {
        type: 'string',
        optional: true,
        computed: true,
      },
      deployment_type: { type: 'string', optional: true },
      dns_name: { type: 'string', computed: true },
      drive_cache_type: { type: 'string', optional: true },
      export_path: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      import_path: { type: 'string', optional: true },
      imported_file_chunk_size: {
        type: 'number',
        optional: true,
        computed: true,
      },
      kms_key_id: { type: 'string', optional: true, computed: true },
      mount_name: { type: 'string', computed: true },
      network_interface_ids: { type: ['array', 'string'], computed: true },
      owner_id: { type: 'string', computed: true },
      per_unit_storage_throughput: { type: 'number', optional: true },
      security_group_ids: { type: 'object', optional: true },
      storage_capacity: { type: 'number', required: true },
      storage_type: { type: 'string', optional: true },
      subnet_ids: { type: ['array', 'string'], required: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      weekly_maintenance_start_time: {
        type: 'string',
        optional: true,
        computed: true,
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_fsx_lustre_file_system',
    type: 'resource',
  },
  {
    properties: {
      active_directory_id: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      automatic_backup_retention_days: { type: 'number', optional: true },
      copy_tags_to_backups: { type: 'boolean', optional: true },
      daily_automatic_backup_start_time: {
        type: 'string',
        optional: true,
        computed: true,
      },
      deployment_type: { type: 'string', optional: true },
      dns_name: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      network_interface_ids: { type: 'object', computed: true },
      owner_id: { type: 'string', computed: true },
      preferred_file_server_ip: { type: 'string', computed: true },
      preferred_subnet_id: { type: 'string', optional: true, computed: true },
      remote_administration_endpoint: { type: 'string', computed: true },
      security_group_ids: { type: 'object', optional: true },
      skip_final_backup: { type: 'boolean', optional: true },
      storage_capacity: { type: 'number', required: true },
      storage_type: { type: 'string', optional: true },
      subnet_ids: { type: ['array', 'string'], required: true },
      tags: { type: 'object', optional: true },
      throughput_capacity: { type: 'number', required: true },
      vpc_id: { type: 'string', computed: true },
      weekly_maintenance_start_time: {
        type: 'string',
        optional: true,
        computed: true,
      },
      self_managed_active_directory: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          dns_ips: { type: 'object', required: true },
          domain_name: { type: 'string', required: true },
          file_system_administrators_group: { type: 'string', optional: true },
          organizational_unit_distinguished_name: {
            type: 'string',
            optional: true,
          },
          password: { type: 'string', required: true, sensitive: true },
          username: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_fsx_windows_file_system',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      routing_strategy: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          fleet_id: { type: 'string', optional: true },
          message: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_gamelift_alias',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      operating_system: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', optional: true },
      storage_location: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          bucket: { type: 'string', required: true },
          key: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_gamelift_build',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      build_id: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      ec2_instance_type: { type: 'string', required: true },
      fleet_type: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_role_arn: { type: 'string', optional: true },
      log_paths: { type: ['array', 'string'], computed: true },
      metric_groups: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      name: { type: 'string', required: true },
      new_game_session_protection_policy: { type: 'string', optional: true },
      operating_system: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      ec2_inbound_permission: {
        nesting_mode: 'list',
        max_items: 50,
        properties: {
          from_port: { type: 'number', required: true },
          ip_range: { type: 'string', required: true },
          protocol: { type: 'string', required: true },
          to_port: { type: 'number', required: true },
        },
      },
      resource_creation_limit_policy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          new_game_sessions_per_creator: { type: 'number', optional: true },
          policy_period_in_minutes: { type: 'number', optional: true },
        },
      },
      runtime_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          game_session_activation_timeout_seconds: {
            type: 'number',
            optional: true,
          },
          max_concurrent_game_session_activations: {
            type: 'number',
            optional: true,
          },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_gamelift_fleet',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      destinations: { type: ['array', 'string'], optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      timeout_in_seconds: { type: 'number', optional: true },
      player_latency_policy: {
        nesting_mode: 'list',
        properties: {
          maximum_individual_player_latency_milliseconds: {
            type: 'number',
            required: true,
          },
          policy_duration_seconds: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_gamelift_game_session_queue',
    type: 'resource',
  },
  {
    properties: {
      access_policy: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      location: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      notification: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          events: { type: 'object', required: true },
          sns_topic: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_glacier_vault',
    type: 'resource',
  },
  {
    properties: {
      complete_lock: { type: 'boolean', required: true },
      id: { type: 'string', optional: true, computed: true },
      ignore_deletion_error: { type: 'boolean', optional: true },
      policy: { type: 'string', required: true },
      vault_name: { type: 'string', required: true },
    },
    title: 'aws_glacier_vault_lock',
    type: 'resource',
  },
  {
    properties: {
      dns_name: { type: 'string', computed: true },
      enabled: { type: 'boolean', optional: true },
      hosted_zone_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address_type: { type: 'string', optional: true },
      ip_sets: {
        type: [
          'array',
          ['object', { ip_addresses: ['list', 'string'], ip_family: 'string' }],
        ],
        computed: true,
      },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      attributes: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          flow_logs_enabled: { type: 'boolean', optional: true },
          flow_logs_s3_bucket: { type: 'string', optional: true },
          flow_logs_s3_prefix: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_globalaccelerator_accelerator',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      endpoint_group_region: { type: 'string', optional: true, computed: true },
      health_check_interval_seconds: { type: 'number', optional: true },
      health_check_path: { type: 'string', optional: true, computed: true },
      health_check_port: { type: 'number', optional: true, computed: true },
      health_check_protocol: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      listener_arn: { type: 'string', required: true },
      threshold_count: { type: 'number', optional: true },
      traffic_dial_percentage: { type: 'number', optional: true },
      endpoint_configuration: {
        nesting_mode: 'set',
        max_items: 10,
        properties: {
          client_ip_preservation_enabled: {
            type: 'boolean',
            optional: true,
            computed: true,
          },
          endpoint_id: { type: 'string', optional: true },
          weight: { type: 'number', optional: true },
        },
      },
      port_override: {
        nesting_mode: 'set',
        max_items: 10,
        properties: {
          endpoint_port: { type: 'number', required: true },
          listener_port: { type: 'number', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_globalaccelerator_endpoint_group',
    type: 'resource',
  },
  {
    properties: {
      accelerator_arn: { type: 'string', required: true },
      client_affinity: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      protocol: { type: 'string', required: true },
      port_range: {
        nesting_mode: 'set',
        min_items: 1,
        max_items: 10,
        properties: {
          from_port: { type: 'number', optional: true },
          to_port: { type: 'number', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_globalaccelerator_listener',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      catalog_id: { type: 'string', optional: true, computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      location_uri: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      parameters: { type: 'object', optional: true },
    },
    title: 'aws_glue_catalog_database',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      catalog_id: { type: 'string', optional: true, computed: true },
      database_name: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owner: { type: 'string', optional: true },
      parameters: { type: 'object', optional: true },
      retention: { type: 'number', optional: true },
      table_type: { type: 'string', optional: true },
      view_expanded_text: { type: 'string', optional: true },
      view_original_text: { type: 'string', optional: true },
      partition_index: {
        nesting_mode: 'list',
        max_items: 3,
        properties: {
          index_name: { type: 'string', required: true },
          index_status: { type: 'string', computed: true },
          keys: { type: 'object', required: true },
        },
      },
      partition_keys: {
        nesting_mode: 'list',
        properties: {
          comment: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          type: { type: 'string', optional: true },
        },
      },
      storage_descriptor: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_columns: { type: ['array', 'string'], optional: true },
          compressed: { type: 'boolean', optional: true },
          input_format: { type: 'string', optional: true },
          location: { type: 'string', optional: true },
          number_of_buckets: { type: 'number', optional: true },
          output_format: { type: 'string', optional: true },
          parameters: { type: 'object', optional: true },
          stored_as_sub_directories: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_glue_catalog_table',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      csv_classifier: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_single_column: { type: 'boolean', optional: true },
          contains_header: { type: 'string', optional: true },
          delimiter: { type: 'string', optional: true },
          disable_value_trimming: { type: 'boolean', optional: true },
          header: { type: ['array', 'string'], optional: true },
          quote_symbol: { type: 'string', optional: true },
        },
      },
      grok_classifier: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          classification: { type: 'string', required: true },
          custom_patterns: { type: 'string', optional: true },
          grok_pattern: { type: 'string', required: true },
        },
      },
      json_classifier: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { json_path: { type: 'string', required: true } },
      },
      xml_classifier: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          classification: { type: 'string', required: true },
          row_tag: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_glue_classifier',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      catalog_id: { type: 'string', optional: true, computed: true },
      connection_properties: {
        type: 'object',
        required: true,
        sensitive: true,
      },
      connection_type: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      match_criteria: { type: ['array', 'string'], optional: true },
      name: { type: 'string', required: true },
      physical_connection_requirements: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          availability_zone: { type: 'string', optional: true },
          security_group_id_list: { type: 'object', optional: true },
          subnet_id: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_glue_connection',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      classifiers: { type: ['array', 'string'], optional: true },
      configuration: { type: 'string', optional: true },
      database_name: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      role: { type: 'string', required: true },
      schedule: { type: 'string', optional: true },
      security_configuration: { type: 'string', optional: true },
      table_prefix: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      catalog_target: {
        nesting_mode: 'list',
        properties: {
          database_name: { type: 'string', required: true },
          tables: { type: ['array', 'string'], required: true },
        },
      },
      dynamodb_target: {
        nesting_mode: 'list',
        properties: {
          path: { type: 'string', required: true },
          scan_all: { type: 'boolean', optional: true },
          scan_rate: { type: 'number', optional: true },
        },
      },
      jdbc_target: {
        nesting_mode: 'list',
        properties: {
          connection_name: { type: 'string', required: true },
          exclusions: { type: ['array', 'string'], optional: true },
          path: { type: 'string', required: true },
        },
      },
      lineage_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          crawler_lineage_settings: { type: 'string', optional: true },
        },
      },
      mongodb_target: {
        nesting_mode: 'list',
        properties: {
          connection_name: { type: 'string', required: true },
          path: { type: 'string', required: true },
          scan_all: { type: 'boolean', optional: true },
        },
      },
      recrawl_policy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { recrawl_behavior: { type: 'string', optional: true } },
      },
      s3_target: {
        nesting_mode: 'list',
        properties: {
          connection_name: { type: 'string', optional: true },
          exclusions: { type: ['array', 'string'], optional: true },
          path: { type: 'string', required: true },
        },
      },
      schema_change_policy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          delete_behavior: { type: 'string', optional: true },
          update_behavior: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_glue_crawler',
    type: 'resource',
  },
  {
    properties: {
      catalog_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      data_catalog_encryption_settings: {
        nesting_mode: 'list',
        block: {
          block_types: {
            connection_password_encryption: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  aws_kms_key_id: { type: 'string', optional: true },
                  return_connection_password_encrypted: {
                    type: 'bool',
                    required: true,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            encryption_at_rest: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  catalog_encryption_mode: { type: 'string', required: true },
                  sse_aws_kms_key_id: { type: 'string', optional: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_glue_data_catalog_encryption_settings',
    type: 'resource',
  },
  {
    properties: {
      arguments: { type: 'object', optional: true },
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', computed: true },
      extra_jars_s3_path: { type: 'string', optional: true },
      extra_python_libs_s3_path: { type: 'string', optional: true },
      failure_reason: { type: 'string', computed: true },
      glue_version: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      number_of_nodes: { type: 'number', optional: true },
      number_of_workers: { type: 'number', optional: true },
      private_address: { type: 'string', computed: true },
      public_address: { type: 'string', computed: true },
      public_key: { type: 'string', optional: true },
      public_keys: { type: 'object', optional: true },
      role_arn: { type: 'string', required: true },
      security_configuration: { type: 'string', optional: true },
      security_group_ids: { type: 'object', optional: true },
      status: { type: 'string', computed: true },
      subnet_id: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      worker_type: { type: 'string', optional: true },
      yarn_endpoint_address: { type: 'string', computed: true },
      zeppelin_remote_spark_interpreter_port: {
        type: 'number',
        computed: true,
      },
    },
    title: 'aws_glue_dev_endpoint',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      connections: { type: ['array', 'string'], optional: true },
      default_arguments: { type: 'object', optional: true },
      description: { type: 'string', optional: true },
      glue_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      max_capacity: { type: 'number', optional: true, computed: true },
      max_retries: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      non_overridable_arguments: { type: 'object', optional: true },
      number_of_workers: { type: 'number', optional: true },
      role_arn: { type: 'string', required: true },
      security_configuration: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      timeout: { type: 'number', optional: true },
      worker_type: { type: 'string', optional: true },
      command: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          name: { type: 'string', optional: true },
          python_version: { type: 'string', optional: true, computed: true },
          script_location: { type: 'string', required: true },
        },
      },
      execution_property: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { max_concurrent_runs: { type: 'number', optional: true } },
      },
      notification_property: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { notify_delay_after: { type: 'number', optional: true } },
      },
    },
    title: 'aws_glue_job',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      glue_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      label_count: { type: 'number', computed: true },
      max_capacity: { type: 'number', optional: true, computed: true },
      max_retries: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      number_of_workers: { type: 'number', optional: true },
      role_arn: { type: 'string', required: true },
      schema: {
        type: ['array', ['object', { data_type: 'string', name: 'string' }]],
        computed: true,
      },
      tags: { type: 'object', optional: true },
      timeout: { type: 'number', optional: true },
      worker_type: { type: 'string', optional: true },
      input_record_tables: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          catalog_id: { type: 'string', optional: true },
          connection_name: { type: 'string', optional: true },
          database_name: { type: 'string', required: true },
          table_name: { type: 'string', required: true },
        },
      },
      parameters: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { transform_type: { type: 'string', required: true } },
      },
    },
    title: 'aws_glue_ml_transform',
    type: 'resource',
  },
  {
    properties: {
      catalog_id: { type: 'string', optional: true, computed: true },
      creation_time: { type: 'string', computed: true },
      database_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      last_accessed_time: { type: 'string', computed: true },
      last_analyzed_time: { type: 'string', computed: true },
      parameters: { type: 'object', optional: true },
      partition_values: { type: ['array', 'string'], required: true },
      table_name: { type: 'string', required: true },
      storage_descriptor: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_columns: { type: ['array', 'string'], optional: true },
          compressed: { type: 'boolean', optional: true },
          input_format: { type: 'string', optional: true },
          location: { type: 'string', optional: true },
          number_of_buckets: { type: 'number', optional: true },
          output_format: { type: 'string', optional: true },
          parameters: { type: 'object', optional: true },
          stored_as_sub_directories: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_glue_partition',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      registry_name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_glue_registry',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_glue_resource_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      compatibility: { type: 'string', required: true },
      data_format: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      latest_schema_version: { type: 'number', computed: true },
      next_schema_version: { type: 'number', computed: true },
      registry_arn: { type: 'string', optional: true, computed: true },
      registry_name: { type: 'string', computed: true },
      schema_checkpoint: { type: 'number', computed: true },
      schema_definition: { type: 'string', required: true },
      schema_name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_glue_schema',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      encryption_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            cloudwatch_encryption: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  cloudwatch_encryption_mode: {
                    type: 'string',
                    optional: true,
                  },
                  kms_key_arn: { type: 'string', optional: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            job_bookmarks_encryption: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  job_bookmarks_encryption_mode: {
                    type: 'string',
                    optional: true,
                  },
                  kms_key_arn: { type: 'string', optional: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            s3_encryption: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  kms_key_arn: { type: 'string', optional: true },
                  s3_encryption_mode: { type: 'string', optional: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_glue_security_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      schedule: { type: 'string', optional: true },
      state: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', required: true },
      workflow_name: { type: 'string', optional: true },
      actions: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          arguments: { type: 'object', optional: true },
          crawler_name: { type: 'string', optional: true },
          job_name: { type: 'string', optional: true },
          security_configuration: { type: 'string', optional: true },
          timeout: { type: 'number', optional: true },
        },
      },
      predicate: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { logical: { type: 'string', optional: true } },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_glue_trigger',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      catalog_id: { type: 'string', optional: true },
      class_name: { type: 'string', required: true },
      create_time: { type: 'string', computed: true },
      database_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owner_name: { type: 'string', required: true },
      owner_type: { type: 'string', required: true },
      resource_uris: {
        nesting_mode: 'set',
        max_items: 1000,
        properties: {
          resource_type: { type: 'string', required: true },
          uri: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_glue_user_defined_function',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      default_run_properties: { type: 'object', optional: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      max_concurrent_runs: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_glue_workflow',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      enable: { type: 'boolean', optional: true },
      finding_publishing_frequency: {
        type: 'string',
        optional: true,
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_guardduty_detector',
    type: 'resource',
  },
  {
    properties: {
      action: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      detector_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      rank: { type: 'number', required: true },
      tags: { type: 'object', optional: true },
      finding_criteria: {
        nesting_mode: 'list',
        block: {
          block_types: {
            criterion: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  equals: { type: ['list', 'string'], optional: true },
                  field: { type: 'string', required: true },
                  greater_than: { type: 'string', optional: true },
                  greater_than_or_equal: { type: 'string', optional: true },
                  less_than: { type: 'string', optional: true },
                  less_than_or_equal: { type: 'string', optional: true },
                  not_equals: { type: ['list', 'string'], optional: true },
                },
              },
              min_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_guardduty_filter',
    type: 'resource',
  },
  {
    properties: {
      detector_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      master_account_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_guardduty_invite_accepter',
    type: 'resource',
  },
  {
    properties: {
      activate: { type: 'boolean', required: true },
      arn: { type: 'string', computed: true },
      detector_id: { type: 'string', required: true },
      format: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      location: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_guardduty_ipset',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', required: true },
      detector_id: { type: 'string', required: true },
      disable_email_notification: { type: 'boolean', optional: true },
      email: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      invitation_message: { type: 'string', optional: true },
      invite: { type: 'boolean', optional: true },
      relationship_status: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_guardduty_member',
    type: 'resource',
  },
  {
    properties: {
      admin_account_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_guardduty_organization_admin_account',
    type: 'resource',
  },
  {
    properties: {
      auto_enable: { type: 'boolean', required: true },
      detector_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_guardduty_organization_configuration',
    type: 'resource',
  },
  {
    properties: {
      destination_arn: { type: 'string', required: true },
      destination_type: { type: 'string', optional: true },
      detector_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_arn: { type: 'string', required: true },
    },
    title: 'aws_guardduty_publishing_destination',
    type: 'resource',
  },
  {
    properties: {
      activate: { type: 'boolean', required: true },
      arn: { type: 'string', computed: true },
      detector_id: { type: 'string', required: true },
      format: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      location: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_guardduty_threatintelset',
    type: 'resource',
  },
  {
    properties: {
      create_date: { type: 'string', computed: true },
      encrypted_secret: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      key_fingerprint: { type: 'string', computed: true },
      pgp_key: { type: 'string', optional: true },
      secret: { type: 'string', computed: true, sensitive: true },
      ses_smtp_password_v4: { type: 'string', computed: true, sensitive: true },
      status: { type: 'string', optional: true, computed: true },
      user: { type: 'string', required: true },
    },
    title: 'aws_iam_access_key',
    type: 'resource',
  },
  {
    properties: {
      account_alias: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_iam_account_alias',
    type: 'resource',
  },
  {
    properties: {
      allow_users_to_change_password: { type: 'boolean', optional: true },
      expire_passwords: { type: 'boolean', computed: true },
      hard_expiry: { type: 'boolean', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      max_password_age: { type: 'number', optional: true, computed: true },
      minimum_password_length: { type: 'number', optional: true },
      password_reuse_prevention: {
        type: 'number',
        optional: true,
        computed: true,
      },
      require_lowercase_characters: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      require_numbers: { type: 'boolean', optional: true, computed: true },
      require_symbols: { type: 'boolean', optional: true, computed: true },
      require_uppercase_characters: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
    },
    title: 'aws_iam_account_password_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      path: { type: 'string', optional: true },
      unique_id: { type: 'string', computed: true },
    },
    title: 'aws_iam_group',
    type: 'resource',
  },
  {
    properties: {
      group: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      users: { type: 'object', required: true },
    },
    title: 'aws_iam_group_membership',
    type: 'resource',
  },
  {
    properties: {
      group: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_iam_group_policy',
    type: 'resource',
  },
  {
    properties: {
      group: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      policy_arn: { type: 'string', required: true },
    },
    title: 'aws_iam_group_policy_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      create_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      path: { type: 'string', optional: true },
      role: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      unique_id: { type: 'string', computed: true },
    },
    title: 'aws_iam_instance_profile',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      client_id_list: { type: ['array', 'string'], required: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      thumbprint_list: { type: ['array', 'string'], required: true },
      url: { type: 'string', required: true },
    },
    title: 'aws_iam_openid_connect_provider',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      path: { type: 'string', optional: true },
      policy: { type: 'string', required: true },
      policy_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_iam_policy',
    type: 'resource',
  },
  {
    properties: {
      groups: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      policy_arn: { type: 'string', required: true },
      roles: { type: 'object', optional: true },
      users: { type: 'object', optional: true },
    },
    title: 'aws_iam_policy_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      assume_role_policy: { type: 'string', required: true },
      create_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      force_detach_policies: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      managed_policy_arns: { type: 'object', optional: true, computed: true },
      max_session_duration: { type: 'number', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      path: { type: 'string', optional: true },
      permissions_boundary: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      unique_id: { type: 'string', computed: true },
      inline_policy: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', optional: true },
          policy: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_iam_role',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      policy: { type: 'string', required: true },
      role: { type: 'string', required: true },
    },
    title: 'aws_iam_role_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy_arn: { type: 'string', required: true },
      role: { type: 'string', required: true },
    },
    title: 'aws_iam_role_policy_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      saml_metadata_document: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      valid_until: { type: 'string', computed: true },
    },
    title: 'aws_iam_saml_provider',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_body: { type: 'string', required: true },
      certificate_chain: { type: 'string', optional: true },
      expiration: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      path: { type: 'string', optional: true },
      private_key: { type: 'string', required: true, sensitive: true },
      tags: { type: 'object', optional: true },
      upload_date: { type: 'string', computed: true },
    },
    title: 'aws_iam_server_certificate',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      aws_service_name: { type: 'string', required: true },
      create_date: { type: 'string', computed: true },
      custom_suffix: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      path: { type: 'string', computed: true },
      unique_id: { type: 'string', computed: true },
    },
    title: 'aws_iam_service_linked_role',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      force_destroy: {
        type: 'boolean',
        description:
          'Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices',
        optional: true,
      },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      path: { type: 'string', optional: true },
      permissions_boundary: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      unique_id: { type: 'string', computed: true },
    },
    title: 'aws_iam_user',
    type: 'resource',
  },
  {
    properties: {
      groups: { type: 'object', required: true },
      id: { type: 'string', optional: true, computed: true },
      user: { type: 'string', required: true },
    },
    title: 'aws_iam_user_group_membership',
    type: 'resource',
  },
  {
    properties: {
      encrypted_password: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      key_fingerprint: { type: 'string', computed: true },
      password_length: { type: 'number', optional: true },
      password_reset_required: { type: 'boolean', optional: true },
      pgp_key: { type: 'string', required: true },
      user: { type: 'string', required: true },
    },
    title: 'aws_iam_user_login_profile',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      policy: { type: 'string', required: true },
      user: { type: 'string', required: true },
    },
    title: 'aws_iam_user_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy_arn: { type: 'string', required: true },
      user: { type: 'string', required: true },
    },
    title: 'aws_iam_user_policy_attachment',
    type: 'resource',
  },
  {
    properties: {
      encoding: { type: 'string', required: true },
      fingerprint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      public_key: { type: 'string', required: true },
      ssh_public_key_id: { type: 'string', computed: true },
      status: { type: 'string', optional: true, computed: true },
      username: { type: 'string', required: true },
    },
    title: 'aws_iam_user_ssh_key',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      change_description: { type: 'string', optional: true },
      data: { type: 'string', optional: true, computed: true },
      date_created: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      encrypted: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      owner: { type: 'string', computed: true },
      platform: { type: 'string', required: true },
      supported_os_versions: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', computed: true },
      uri: { type: 'string', optional: true },
      version: { type: 'string', required: true },
    },
    title: 'aws_imagebuilder_component',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      date_created: { type: 'string', computed: true },
      date_updated: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      distribution: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          license_configuration_arns: { type: 'object', optional: true },
          region: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_imagebuilder_distribution_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      date_created: { type: 'string', computed: true },
      distribution_configuration_arn: { type: 'string', optional: true },
      enhanced_image_metadata_enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      image_recipe_arn: { type: 'string', required: true },
      infrastructure_configuration_arn: { type: 'string', required: true },
      name: { type: 'string', computed: true },
      os_version: { type: 'string', computed: true },
      output_resources: {
        type: [
          'array',
          [
            'object',
            {
              amis: [
                'set',
                [
                  'object',
                  {
                    account_id: 'string',
                    description: 'string',
                    image: 'string',
                    name: 'string',
                    region: 'string',
                  },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      platform: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', computed: true },
      image_tests_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          image_tests_enabled: { type: 'boolean', optional: true },
          timeout_minutes: { type: 'number', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_imagebuilder_image',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      date_created: { type: 'string', computed: true },
      date_last_run: { type: 'string', computed: true },
      date_next_run: { type: 'string', computed: true },
      date_updated: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      distribution_configuration_arn: { type: 'string', optional: true },
      enhanced_image_metadata_enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      image_recipe_arn: { type: 'string', required: true },
      infrastructure_configuration_arn: { type: 'string', required: true },
      name: { type: 'string', required: true },
      platform: { type: 'string', computed: true },
      status: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      image_tests_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          image_tests_enabled: { type: 'boolean', optional: true },
          timeout_minutes: { type: 'number', optional: true },
        },
      },
      schedule: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          pipeline_execution_start_condition: {
            type: 'string',
            optional: true,
          },
          schedule_expression: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_imagebuilder_image_pipeline',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      date_created: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owner: { type: 'string', computed: true },
      parent_image: { type: 'string', required: true },
      platform: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', required: true },
      working_directory: { type: 'string', optional: true },
      block_device_mapping: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', optional: true },
          no_device: { type: 'boolean', optional: true },
          virtual_name: { type: 'string', optional: true },
        },
      },
      component: {
        nesting_mode: 'list',
        min_items: 1,
        properties: { component_arn: { type: 'string', required: true } },
      },
    },
    title: 'aws_imagebuilder_image_recipe',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      date_created: { type: 'string', computed: true },
      date_updated: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_profile_name: { type: 'string', required: true },
      instance_types: { type: 'object', optional: true },
      key_pair: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      resource_tags: { type: 'object', optional: true },
      security_group_ids: { type: 'object', optional: true },
      sns_topic_arn: { type: 'string', optional: true },
      subnet_id: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      terminate_instance_on_failure: { type: 'boolean', optional: true },
      logging: {
        nesting_mode: 'list',
        block: {
          block_types: {
            s3_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  s3_bucket_name: { type: 'string', required: true },
                  s3_key_prefix: { type: 'string', optional: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_imagebuilder_infrastructure_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_group_arn: { type: 'string', optional: true },
    },
    title: 'aws_inspector_assessment_target',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      duration: { type: 'number', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      rules_package_arns: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      target_arn: { type: 'string', required: true },
    },
    title: 'aws_inspector_assessment_template',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', required: true },
    },
    title: 'aws_inspector_resource_group',
    type: 'resource',
  },
  {
    properties: {
      ami: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      associate_public_ip_address: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      availability_zone: { type: 'string', optional: true, computed: true },
      cpu_core_count: { type: 'number', optional: true, computed: true },
      cpu_threads_per_core: { type: 'number', optional: true, computed: true },
      disable_api_termination: { type: 'boolean', optional: true },
      ebs_optimized: { type: 'boolean', optional: true },
      get_password_data: { type: 'boolean', optional: true },
      hibernation: { type: 'boolean', optional: true },
      host_id: { type: 'string', optional: true, computed: true },
      iam_instance_profile: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_initiated_shutdown_behavior: { type: 'string', optional: true },
      instance_state: { type: 'string', computed: true },
      instance_type: { type: 'string', required: true },
      ipv6_address_count: { type: 'number', optional: true, computed: true },
      ipv6_addresses: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      key_name: { type: 'string', optional: true, computed: true },
      monitoring: { type: 'boolean', optional: true },
      outpost_arn: { type: 'string', computed: true },
      password_data: { type: 'string', computed: true },
      placement_group: { type: 'string', optional: true, computed: true },
      primary_network_interface_id: { type: 'string', computed: true },
      private_dns: { type: 'string', computed: true },
      private_ip: { type: 'string', optional: true, computed: true },
      public_dns: { type: 'string', computed: true },
      public_ip: { type: 'string', computed: true },
      secondary_private_ips: { type: 'object', optional: true, computed: true },
      security_groups: { type: 'object', optional: true, computed: true },
      source_dest_check: { type: 'boolean', optional: true },
      subnet_id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      tenancy: { type: 'string', optional: true, computed: true },
      user_data: { type: 'string', optional: true },
      user_data_base64: { type: 'string', optional: true },
      volume_tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      credit_specification: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { cpu_credits: { type: 'string', optional: true } },
      },
      ebs_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_name: { type: 'string', required: true },
          encrypted: { type: 'boolean', optional: true, computed: true },
          iops: { type: 'number', optional: true, computed: true },
          kms_key_id: { type: 'string', optional: true, computed: true },
          snapshot_id: { type: 'string', optional: true, computed: true },
          tags: { type: 'object', optional: true },
          throughput: { type: 'number', optional: true, computed: true },
          volume_id: { type: 'string', computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      enclave_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true, computed: true },
        },
      },
      ephemeral_block_device: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', required: true },
          no_device: { type: 'boolean', optional: true },
          virtual_name: { type: 'string', optional: true },
        },
      },
      metadata_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          http_endpoint: { type: 'string', optional: true, computed: true },
          http_put_response_hop_limit: {
            type: 'number',
            optional: true,
            computed: true,
          },
          http_tokens: { type: 'string', optional: true, computed: true },
        },
      },
      network_interface: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_index: { type: 'number', required: true },
          network_interface_id: { type: 'string', required: true },
        },
      },
      root_block_device: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_name: { type: 'string', computed: true },
          encrypted: { type: 'boolean', optional: true, computed: true },
          iops: { type: 'number', optional: true, computed: true },
          kms_key_id: { type: 'string', optional: true, computed: true },
          tags: { type: 'object', optional: true },
          throughput: { type: 'number', optional: true, computed: true },
          volume_id: { type: 'string', computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_instance',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', optional: true },
    },
    title: 'aws_internet_gateway',
    type: 'resource',
  },
  {
    properties: {
      active: { type: 'boolean', required: true },
      arn: { type: 'string', computed: true },
      certificate_pem: { type: 'string', computed: true, sensitive: true },
      csr: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      private_key: { type: 'string', computed: true, sensitive: true },
      public_key: { type: 'string', computed: true, sensitive: true },
    },
    title: 'aws_iot_certificate',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      default_version_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_iot_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      target: { type: 'string', required: true },
    },
    title: 'aws_iot_policy_attachment',
    type: 'resource',
  },
  {
    properties: {
      alias: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      credential_duration: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      role_arn: { type: 'string', required: true },
    },
    title: 'aws_iot_role_alias',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      attributes: { type: 'object', optional: true },
      default_client_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      thing_type_name: { type: 'string', optional: true },
      version: { type: 'number', computed: true },
    },
    title: 'aws_iot_thing',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      principal: { type: 'string', required: true },
      thing: { type: 'string', required: true },
    },
    title: 'aws_iot_thing_principal_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      deprecated: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      properties: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          description: { type: 'string', optional: true },
          searchable_attributes: {
            type: 'object',
            optional: true,
            computed: true,
          },
        },
      },
    },
    title: 'aws_iot_thing_type',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      enabled: { type: 'boolean', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      sql: { type: 'string', required: true },
      sql_version: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      cloudwatch_alarm: {
        nesting_mode: 'set',
        properties: {
          alarm_name: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
          state_reason: { type: 'string', required: true },
          state_value: { type: 'string', required: true },
        },
      },
      cloudwatch_metric: {
        nesting_mode: 'set',
        properties: {
          metric_name: { type: 'string', required: true },
          metric_namespace: { type: 'string', required: true },
          metric_timestamp: { type: 'string', optional: true },
          metric_unit: { type: 'string', required: true },
          metric_value: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
        },
      },
      dynamodb: {
        nesting_mode: 'set',
        properties: {
          hash_key_field: { type: 'string', required: true },
          hash_key_type: { type: 'string', optional: true },
          hash_key_value: { type: 'string', required: true },
          operation: { type: 'string', optional: true },
          payload_field: { type: 'string', optional: true },
          range_key_field: { type: 'string', optional: true },
          range_key_type: { type: 'string', optional: true },
          range_key_value: { type: 'string', optional: true },
          role_arn: { type: 'string', required: true },
          table_name: { type: 'string', required: true },
        },
      },
      dynamodbv2: {
        nesting_mode: 'set',
        properties: { role_arn: { type: 'string', required: true } },
      },
      elasticsearch: {
        nesting_mode: 'set',
        properties: {
          endpoint: { type: 'string', required: true },
          id: { type: 'string', required: true },
          index: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
          type: { type: 'string', required: true },
        },
      },
      error_action: {
        nesting_mode: 'list',
        block: {
          block_types: {
            cloudwatch_alarm: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  alarm_name: { type: 'string', required: true },
                  role_arn: { type: 'string', required: true },
                  state_reason: { type: 'string', required: true },
                  state_value: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            cloudwatch_metric: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  metric_name: { type: 'string', required: true },
                  metric_namespace: { type: 'string', required: true },
                  metric_timestamp: { type: 'string', optional: true },
                  metric_unit: { type: 'string', required: true },
                  metric_value: { type: 'string', required: true },
                  role_arn: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            dynamodb: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  hash_key_field: { type: 'string', required: true },
                  hash_key_type: { type: 'string', optional: true },
                  hash_key_value: { type: 'string', required: true },
                  operation: { type: 'string', optional: true },
                  payload_field: { type: 'string', optional: true },
                  range_key_field: { type: 'string', optional: true },
                  range_key_type: { type: 'string', optional: true },
                  range_key_value: { type: 'string', optional: true },
                  role_arn: { type: 'string', required: true },
                  table_name: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            dynamodbv2: {
              nesting_mode: 'list',
              block: {
                attributes: { role_arn: { type: 'string', required: true } },
                block_types: {
                  put_item: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        table_name: { type: 'string', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            elasticsearch: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  endpoint: { type: 'string', required: true },
                  id: { type: 'string', required: true },
                  index: { type: 'string', required: true },
                  role_arn: { type: 'string', required: true },
                  type: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            firehose: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  delivery_stream_name: { type: 'string', required: true },
                  role_arn: { type: 'string', required: true },
                  separator: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
            iot_analytics: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  channel_name: { type: 'string', required: true },
                  role_arn: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            iot_events: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  input_name: { type: 'string', required: true },
                  message_id: { type: 'string', optional: true },
                  role_arn: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            kinesis: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  partition_key: { type: 'string', optional: true },
                  role_arn: { type: 'string', required: true },
                  stream_name: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            lambda: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  function_arn: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            republish: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  qos: { type: 'number', optional: true },
                  role_arn: { type: 'string', required: true },
                  topic: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            s3: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  bucket_name: { type: 'string', required: true },
                  key: { type: 'string', required: true },
                  role_arn: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            sns: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  message_format: { type: 'string', optional: true },
                  role_arn: { type: 'string', required: true },
                  target_arn: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
            sqs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  queue_url: { type: 'string', required: true },
                  role_arn: { type: 'string', required: true },
                  use_base64: { type: 'bool', required: true },
                },
              },
              max_items: 1,
            },
            step_functions: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  execution_name_prefix: { type: 'string', optional: true },
                  role_arn: { type: 'string', required: true },
                  state_machine_name: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      firehose: {
        nesting_mode: 'set',
        properties: {
          delivery_stream_name: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
          separator: { type: 'string', optional: true },
        },
      },
      iot_analytics: {
        nesting_mode: 'set',
        properties: {
          channel_name: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
        },
      },
      iot_events: {
        nesting_mode: 'set',
        properties: {
          input_name: { type: 'string', required: true },
          message_id: { type: 'string', optional: true },
          role_arn: { type: 'string', required: true },
        },
      },
      kinesis: {
        nesting_mode: 'set',
        properties: {
          partition_key: { type: 'string', optional: true },
          role_arn: { type: 'string', required: true },
          stream_name: { type: 'string', required: true },
        },
      },
      lambda: {
        nesting_mode: 'set',
        properties: { function_arn: { type: 'string', required: true } },
      },
      republish: {
        nesting_mode: 'set',
        properties: {
          qos: { type: 'number', optional: true },
          role_arn: { type: 'string', required: true },
          topic: { type: 'string', required: true },
        },
      },
      s3: {
        nesting_mode: 'set',
        properties: {
          bucket_name: { type: 'string', required: true },
          key: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
        },
      },
      sns: {
        nesting_mode: 'set',
        properties: {
          message_format: { type: 'string', optional: true },
          role_arn: { type: 'string', required: true },
          target_arn: { type: 'string', required: true },
        },
      },
      sqs: {
        nesting_mode: 'set',
        properties: {
          queue_url: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
          use_base64: { type: 'boolean', required: true },
        },
      },
      step_functions: {
        nesting_mode: 'set',
        properties: {
          execution_name_prefix: { type: 'string', optional: true },
          role_arn: { type: 'string', required: true },
          state_machine_name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_iot_topic_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      fingerprint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      key_name: { type: 'string', optional: true, computed: true },
      key_name_prefix: { type: 'string', optional: true },
      key_pair_id: { type: 'string', computed: true },
      public_key: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_key_pair',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      code: { type: 'string', optional: true },
      create_timestamp: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_update_timestamp: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      start_application: { type: 'boolean', optional: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version: { type: 'number', computed: true },
      cloudwatch_logging_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', computed: true },
          log_stream_arn: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
        },
      },
      inputs: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', computed: true },
          name_prefix: { type: 'string', required: true },
          stream_names: { type: ['array', 'string'], computed: true },
        },
      },
      outputs: {
        nesting_mode: 'set',
        max_items: 3,
        properties: {
          id: { type: 'string', computed: true },
          name: { type: 'string', required: true },
        },
      },
      reference_data_sources: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', computed: true },
          table_name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_kinesis_analytics_application',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      destination: { type: 'string', required: true },
      destination_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      version_id: { type: 'string', optional: true, computed: true },
      elasticsearch_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          buffering_interval: { type: 'number', optional: true },
          buffering_size: { type: 'number', optional: true },
          cluster_endpoint: { type: 'string', optional: true },
          domain_arn: { type: 'string', optional: true },
          index_name: { type: 'string', required: true },
          index_rotation_period: { type: 'string', optional: true },
          retry_duration: { type: 'number', optional: true },
          role_arn: { type: 'string', required: true },
          s3_backup_mode: { type: 'string', optional: true },
          type_name: { type: 'string', optional: true },
        },
      },
      extended_s3_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_arn: { type: 'string', required: true },
          buffer_interval: { type: 'number', optional: true },
          buffer_size: { type: 'number', optional: true },
          compression_format: { type: 'string', optional: true },
          error_output_prefix: { type: 'string', optional: true },
          kms_key_arn: { type: 'string', optional: true },
          prefix: { type: 'string', optional: true },
          role_arn: { type: 'string', required: true },
          s3_backup_mode: { type: 'string', optional: true },
        },
      },
      http_endpoint_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          access_key: { type: 'string', optional: true, sensitive: true },
          buffering_interval: { type: 'number', optional: true },
          buffering_size: { type: 'number', optional: true },
          name: { type: 'string', optional: true },
          retry_duration: { type: 'number', optional: true },
          role_arn: { type: 'string', optional: true },
          s3_backup_mode: { type: 'string', optional: true },
          url: { type: 'string', required: true },
        },
      },
      kinesis_source_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          kinesis_stream_arn: { type: 'string', required: true },
          role_arn: { type: 'string', required: true },
        },
      },
      redshift_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cluster_jdbcurl: { type: 'string', required: true },
          copy_options: { type: 'string', optional: true },
          data_table_columns: { type: 'string', optional: true },
          data_table_name: { type: 'string', required: true },
          password: { type: 'string', required: true, sensitive: true },
          retry_duration: { type: 'number', optional: true },
          role_arn: { type: 'string', required: true },
          s3_backup_mode: { type: 'string', optional: true },
          username: { type: 'string', required: true },
        },
      },
      s3_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_arn: { type: 'string', required: true },
          buffer_interval: { type: 'number', optional: true },
          buffer_size: { type: 'number', optional: true },
          compression_format: { type: 'string', optional: true },
          kms_key_arn: { type: 'string', optional: true },
          prefix: { type: 'string', optional: true },
          role_arn: { type: 'string', required: true },
        },
      },
      server_side_encryption: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true },
          key_arn: { type: 'string', optional: true },
          key_type: { type: 'string', optional: true },
        },
      },
      splunk_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          hec_acknowledgment_timeout: { type: 'number', optional: true },
          hec_endpoint: { type: 'string', required: true },
          hec_endpoint_type: { type: 'string', optional: true },
          hec_token: { type: 'string', required: true },
          retry_duration: { type: 'number', optional: true },
          s3_backup_mode: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_kinesis_firehose_delivery_stream',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      encryption_type: { type: 'string', optional: true },
      enforce_consumer_deletion: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      retention_period: { type: 'number', optional: true },
      shard_count: { type: 'number', required: true },
      shard_level_metrics: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_kinesis_stream',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      creation_timestamp: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      stream_arn: { type: 'string', required: true },
    },
    title: 'aws_kinesis_stream_consumer',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      creation_time: { type: 'string', computed: true },
      data_retention_in_hours: { type: 'number', optional: true },
      device_name: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      media_type: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_kinesis_video_stream',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      create_timestamp: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      force_stop: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_update_timestamp: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      runtime_environment: { type: 'string', required: true },
      service_execution_role: { type: 'string', required: true },
      start_application: { type: 'boolean', optional: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version_id: { type: 'number', computed: true },
      application_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            application_code_configuration: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  code_content_type: { type: 'string', required: true },
                },
                block_types: {
                  code_content: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        text_content: { type: 'string', optional: true },
                      },
                      block_types: {
                        s3_content_location: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              bucket_arn: { type: 'string', required: true },
                              file_key: { type: 'string', required: true },
                              object_version: {
                                type: 'string',
                                optional: true,
                              },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            application_snapshot_configuration: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  snapshots_enabled: { type: 'bool', required: true },
                },
              },
              max_items: 1,
            },
            environment_properties: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  property_group: {
                    nesting_mode: 'set',
                    block: {
                      attributes: {
                        property_group_id: { type: 'string', required: true },
                        property_map: {
                          type: ['map', 'string'],
                          required: true,
                        },
                      },
                    },
                    min_items: 1,
                    max_items: 50,
                  },
                },
              },
              max_items: 1,
            },
            flink_application_configuration: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  checkpoint_configuration: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        checkpoint_interval: {
                          type: 'number',
                          optional: true,
                          computed: true,
                        },
                        checkpointing_enabled: {
                          type: 'bool',
                          optional: true,
                          computed: true,
                        },
                        configuration_type: { type: 'string', required: true },
                        min_pause_between_checkpoints: {
                          type: 'number',
                          optional: true,
                          computed: true,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  monitoring_configuration: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        configuration_type: { type: 'string', required: true },
                        log_level: {
                          type: 'string',
                          optional: true,
                          computed: true,
                        },
                        metrics_level: {
                          type: 'string',
                          optional: true,
                          computed: true,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  parallelism_configuration: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        auto_scaling_enabled: {
                          type: 'bool',
                          optional: true,
                          computed: true,
                        },
                        configuration_type: { type: 'string', required: true },
                        parallelism: {
                          type: 'number',
                          optional: true,
                          computed: true,
                        },
                        parallelism_per_kpu: {
                          type: 'number',
                          optional: true,
                          computed: true,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            run_configuration: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  application_restore_configuration: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        application_restore_type: {
                          type: 'string',
                          optional: true,
                          computed: true,
                        },
                        snapshot_name: { type: 'string', optional: true },
                      },
                    },
                    max_items: 1,
                  },
                  flink_run_configuration: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        allow_non_restored_state: {
                          type: 'bool',
                          optional: true,
                          computed: true,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            sql_application_configuration: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  input: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        in_app_stream_names: {
                          type: ['list', 'string'],
                          computed: true,
                        },
                        input_id: { type: 'string', computed: true },
                        name_prefix: { type: 'string', required: true },
                      },
                      block_types: {
                        input_parallelism: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              count: {
                                type: 'number',
                                optional: true,
                                computed: true,
                              },
                            },
                          },
                          max_items: 1,
                        },
                        input_processing_configuration: {
                          nesting_mode: 'list',
                          block: {
                            block_types: {
                              input_lambda_processor: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    resource_arn: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          max_items: 1,
                        },
                        input_schema: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              record_encoding: {
                                type: 'string',
                                optional: true,
                              },
                            },
                            block_types: {
                              record_column: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    mapping: { type: 'string', optional: true },
                                    name: { type: 'string', required: true },
                                    sql_type: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1000,
                              },
                              record_format: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    record_format_type: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                  block_types: {
                                    mapping_parameters: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          csv_mapping_parameters: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                record_column_delimiter: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                                record_row_delimiter: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          json_mapping_parameters: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                record_row_path: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                        input_starting_position_configuration: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              input_starting_position: {
                                type: 'string',
                                optional: true,
                                computed: true,
                              },
                            },
                          },
                        },
                        kinesis_firehose_input: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              resource_arn: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                        kinesis_streams_input: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              resource_arn: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  output: {
                    nesting_mode: 'set',
                    block: {
                      attributes: {
                        name: { type: 'string', required: true },
                        output_id: { type: 'string', computed: true },
                      },
                      block_types: {
                        destination_schema: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              record_format_type: {
                                type: 'string',
                                required: true,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                        kinesis_firehose_output: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              resource_arn: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                        kinesis_streams_output: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              resource_arn: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                        lambda_output: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              resource_arn: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 3,
                  },
                  reference_data_source: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        reference_id: { type: 'string', computed: true },
                        table_name: { type: 'string', required: true },
                      },
                      block_types: {
                        reference_schema: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              record_encoding: {
                                type: 'string',
                                optional: true,
                              },
                            },
                            block_types: {
                              record_column: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    mapping: { type: 'string', optional: true },
                                    name: { type: 'string', required: true },
                                    sql_type: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1000,
                              },
                              record_format: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    record_format_type: {
                                      type: 'string',
                                      required: true,
                                    },
                                  },
                                  block_types: {
                                    mapping_parameters: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          csv_mapping_parameters: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                record_column_delimiter: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                                record_row_delimiter: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                          json_mapping_parameters: {
                                            nesting_mode: 'list',
                                            block: {
                                              attributes: {
                                                record_row_path: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            max_items: 1,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                        s3_reference_data_source: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              bucket_arn: { type: 'string', required: true },
                              file_key: { type: 'string', required: true },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 1,
            },
            vpc_configuration: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  security_group_ids: {
                    type: ['set', 'string'],
                    required: true,
                  },
                  subnet_ids: { type: ['set', 'string'], required: true },
                  vpc_configuration_id: { type: 'string', computed: true },
                  vpc_id: { type: 'string', computed: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      cloudwatch_logging_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cloudwatch_logging_option_id: { type: 'string', computed: true },
          log_stream_arn: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_kinesisanalyticsv2_application',
    type: 'resource',
  },
  {
    properties: {
      application_name: { type: 'string', required: true },
      application_version_id: { type: 'number', computed: true },
      id: { type: 'string', optional: true, computed: true },
      snapshot_creation_timestamp: { type: 'string', computed: true },
      snapshot_name: { type: 'string', required: true },
    },
    title: 'aws_kinesisanalyticsv2_application_snapshot',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      name_prefix: { type: 'string', optional: true },
      target_key_arn: { type: 'string', computed: true },
      target_key_id: { type: 'string', required: true },
    },
    title: 'aws_kms_alias',
    type: 'resource',
  },
  {
    properties: {
      ciphertext_blob: { type: 'string', computed: true },
      context: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      key_id: { type: 'string', required: true },
      plaintext: { type: 'string', required: true, sensitive: true },
    },
    title: 'aws_kms_ciphertext',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      deletion_window_in_days: { type: 'number', optional: true },
      description: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true, computed: true },
      expiration_model: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      key_material_base64: { type: 'string', optional: true, sensitive: true },
      key_state: { type: 'string', computed: true },
      key_usage: { type: 'string', computed: true },
      policy: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      valid_to: { type: 'string', optional: true },
    },
    title: 'aws_kms_external_key',
    type: 'resource',
  },
  {
    properties: {
      grant_creation_tokens: { type: 'object', optional: true },
      grant_id: { type: 'string', computed: true },
      grant_token: { type: 'string', computed: true },
      grantee_principal: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      key_id: { type: 'string', required: true },
      name: { type: 'string', optional: true },
      operations: { type: 'object', required: true },
      retire_on_delete: { type: 'boolean', optional: true },
      retiring_principal: { type: 'string', optional: true },
      constraints: {
        nesting_mode: 'set',
        properties: {
          encryption_context_equals: { type: 'object', optional: true },
          encryption_context_subset: { type: 'object', optional: true },
        },
      },
    },
    title: 'aws_kms_grant',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      customer_master_key_spec: { type: 'string', optional: true },
      deletion_window_in_days: { type: 'number', optional: true },
      description: { type: 'string', optional: true, computed: true },
      enable_key_rotation: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      is_enabled: { type: 'boolean', optional: true },
      key_id: { type: 'string', computed: true },
      key_usage: { type: 'string', optional: true },
      policy: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_kms_key',
    type: 'resource',
  },
  {
    properties: {
      admins: { type: 'object', optional: true, computed: true },
      catalog_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      trusted_resource_owners: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      create_database_default_permissions: {
        nesting_mode: 'list',
        max_items: 3,
        properties: {
          permissions: { type: 'object', optional: true, computed: true },
          principal: { type: 'string', optional: true, computed: true },
        },
      },
      create_table_default_permissions: {
        nesting_mode: 'list',
        max_items: 3,
        properties: {
          permissions: { type: 'object', optional: true, computed: true },
          principal: { type: 'string', optional: true, computed: true },
        },
      },
    },
    title: 'aws_lakeformation_data_lake_settings',
    type: 'resource',
  },
  {
    properties: {
      catalog_id: { type: 'string', optional: true },
      catalog_resource: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      permissions: { type: ['array', 'string'], required: true },
      permissions_with_grant_option: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      principal: { type: 'string', required: true },
      data_location: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          arn: { type: 'string', required: true },
          catalog_id: { type: 'string', optional: true, computed: true },
        },
      },
      database: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          catalog_id: { type: 'string', optional: true, computed: true },
          name: { type: 'string', required: true },
        },
      },
      table: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          catalog_id: { type: 'string', optional: true, computed: true },
          database_name: { type: 'string', required: true },
          name: { type: 'string', optional: true, computed: true },
          wildcard: { type: 'boolean', optional: true },
        },
      },
      table_with_columns: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          catalog_id: { type: 'string', optional: true, computed: true },
          column_names: { type: ['array', 'string'], optional: true },
          database_name: { type: 'string', required: true },
          excluded_column_names: { type: ['array', 'string'], optional: true },
          name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_lakeformation_permissions',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      last_modified: { type: 'string', computed: true },
      role_arn: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_lakeformation_resource',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      function_name: { type: 'string', required: true },
      function_version: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      invoke_arn: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      routing_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          additional_version_weights: { type: 'object', optional: true },
        },
      },
    },
    title: 'aws_lambda_alias',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      config_id: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_modified: { type: 'string', computed: true },
      allowed_publishers: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          signing_profile_version_arns: { type: 'object', required: true },
        },
      },
      policies: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          untrusted_artifact_on_deployment: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_lambda_code_signing_config',
    type: 'resource',
  },
  {
    properties: {
      batch_size: { type: 'number', optional: true },
      bisect_batch_on_function_error: { type: 'boolean', optional: true },
      enabled: { type: 'boolean', optional: true },
      event_source_arn: { type: 'string', required: true },
      function_arn: { type: 'string', computed: true },
      function_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      last_modified: { type: 'string', computed: true },
      last_processing_result: { type: 'string', computed: true },
      maximum_batching_window_in_seconds: { type: 'number', optional: true },
      maximum_record_age_in_seconds: {
        type: 'number',
        optional: true,
        computed: true,
      },
      maximum_retry_attempts: {
        type: 'number',
        optional: true,
        computed: true,
      },
      parallelization_factor: {
        type: 'number',
        optional: true,
        computed: true,
      },
      starting_position: { type: 'string', optional: true },
      starting_position_timestamp: { type: 'string', optional: true },
      state: { type: 'string', computed: true },
      state_transition_reason: { type: 'string', computed: true },
      topics: { type: 'object', optional: true },
      uuid: { type: 'string', computed: true },
      destination_config: {
        nesting_mode: 'list',
        block: {
          block_types: {
            on_failure: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  destination_arn: { type: 'string', required: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_lambda_event_source_mapping',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      code_signing_config_arn: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      filename: { type: 'string', optional: true },
      function_name: { type: 'string', required: true },
      handler: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      image_uri: { type: 'string', optional: true },
      invoke_arn: { type: 'string', computed: true },
      kms_key_arn: { type: 'string', optional: true },
      last_modified: { type: 'string', computed: true },
      layers: { type: ['array', 'string'], optional: true },
      memory_size: { type: 'number', optional: true },
      package_type: { type: 'string', optional: true },
      publish: { type: 'boolean', optional: true },
      qualified_arn: { type: 'string', computed: true },
      reserved_concurrent_executions: { type: 'number', optional: true },
      role: { type: 'string', required: true },
      runtime: { type: 'string', optional: true },
      s3_bucket: { type: 'string', optional: true },
      s3_key: { type: 'string', optional: true },
      s3_object_version: { type: 'string', optional: true },
      signing_job_arn: { type: 'string', computed: true },
      signing_profile_version_arn: { type: 'string', computed: true },
      source_code_hash: { type: 'string', optional: true, computed: true },
      source_code_size: { type: 'number', computed: true },
      tags: { type: 'object', optional: true },
      timeout: { type: 'number', optional: true },
      version: { type: 'string', computed: true },
      dead_letter_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { target_arn: { type: 'string', required: true } },
      },
      environment: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { variables: { type: 'object', optional: true } },
      },
      file_system_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          arn: { type: 'string', required: true },
          local_mount_path: { type: 'string', required: true },
        },
      },
      image_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          command: { type: ['array', 'string'], optional: true },
          entry_point: { type: ['array', 'string'], optional: true },
          working_directory: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
      tracing_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { mode: { type: 'string', required: true } },
      },
      vpc_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          security_group_ids: { type: 'object', required: true },
          subnet_ids: { type: 'object', required: true },
          vpc_id: { type: 'string', computed: true },
        },
      },
    },
    title: 'aws_lambda_function',
    type: 'resource',
  },
  {
    properties: {
      function_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      maximum_event_age_in_seconds: { type: 'number', optional: true },
      maximum_retry_attempts: { type: 'number', optional: true },
      qualifier: { type: 'string', optional: true },
      destination_config: {
        nesting_mode: 'list',
        block: {
          block_types: {
            on_failure: {
              nesting_mode: 'list',
              block: {
                attributes: { destination: { type: 'string', required: true } },
              },
              max_items: 1,
            },
            on_success: {
              nesting_mode: 'list',
              block: {
                attributes: { destination: { type: 'string', required: true } },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_lambda_function_event_invoke_config',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      compatible_runtimes: { type: 'object', optional: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      filename: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      layer_arn: { type: 'string', computed: true },
      layer_name: { type: 'string', required: true },
      license_info: { type: 'string', optional: true },
      s3_bucket: { type: 'string', optional: true },
      s3_key: { type: 'string', optional: true },
      s3_object_version: { type: 'string', optional: true },
      signing_job_arn: { type: 'string', computed: true },
      signing_profile_version_arn: { type: 'string', computed: true },
      source_code_hash: { type: 'string', optional: true, computed: true },
      source_code_size: { type: 'number', computed: true },
      version: { type: 'string', computed: true },
    },
    title: 'aws_lambda_layer_version',
    type: 'resource',
  },
  {
    properties: {
      action: { type: 'string', required: true },
      event_source_token: { type: 'string', optional: true },
      function_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      principal: { type: 'string', required: true },
      qualifier: { type: 'string', optional: true },
      source_account: { type: 'string', optional: true },
      source_arn: { type: 'string', optional: true },
      statement_id: { type: 'string', optional: true, computed: true },
      statement_id_prefix: { type: 'string', optional: true },
    },
    title: 'aws_lambda_permission',
    type: 'resource',
  },
  {
    properties: {
      function_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      provisioned_concurrent_executions: { type: 'number', required: true },
      qualifier: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_lambda_provisioned_concurrency_config',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      associate_public_ip_address: { type: 'boolean', optional: true },
      ebs_optimized: { type: 'boolean', optional: true, computed: true },
      enable_monitoring: { type: 'boolean', optional: true },
      iam_instance_profile: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      image_id: { type: 'string', required: true },
      instance_type: { type: 'string', required: true },
      key_name: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      placement_tenancy: { type: 'string', optional: true },
      security_groups: { type: 'object', optional: true },
      spot_price: { type: 'string', optional: true },
      user_data: { type: 'string', optional: true },
      user_data_base64: { type: 'string', optional: true },
      vpc_classic_link_id: { type: 'string', optional: true },
      vpc_classic_link_security_groups: { type: 'object', optional: true },
      ebs_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_name: { type: 'string', required: true },
          encrypted: { type: 'boolean', optional: true, computed: true },
          iops: { type: 'number', optional: true, computed: true },
          no_device: { type: 'boolean', optional: true },
          snapshot_id: { type: 'string', optional: true, computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      ephemeral_block_device: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', required: true },
          virtual_name: { type: 'string', required: true },
        },
      },
      metadata_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          http_endpoint: { type: 'string', optional: true, computed: true },
          http_put_response_hop_limit: {
            type: 'number',
            optional: true,
            computed: true,
          },
          http_tokens: { type: 'string', optional: true, computed: true },
        },
      },
      root_block_device: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          encrypted: { type: 'boolean', optional: true, computed: true },
          iops: { type: 'number', optional: true, computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
    },
    title: 'aws_launch_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      default_version: { type: 'number', optional: true, computed: true },
      description: { type: 'string', optional: true },
      disable_api_termination: { type: 'boolean', optional: true },
      ebs_optimized: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      image_id: { type: 'string', optional: true },
      instance_initiated_shutdown_behavior: { type: 'string', optional: true },
      instance_type: { type: 'string', optional: true },
      kernel_id: { type: 'string', optional: true },
      key_name: { type: 'string', optional: true },
      latest_version: { type: 'number', computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      ram_disk_id: { type: 'string', optional: true },
      security_group_names: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      update_default_version: { type: 'boolean', optional: true },
      user_data: { type: 'string', optional: true },
      vpc_security_group_ids: { type: 'object', optional: true },
      block_device_mappings: {
        nesting_mode: 'list',
        properties: {
          device_name: { type: 'string', optional: true },
          no_device: { type: 'string', optional: true },
          virtual_name: { type: 'string', optional: true },
        },
      },
      capacity_reservation_specification: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          capacity_reservation_preference: { type: 'string', optional: true },
        },
      },
      cpu_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          core_count: { type: 'number', optional: true },
          threads_per_core: { type: 'number', optional: true },
        },
      },
      credit_specification: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { cpu_credits: { type: 'string', optional: true } },
      },
      elastic_gpu_specifications: {
        nesting_mode: 'list',
        properties: { type: { type: 'string', required: true } },
      },
      elastic_inference_accelerator: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { type: { type: 'string', required: true } },
      },
      enclave_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { enabled: { type: 'boolean', optional: true } },
      },
      hibernation_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { configured: { type: 'boolean', required: true } },
      },
      iam_instance_profile: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          arn: { type: 'string', optional: true },
          name: { type: 'string', optional: true },
        },
      },
      instance_market_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { market_type: { type: 'string', optional: true } },
      },
      license_specification: {
        nesting_mode: 'set',
        properties: {
          license_configuration_arn: { type: 'string', required: true },
        },
      },
      metadata_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          http_endpoint: { type: 'string', optional: true, computed: true },
          http_put_response_hop_limit: {
            type: 'number',
            optional: true,
            computed: true,
          },
          http_tokens: { type: 'string', optional: true, computed: true },
        },
      },
      monitoring: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { enabled: { type: 'boolean', optional: true } },
      },
      network_interfaces: {
        nesting_mode: 'list',
        properties: {
          associate_carrier_ip_address: { type: 'string', optional: true },
          associate_public_ip_address: { type: 'string', optional: true },
          delete_on_termination: { type: 'string', optional: true },
          description: { type: 'string', optional: true },
          device_index: { type: 'number', optional: true },
          ipv4_address_count: { type: 'number', optional: true },
          ipv4_addresses: { type: 'object', optional: true },
          ipv6_address_count: { type: 'number', optional: true },
          ipv6_addresses: { type: 'object', optional: true },
          network_interface_id: { type: 'string', optional: true },
          private_ip_address: { type: 'string', optional: true },
          security_groups: { type: 'object', optional: true },
          subnet_id: { type: 'string', optional: true },
        },
      },
      placement: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          affinity: { type: 'string', optional: true },
          availability_zone: { type: 'string', optional: true },
          group_name: { type: 'string', optional: true },
          host_id: { type: 'string', optional: true },
          partition_number: { type: 'number', optional: true },
          spread_domain: { type: 'string', optional: true },
          tenancy: { type: 'string', optional: true },
        },
      },
      tag_specifications: {
        nesting_mode: 'list',
        properties: {
          resource_type: { type: 'string', optional: true },
          tags: { type: 'object', optional: true },
        },
      },
    },
    title: 'aws_launch_template',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      arn_suffix: { type: 'string', computed: true },
      customer_owned_ipv4_pool: { type: 'string', optional: true },
      dns_name: { type: 'string', computed: true },
      drop_invalid_header_fields: { type: 'boolean', optional: true },
      enable_cross_zone_load_balancing: { type: 'boolean', optional: true },
      enable_deletion_protection: { type: 'boolean', optional: true },
      enable_http2: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      idle_timeout: { type: 'number', optional: true },
      internal: { type: 'boolean', optional: true, computed: true },
      ip_address_type: { type: 'string', optional: true, computed: true },
      load_balancer_type: { type: 'string', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      security_groups: { type: 'object', optional: true, computed: true },
      subnets: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      zone_id: { type: 'string', computed: true },
      access_logs: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket: { type: 'string', required: true },
          enabled: { type: 'boolean', optional: true },
          prefix: { type: 'string', optional: true },
        },
      },
      subnet_mapping: {
        nesting_mode: 'set',
        properties: {
          allocation_id: { type: 'string', optional: true },
          ipv6_address: { type: 'string', optional: true },
          outpost_id: { type: 'string', computed: true },
          private_ipv4_address: { type: 'string', optional: true },
          subnet_id: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_lb',
    type: 'resource',
  },
  {
    properties: {
      cookie_expiration_period: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      lb_port: { type: 'number', required: true },
      load_balancer: { type: 'string', required: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_lb_cookie_stickiness_policy',
    type: 'resource',
  },
  {
    properties: {
      alpn_policy: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      certificate_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      load_balancer_arn: { type: 'string', required: true },
      port: { type: 'number', optional: true },
      protocol: { type: 'string', optional: true, computed: true },
      ssl_policy: { type: 'string', optional: true, computed: true },
      default_action: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          order: { type: 'number', optional: true, computed: true },
          target_group_arn: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { read: { type: 'string', optional: true } },
      },
    },
    title: 'aws_lb_listener',
    type: 'resource',
  },
  {
    properties: {
      certificate_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      listener_arn: { type: 'string', required: true },
    },
    title: 'aws_lb_listener_certificate',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      listener_arn: { type: 'string', required: true },
      priority: { type: 'number', optional: true, computed: true },
      action: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          order: { type: 'number', optional: true, computed: true },
          target_group_arn: { type: 'string', optional: true },
          type: { type: 'string', required: true },
        },
      },
      condition: {
        nesting_mode: 'set',
        block: {
          block_types: {
            host_header: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            http_header: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  http_header_name: { type: 'string', required: true },
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            http_request_method: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            path_pattern: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
            query_string: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  key: { type: 'string', optional: true },
                  value: { type: 'string', required: true },
                },
              },
            },
            source_ip: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  values: { type: ['set', 'string'], required: true },
                },
              },
              max_items: 1,
            },
          },
        },
        min_items: 1,
      },
    },
    title: 'aws_lb_listener_rule',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      lb_port: { type: 'number', required: true },
      load_balancer: { type: 'string', required: true },
      name: { type: 'string', required: true },
      attribute: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_lb_ssl_negotiation_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      arn_suffix: { type: 'string', computed: true },
      deregistration_delay: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      lambda_multi_value_headers_enabled: { type: 'boolean', optional: true },
      load_balancing_algorithm_type: {
        type: 'string',
        optional: true,
        computed: true,
      },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      port: { type: 'number', optional: true },
      preserve_client_ip: { type: 'string', optional: true, computed: true },
      protocol: { type: 'string', optional: true },
      protocol_version: { type: 'string', optional: true, computed: true },
      proxy_protocol_v2: { type: 'boolean', optional: true },
      slow_start: { type: 'number', optional: true },
      tags: { type: 'object', optional: true },
      target_type: { type: 'string', optional: true },
      vpc_id: { type: 'string', optional: true },
      health_check: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true },
          healthy_threshold: { type: 'number', optional: true },
          interval: { type: 'number', optional: true },
          matcher: { type: 'string', optional: true, computed: true },
          path: { type: 'string', optional: true, computed: true },
          port: { type: 'string', optional: true },
          protocol: { type: 'string', optional: true },
          timeout: { type: 'number', optional: true, computed: true },
          unhealthy_threshold: { type: 'number', optional: true },
        },
      },
      stickiness: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cookie_duration: { type: 'number', optional: true },
          enabled: { type: 'boolean', optional: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_lb_target_group',
    type: 'resource',
  },
  {
    properties: {
      availability_zone: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true },
      target_group_arn: { type: 'string', required: true },
      target_id: { type: 'string', required: true },
    },
    title: 'aws_lb_target_group_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      checksum: { type: 'string', computed: true },
      child_directed: { type: 'boolean', required: true },
      create_version: { type: 'boolean', optional: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      detect_sentiment: { type: 'boolean', optional: true },
      enable_model_improvements: { type: 'boolean', optional: true },
      failure_reason: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      idle_session_ttl_in_seconds: { type: 'number', optional: true },
      last_updated_date: { type: 'string', computed: true },
      locale: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      nlu_intent_confidence_threshold: { type: 'number', optional: true },
      process_behavior: { type: 'string', optional: true },
      status: { type: 'string', computed: true },
      version: { type: 'string', computed: true },
      voice_id: { type: 'string', optional: true, computed: true },
      abort_statement: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { response_card: { type: 'string', optional: true } },
      },
      clarification_prompt: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          max_attempts: { type: 'number', required: true },
          response_card: { type: 'string', optional: true },
        },
      },
      intent: {
        nesting_mode: 'set',
        min_items: 1,
        max_items: 100,
        properties: {
          intent_name: { type: 'string', required: true },
          intent_version: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_lex_bot',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bot_name: { type: 'string', required: true },
      bot_version: { type: 'string', required: true },
      checksum: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      conversation_logs: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { iam_role_arn: { type: 'string', required: true } },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_lex_bot_alias',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      checksum: { type: 'string', computed: true },
      create_version: { type: 'boolean', optional: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      parent_intent_signature: { type: 'string', optional: true },
      sample_utterances: { type: 'object', optional: true },
      version: { type: 'string', computed: true },
      conclusion_statement: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { response_card: { type: 'string', optional: true } },
      },
      confirmation_prompt: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          max_attempts: { type: 'number', required: true },
          response_card: { type: 'string', optional: true },
        },
      },
      dialog_code_hook: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          message_version: { type: 'string', required: true },
          uri: { type: 'string', required: true },
        },
      },
      follow_up_prompt: {
        nesting_mode: 'list',
        block: {
          block_types: {
            prompt: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  max_attempts: { type: 'number', required: true },
                  response_card: { type: 'string', optional: true },
                },
                block_types: {
                  message: {
                    nesting_mode: 'set',
                    block: {
                      attributes: {
                        content: { type: 'string', required: true },
                        content_type: { type: 'string', required: true },
                        group_number: { type: 'number', optional: true },
                      },
                    },
                    min_items: 1,
                    max_items: 15,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            rejection_statement: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  response_card: { type: 'string', optional: true },
                },
                block_types: {
                  message: {
                    nesting_mode: 'set',
                    block: {
                      attributes: {
                        content: { type: 'string', required: true },
                        content_type: { type: 'string', required: true },
                        group_number: { type: 'number', optional: true },
                      },
                    },
                    min_items: 1,
                    max_items: 15,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      fulfillment_activity: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { type: { type: 'string', required: true } },
      },
      rejection_statement: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { response_card: { type: 'string', optional: true } },
      },
      slot: {
        nesting_mode: 'set',
        max_items: 100,
        properties: {
          description: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          priority: { type: 'number', optional: true },
          response_card: { type: 'string', optional: true },
          sample_utterances: { type: ['array', 'string'], optional: true },
          slot_constraint: { type: 'string', required: true },
          slot_type: { type: 'string', required: true },
          slot_type_version: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_lex_intent',
    type: 'resource',
  },
  {
    properties: {
      checksum: { type: 'string', computed: true },
      create_version: { type: 'boolean', optional: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      value_selection_strategy: { type: 'string', optional: true },
      version: { type: 'string', computed: true },
      enumeration_value: {
        nesting_mode: 'set',
        min_items: 1,
        max_items: 10000,
        properties: {
          synonyms: { type: 'object', optional: true },
          value: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_lex_slot_type',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      license_configuration_arn: { type: 'string', required: true },
      resource_arn: { type: 'string', required: true },
    },
    title: 'aws_licensemanager_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      license_count: { type: 'number', optional: true },
      license_count_hard_limit: { type: 'boolean', optional: true },
      license_counting_type: { type: 'string', required: true },
      license_rules: { type: ['array', 'string'], optional: true },
      name: { type: 'string', required: true },
      owner_account_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_licensemanager_license_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_lightsail_domain',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', required: true },
      blueprint_id: { type: 'string', required: true },
      bundle_id: { type: 'string', required: true },
      cpu_count: { type: 'number', computed: true },
      created_at: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_address: { type: 'string', computed: true },
      ipv6_addresses: { type: ['array', 'string'], computed: true },
      is_static_ip: { type: 'boolean', computed: true },
      key_pair_name: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      private_ip_address: { type: 'string', computed: true },
      public_ip_address: { type: 'string', computed: true },
      ram_size: { type: 'number', computed: true },
      tags: { type: 'object', optional: true },
      user_data: { type: 'string', optional: true },
      username: { type: 'string', computed: true },
    },
    title: 'aws_lightsail_instance',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_name: { type: 'string', required: true },
      port_info: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          cidrs: { type: 'object', optional: true, computed: true },
          from_port: { type: 'number', required: true },
          protocol: { type: 'string', required: true },
          to_port: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_lightsail_instance_public_ports',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      encrypted_fingerprint: { type: 'string', computed: true },
      encrypted_private_key: { type: 'string', computed: true },
      fingerprint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      pgp_key: { type: 'string', optional: true },
      private_key: { type: 'string', computed: true },
      public_key: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_lightsail_key_pair',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      support_code: { type: 'string', computed: true },
    },
    title: 'aws_lightsail_static_ip',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_name: { type: 'string', required: true },
      ip_address: { type: 'string', computed: true },
      static_ip_name: { type: 'string', required: true },
    },
    title: 'aws_lightsail_static_ip_attachment',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_port: { type: 'number', required: true },
      load_balancer_name: { type: 'string', required: true },
      policy_names: { type: 'object', optional: true },
    },
    title: 'aws_load_balancer_backend_server_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      load_balancer_name: { type: 'string', required: true },
      load_balancer_port: { type: 'number', required: true },
      policy_names: { type: 'object', optional: true },
    },
    title: 'aws_load_balancer_listener_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      load_balancer_name: { type: 'string', required: true },
      policy_name: { type: 'string', required: true },
      policy_type_name: { type: 'string', required: true },
      policy_attribute: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', optional: true },
          value: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_load_balancer_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      member_account_id: { type: 'string', required: true },
    },
    title: 'aws_macie_member_account_association',
    type: 'resource',
  },
  {
    properties: {
      bucket_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      member_account_id: { type: 'string', optional: true },
      prefix: { type: 'string', optional: true },
      classification_type: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          continuous: { type: 'string', optional: true },
          one_time: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_macie_s3_bucket_association',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      original_route_table_id: { type: 'string', computed: true },
      route_table_id: { type: 'string', required: true },
      vpc_id: { type: 'string', required: true },
    },
    title: 'aws_main_route_table_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      pricing_plan: { type: 'string', optional: true },
      status: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      reservation_plan_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          commitment: { type: 'string', required: true },
          renewal_type: { type: 'string', required: true },
          reserved_slots: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_media_convert_queue',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      channel_id: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      hls_ingest: {
        type: [
          'array',
          [
            'object',
            {
              ingest_endpoints: [
                'list',
                [
                  'object',
                  { password: 'string', url: 'string', username: 'string' },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_media_package_channel',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_media_store_container',
    type: 'resource',
  },
  {
    properties: {
      container_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_media_store_container_policy',
    type: 'resource',
  },
  {
    properties: {
      apply_immediately: { type: 'boolean', optional: true },
      arn: { type: 'string', computed: true },
      authentication_strategy: {
        type: 'string',
        optional: true,
        computed: true,
      },
      auto_minor_version_upgrade: { type: 'boolean', optional: true },
      broker_name: { type: 'string', required: true },
      deployment_mode: { type: 'string', optional: true },
      engine_type: { type: 'string', required: true },
      engine_version: { type: 'string', required: true },
      host_instance_type: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      instances: {
        type: [
          'array',
          [
            'object',
            {
              console_url: 'string',
              endpoints: ['list', 'string'],
              ip_address: 'string',
            },
          ],
        ],
        computed: true,
      },
      publicly_accessible: { type: 'boolean', optional: true },
      security_groups: { type: 'object', optional: true },
      storage_type: { type: 'string', optional: true, computed: true },
      subnet_ids: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          id: { type: 'string', optional: true, computed: true },
          revision: { type: 'number', optional: true, computed: true },
        },
      },
      encryption_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          kms_key_id: { type: 'string', optional: true, computed: true },
          use_aws_owned_key: { type: 'boolean', optional: true },
        },
      },
      ldap_server_metadata: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          hosts: { type: ['array', 'string'], optional: true },
          role_base: { type: 'string', optional: true },
          role_name: { type: 'string', optional: true },
          role_search_matching: { type: 'string', optional: true },
          role_search_subtree: { type: 'boolean', optional: true },
          service_account_password: {
            type: 'string',
            optional: true,
            sensitive: true,
          },
          service_account_username: { type: 'string', optional: true },
          user_base: { type: 'string', optional: true },
          user_role_name: { type: 'string', optional: true },
          user_search_matching: { type: 'string', optional: true },
          user_search_subtree: { type: 'boolean', optional: true },
        },
      },
      logs: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          audit: { type: 'boolean', optional: true },
          general: { type: 'boolean', optional: true },
        },
      },
      maintenance_window_start_time: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          day_of_week: { type: 'string', required: true },
          time_of_day: { type: 'string', required: true },
          time_zone: { type: 'string', required: true },
        },
      },
      user: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          console_access: { type: 'boolean', optional: true },
          groups: { type: 'object', optional: true },
          password: { type: 'string', required: true, sensitive: true },
          username: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_mq_broker',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      authentication_strategy: {
        type: 'string',
        optional: true,
        computed: true,
      },
      data: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      engine_type: { type: 'string', required: true },
      engine_version: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      latest_revision: { type: 'number', computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_mq_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bootstrap_brokers: { type: 'string', computed: true },
      bootstrap_brokers_sasl_scram: { type: 'string', computed: true },
      bootstrap_brokers_tls: { type: 'string', computed: true },
      cluster_name: { type: 'string', required: true },
      current_version: { type: 'string', computed: true },
      enhanced_monitoring: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kafka_version: { type: 'string', required: true },
      number_of_broker_nodes: { type: 'number', required: true },
      tags: { type: 'object', optional: true },
      zookeeper_connect_string: { type: 'string', computed: true },
      broker_node_group_info: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          az_distribution: { type: 'string', optional: true },
          client_subnets: { type: ['array', 'string'], required: true },
          ebs_volume_size: { type: 'number', required: true },
          instance_type: { type: 'string', required: true },
          security_groups: { type: ['array', 'string'], required: true },
        },
      },
      client_authentication: {
        nesting_mode: 'list',
        block: {
          block_types: {
            sasl: {
              nesting_mode: 'list',
              block: {
                attributes: { scram: { type: 'bool', optional: true } },
              },
              max_items: 1,
            },
            tls: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  certificate_authority_arns: {
                    type: ['set', 'string'],
                    optional: true,
                  },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      configuration_info: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          arn: { type: 'string', required: true },
          revision: { type: 'number', required: true },
        },
      },
      encryption_info: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          encryption_at_rest_kms_key_arn: {
            type: 'string',
            optional: true,
            computed: true,
          },
        },
      },
      logging_info: {
        nesting_mode: 'list',
        block: {
          block_types: {
            broker_logs: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  cloudwatch_logs: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        enabled: { type: 'bool', required: true },
                        log_group: { type: 'string', optional: true },
                      },
                    },
                    max_items: 1,
                  },
                  firehose: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        delivery_stream: { type: 'string', optional: true },
                        enabled: { type: 'bool', required: true },
                      },
                    },
                    max_items: 1,
                  },
                  s3: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        bucket: { type: 'string', optional: true },
                        enabled: { type: 'bool', required: true },
                        prefix: { type: 'string', optional: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      open_monitoring: {
        nesting_mode: 'list',
        block: {
          block_types: {
            prometheus: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  jmx_exporter: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        enabled_in_broker: { type: 'bool', required: true },
                      },
                    },
                    max_items: 1,
                  },
                  node_exporter: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        enabled_in_broker: { type: 'bool', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_msk_cluster',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kafka_versions: { type: 'object', required: true },
      latest_revision: { type: 'number', computed: true },
      name: { type: 'string', required: true },
      server_properties: { type: 'string', required: true },
    },
    title: 'aws_msk_configuration',
    type: 'resource',
  },
  {
    properties: {
      cluster_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      secret_arn_list: { type: 'object', required: true },
    },
    title: 'aws_msk_scram_secret_association',
    type: 'resource',
  },
  {
    properties: {
      airflow_configuration_options: {
        type: 'object',
        optional: true,
        sensitive: true,
      },
      airflow_version: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      created_at: { type: 'string', computed: true },
      dag_s3_path: { type: 'string', required: true },
      environment_class: { type: 'string', optional: true, computed: true },
      execution_role_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key: { type: 'string', optional: true },
      last_updated: {
        type: [
          'array',
          [
            'object',
            {
              created_at: 'string',
              error: [
                'list',
                ['object', { error_code: 'string', error_message: 'string' }],
              ],
              status: 'string',
            },
          ],
        ],
        computed: true,
      },
      max_workers: { type: 'number', optional: true, computed: true },
      min_workers: { type: 'number', optional: true, computed: true },
      name: { type: 'string', required: true },
      plugins_s3_object_version: {
        type: 'string',
        optional: true,
        computed: true,
      },
      plugins_s3_path: { type: 'string', optional: true },
      requirements_s3_object_version: {
        type: 'string',
        optional: true,
        computed: true,
      },
      requirements_s3_path: { type: 'string', optional: true },
      service_role_arn: { type: 'string', computed: true },
      source_bucket_arn: { type: 'string', required: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      webserver_access_mode: { type: 'string', optional: true, computed: true },
      webserver_url: { type: 'string', computed: true },
      weekly_maintenance_window_start: {
        type: 'string',
        optional: true,
        computed: true,
      },
      logging_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            dag_processing_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  cloud_watch_log_group_arn: { type: 'string', computed: true },
                  enabled: { type: 'bool', optional: true, computed: true },
                  log_level: { type: 'string', optional: true, computed: true },
                },
              },
              max_items: 1,
            },
            scheduler_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  cloud_watch_log_group_arn: { type: 'string', computed: true },
                  enabled: { type: 'bool', optional: true, computed: true },
                  log_level: { type: 'string', optional: true, computed: true },
                },
              },
              max_items: 1,
            },
            task_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  cloud_watch_log_group_arn: { type: 'string', computed: true },
                  enabled: { type: 'bool', optional: true, computed: true },
                  log_level: { type: 'string', optional: true, computed: true },
                },
              },
              max_items: 1,
            },
            webserver_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  cloud_watch_log_group_arn: { type: 'string', computed: true },
                  enabled: { type: 'bool', optional: true, computed: true },
                  log_level: { type: 'string', optional: true, computed: true },
                },
              },
              max_items: 1,
            },
            worker_logs: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  cloud_watch_log_group_arn: { type: 'string', computed: true },
                  enabled: { type: 'bool', optional: true, computed: true },
                  log_level: { type: 'string', optional: true, computed: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      network_configuration: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          security_group_ids: { type: 'object', required: true },
          subnet_ids: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_mwaa_environment',
    type: 'resource',
  },
  {
    properties: {
      allocation_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      network_interface_id: { type: 'string', computed: true },
      private_ip: { type: 'string', computed: true },
      public_ip: { type: 'string', computed: true },
      subnet_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_nat_gateway',
    type: 'resource',
  },
  {
    properties: {
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', optional: true, computed: true },
      backup_retention_period: { type: 'number', optional: true },
      cluster_identifier: { type: 'string', optional: true, computed: true },
      cluster_identifier_prefix: {
        type: 'string',
        optional: true,
        computed: true,
      },
      cluster_members: { type: 'object', computed: true },
      cluster_resource_id: { type: 'string', computed: true },
      deletion_protection: { type: 'boolean', optional: true },
      enable_cloudwatch_logs_exports: { type: 'object', optional: true },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      final_snapshot_identifier: { type: 'string', optional: true },
      hosted_zone_id: { type: 'string', computed: true },
      iam_database_authentication_enabled: { type: 'boolean', optional: true },
      iam_roles: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_arn: { type: 'string', optional: true, computed: true },
      neptune_cluster_parameter_group_name: { type: 'string', optional: true },
      neptune_subnet_group_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      port: { type: 'number', optional: true },
      preferred_backup_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      reader_endpoint: { type: 'string', computed: true },
      replication_source_identifier: { type: 'string', optional: true },
      skip_final_snapshot: { type: 'boolean', optional: true },
      snapshot_identifier: { type: 'string', optional: true },
      storage_encrypted: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_neptune_cluster',
    type: 'resource',
  },
  {
    properties: {
      address: { type: 'string', computed: true },
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      auto_minor_version_upgrade: { type: 'boolean', optional: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      cluster_identifier: { type: 'string', required: true },
      dbi_resource_id: { type: 'string', computed: true },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      identifier: { type: 'string', optional: true, computed: true },
      identifier_prefix: { type: 'string', optional: true, computed: true },
      instance_class: { type: 'string', required: true },
      kms_key_arn: { type: 'string', computed: true },
      neptune_parameter_group_name: { type: 'string', optional: true },
      neptune_subnet_group_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      port: { type: 'number', optional: true },
      preferred_backup_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      promotion_tier: { type: 'number', optional: true },
      publicly_accessible: { type: 'boolean', optional: true },
      storage_encrypted: { type: 'boolean', computed: true },
      tags: { type: 'object', optional: true },
      writer: { type: 'boolean', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_neptune_cluster_instance',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      parameter: {
        nesting_mode: 'set',
        properties: {
          apply_method: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_neptune_cluster_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      allocated_storage: { type: 'number', computed: true },
      availability_zones: { type: ['array', 'string'], computed: true },
      db_cluster_identifier: { type: 'string', required: true },
      db_cluster_snapshot_arn: { type: 'string', computed: true },
      db_cluster_snapshot_identifier: { type: 'string', required: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      license_model: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      snapshot_type: { type: 'string', computed: true },
      source_db_cluster_snapshot_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      storage_encrypted: { type: 'boolean', computed: true },
      vpc_id: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_neptune_cluster_snapshot',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      customer_aws_id: { type: 'string', computed: true },
      enabled: { type: 'boolean', optional: true },
      event_categories: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      sns_topic_arn: { type: 'string', required: true },
      source_ids: { type: 'object', optional: true },
      source_type: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_neptune_event_subscription',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      parameter: {
        nesting_mode: 'set',
        properties: {
          apply_method: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_neptune_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_neptune_subnet_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      egress: { type: 'object', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      ingress: { type: 'object', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      subnet_ids: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', required: true },
    },
    title: 'aws_network_acl',
    type: 'resource',
  },
  {
    properties: {
      cidr_block: { type: 'string', optional: true },
      egress: { type: 'boolean', optional: true },
      from_port: { type: 'number', optional: true },
      icmp_code: { type: 'string', optional: true },
      icmp_type: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_cidr_block: { type: 'string', optional: true },
      network_acl_id: { type: 'string', required: true },
      protocol: { type: 'string', required: true },
      rule_action: { type: 'string', required: true },
      rule_number: { type: 'number', required: true },
      to_port: { type: 'number', optional: true },
    },
    title: 'aws_network_acl_rule',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_address_count: { type: 'number', optional: true, computed: true },
      ipv6_addresses: { type: 'object', optional: true, computed: true },
      mac_address: { type: 'string', computed: true },
      outpost_arn: { type: 'string', computed: true },
      private_dns_name: { type: 'string', computed: true },
      private_ip: { type: 'string', optional: true, computed: true },
      private_ips: { type: 'object', optional: true, computed: true },
      private_ips_count: { type: 'number', optional: true, computed: true },
      security_groups: { type: 'object', optional: true, computed: true },
      source_dest_check: { type: 'boolean', optional: true },
      subnet_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      attachment: {
        nesting_mode: 'set',
        properties: {
          attachment_id: { type: 'string', computed: true },
          device_index: { type: 'number', required: true },
          instance: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_network_interface',
    type: 'resource',
  },
  {
    properties: {
      attachment_id: { type: 'string', computed: true },
      device_index: { type: 'number', required: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', required: true },
      network_interface_id: { type: 'string', required: true },
      status: { type: 'string', computed: true },
    },
    title: 'aws_network_interface_attachment',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      network_interface_id: { type: 'string', required: true },
      security_group_id: { type: 'string', required: true },
    },
    title: 'aws_network_interface_sg_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      delete_protection: { type: 'boolean', optional: true },
      description: { type: 'string', optional: true },
      firewall_policy_arn: { type: 'string', required: true },
      firewall_policy_change_protection: { type: 'boolean', optional: true },
      firewall_status: {
        type: [
          'array',
          [
            'object',
            {
              sync_states: [
                'set',
                [
                  'object',
                  {
                    attachment: [
                      'list',
                      [
                        'object',
                        { endpoint_id: 'string', subnet_id: 'string' },
                      ],
                    ],
                    availability_zone: 'string',
                  },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      subnet_change_protection: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      update_token: { type: 'string', computed: true },
      vpc_id: { type: 'string', required: true },
      subnet_mapping: {
        nesting_mode: 'set',
        min_items: 1,
        properties: { subnet_id: { type: 'string', required: true } },
      },
    },
    title: 'aws_networkfirewall_firewall',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      update_token: { type: 'string', computed: true },
      firewall_policy: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          stateless_default_actions: { type: 'object', required: true },
          stateless_fragment_default_actions: {
            type: 'object',
            required: true,
          },
        },
      },
    },
    title: 'aws_networkfirewall_firewall_policy',
    type: 'resource',
  },
  {
    properties: {
      firewall_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      logging_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            log_destination_config: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  log_destination: { type: ['map', 'string'], required: true },
                  log_destination_type: { type: 'string', required: true },
                  log_type: { type: 'string', required: true },
                },
              },
              min_items: 1,
              max_items: 2,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_networkfirewall_logging_configuration',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      resource_arn: { type: 'string', required: true },
    },
    title: 'aws_networkfirewall_resource_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      capacity: { type: 'number', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      rules: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', required: true },
      update_token: { type: 'string', computed: true },
      rule_group: {
        nesting_mode: 'list',
        block: {
          block_types: {
            rule_variables: {
              nesting_mode: 'list',
              block: {
                block_types: {
                  ip_sets: {
                    nesting_mode: 'set',
                    block: {
                      attributes: { key: { type: 'string', required: true } },
                      block_types: {
                        ip_set: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              definition: {
                                type: ['set', 'string'],
                                required: true,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                  },
                  port_sets: {
                    nesting_mode: 'set',
                    block: {
                      attributes: { key: { type: 'string', required: true } },
                      block_types: {
                        port_set: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              definition: {
                                type: ['set', 'string'],
                                required: true,
                              },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                  },
                },
              },
              max_items: 1,
            },
            rules_source: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  rules_string: { type: 'string', optional: true },
                },
                block_types: {
                  rules_source_list: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        generated_rules_type: {
                          type: 'string',
                          required: true,
                        },
                        target_types: {
                          type: ['set', 'string'],
                          required: true,
                        },
                        targets: { type: ['set', 'string'], required: true },
                      },
                    },
                    max_items: 1,
                  },
                  stateful_rule: {
                    nesting_mode: 'set',
                    block: {
                      attributes: {
                        action: { type: 'string', required: true },
                      },
                      block_types: {
                        header: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              destination: { type: 'string', required: true },
                              destination_port: {
                                type: 'string',
                                required: true,
                              },
                              direction: { type: 'string', required: true },
                              protocol: { type: 'string', required: true },
                              source: { type: 'string', required: true },
                              source_port: { type: 'string', required: true },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                        rule_option: {
                          nesting_mode: 'set',
                          block: {
                            attributes: {
                              keyword: { type: 'string', required: true },
                              settings: {
                                type: ['set', 'string'],
                                optional: true,
                              },
                            },
                          },
                          min_items: 1,
                        },
                      },
                    },
                  },
                  stateless_rules_and_custom_actions: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        custom_action: {
                          nesting_mode: 'set',
                          block: {
                            attributes: {
                              action_name: { type: 'string', required: true },
                            },
                            block_types: {
                              action_definition: {
                                nesting_mode: 'list',
                                block: {
                                  block_types: {
                                    publish_metric_action: {
                                      nesting_mode: 'list',
                                      block: {
                                        block_types: {
                                          dimension: {
                                            nesting_mode: 'set',
                                            block: {
                                              attributes: {
                                                value: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                            min_items: 1,
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                        },
                        stateless_rule: {
                          nesting_mode: 'set',
                          block: {
                            attributes: {
                              priority: { type: 'number', required: true },
                            },
                            block_types: {
                              rule_definition: {
                                nesting_mode: 'list',
                                block: {
                                  attributes: {
                                    actions: {
                                      type: ['set', 'string'],
                                      required: true,
                                    },
                                  },
                                  block_types: {
                                    match_attributes: {
                                      nesting_mode: 'list',
                                      block: {
                                        attributes: {
                                          protocols: {
                                            type: ['set', 'number'],
                                            optional: true,
                                          },
                                        },
                                        block_types: {
                                          destination: {
                                            nesting_mode: 'set',
                                            block: {
                                              attributes: {
                                                address_definition: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                          },
                                          destination_port: {
                                            nesting_mode: 'set',
                                            block: {
                                              attributes: {
                                                from_port: {
                                                  type: 'number',
                                                  required: true,
                                                },
                                                to_port: {
                                                  type: 'number',
                                                  optional: true,
                                                },
                                              },
                                            },
                                          },
                                          source: {
                                            nesting_mode: 'set',
                                            block: {
                                              attributes: {
                                                address_definition: {
                                                  type: 'string',
                                                  required: true,
                                                },
                                              },
                                            },
                                          },
                                          source_port: {
                                            nesting_mode: 'set',
                                            block: {
                                              attributes: {
                                                from_port: {
                                                  type: 'number',
                                                  required: true,
                                                },
                                                to_port: {
                                                  type: 'number',
                                                  optional: true,
                                                },
                                              },
                                            },
                                          },
                                          tcp_flag: {
                                            nesting_mode: 'set',
                                            block: {
                                              attributes: {
                                                flags: {
                                                  type: ['set', 'string'],
                                                  required: true,
                                                },
                                                masks: {
                                                  type: ['set', 'string'],
                                                  optional: true,
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                      min_items: 1,
                                      max_items: 1,
                                    },
                                  },
                                },
                                min_items: 1,
                                max_items: 1,
                              },
                            },
                          },
                          min_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_networkfirewall_rule_group',
    type: 'resource',
  },
  {
    properties: {
      auto_bundle_on_deploy: { type: 'string', optional: true },
      aws_flow_ruby_settings: { type: 'string', optional: true },
      data_source_arn: { type: 'string', optional: true },
      data_source_database_name: { type: 'string', optional: true },
      data_source_type: { type: 'string', optional: true },
      description: { type: 'string', optional: true },
      document_root: { type: 'string', optional: true },
      domains: { type: ['array', 'string'], optional: true },
      enable_ssl: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      rails_env: { type: 'string', optional: true },
      short_name: { type: 'string', optional: true, computed: true },
      stack_id: { type: 'string', required: true },
      type: { type: 'string', required: true },
      app_source: {
        nesting_mode: 'list',
        properties: {
          password: { type: 'string', optional: true, sensitive: true },
          revision: { type: 'string', optional: true },
          ssh_key: { type: 'string', optional: true, sensitive: true },
          type: { type: 'string', required: true },
          url: { type: 'string', optional: true },
          username: { type: 'string', optional: true },
        },
      },
      environment: {
        nesting_mode: 'set',
        properties: {
          key: { type: 'string', required: true },
          secure: { type: 'boolean', optional: true },
          value: { type: 'string', required: true },
        },
      },
      ssl_configuration: {
        nesting_mode: 'list',
        properties: {
          certificate: { type: 'string', required: true },
          chain: { type: 'string', optional: true },
          private_key: { type: 'string', required: true, sensitive: true },
        },
      },
    },
    title: 'aws_opsworks_application',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', required: true },
      short_name: { type: 'string', required: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_custom_layer',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      password: { type: 'string', required: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      url: { type: 'string', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      username: { type: 'string', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_ganglia_layer',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      healthcheck_method: { type: 'string', optional: true },
      healthcheck_url: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      stack_id: { type: 'string', required: true },
      stats_enabled: { type: 'boolean', optional: true },
      stats_password: { type: 'string', required: true },
      stats_url: { type: 'string', optional: true },
      stats_user: { type: 'string', optional: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_haproxy_layer',
    type: 'resource',
  },
  {
    properties: {
      agent_version: { type: 'string', optional: true },
      ami_id: { type: 'string', optional: true, computed: true },
      architecture: { type: 'string', optional: true },
      auto_scaling_type: { type: 'string', optional: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      created_at: { type: 'string', optional: true, computed: true },
      delete_ebs: { type: 'boolean', optional: true },
      delete_eip: { type: 'boolean', optional: true },
      ebs_optimized: { type: 'boolean', optional: true },
      ec2_instance_id: { type: 'string', computed: true },
      ecs_cluster_arn: { type: 'string', optional: true, computed: true },
      elastic_ip: { type: 'string', optional: true, computed: true },
      hostname: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      infrastructure_class: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_profile_arn: { type: 'string', optional: true, computed: true },
      instance_type: { type: 'string', optional: true },
      last_service_error_id: { type: 'string', optional: true, computed: true },
      layer_ids: { type: ['array', 'string'], required: true },
      os: { type: 'string', optional: true, computed: true },
      platform: { type: 'string', optional: true, computed: true },
      private_dns: { type: 'string', optional: true, computed: true },
      private_ip: { type: 'string', optional: true, computed: true },
      public_dns: { type: 'string', optional: true, computed: true },
      public_ip: { type: 'string', optional: true, computed: true },
      registered_by: { type: 'string', optional: true, computed: true },
      reported_agent_version: {
        type: 'string',
        optional: true,
        computed: true,
      },
      reported_os_family: { type: 'string', optional: true, computed: true },
      reported_os_name: { type: 'string', optional: true, computed: true },
      reported_os_version: { type: 'string', optional: true, computed: true },
      root_device_type: { type: 'string', optional: true, computed: true },
      root_device_volume_id: { type: 'string', optional: true, computed: true },
      security_group_ids: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      ssh_host_dsa_key_fingerprint: {
        type: 'string',
        optional: true,
        computed: true,
      },
      ssh_host_rsa_key_fingerprint: {
        type: 'string',
        optional: true,
        computed: true,
      },
      ssh_key_name: { type: 'string', optional: true, computed: true },
      stack_id: { type: 'string', required: true },
      state: { type: 'string', optional: true },
      status: { type: 'string', optional: true, computed: true },
      subnet_id: { type: 'string', optional: true, computed: true },
      tenancy: { type: 'string', optional: true, computed: true },
      virtualization_type: { type: 'string', optional: true, computed: true },
      ebs_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_name: { type: 'string', required: true },
          iops: { type: 'number', optional: true, computed: true },
          snapshot_id: { type: 'string', optional: true, computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      ephemeral_block_device: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', required: true },
          virtual_name: { type: 'string', required: true },
        },
      },
      root_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true, computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_instance',
    type: 'resource',
  },
  {
    properties: {
      app_server: { type: 'string', optional: true },
      app_server_version: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      jvm_options: { type: 'string', optional: true },
      jvm_type: { type: 'string', optional: true },
      jvm_version: { type: 'string', optional: true },
      name: { type: 'string', optional: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_java_app_layer',
    type: 'resource',
  },
  {
    properties: {
      allocated_memory: { type: 'number', optional: true },
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_memcached_layer',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      root_password: { type: 'string', optional: true },
      root_password_on_all_instances: { type: 'boolean', optional: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_mysql_layer',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      nodejs_version: { type: 'string', optional: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_nodejs_app_layer',
    type: 'resource',
  },
  {
    properties: {
      allow_ssh: { type: 'boolean', optional: true, computed: true },
      allow_sudo: { type: 'boolean', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      level: { type: 'string', optional: true, computed: true },
      stack_id: { type: 'string', optional: true, computed: true },
      user_arn: { type: 'string', required: true },
    },
    title: 'aws_opsworks_permission',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_php_app_layer',
    type: 'resource',
  },
  {
    properties: {
      app_server: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      bundler_version: { type: 'string', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      manage_bundler: { type: 'boolean', optional: true },
      name: { type: 'string', optional: true },
      passenger_version: { type: 'string', optional: true },
      ruby_version: { type: 'string', optional: true },
      rubygems_version: { type: 'string', optional: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_rails_app_layer',
    type: 'resource',
  },
  {
    properties: {
      db_password: { type: 'string', required: true, sensitive: true },
      db_user: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      rds_db_instance_arn: { type: 'string', required: true },
      stack_id: { type: 'string', required: true },
    },
    title: 'aws_opsworks_rds_db_instance',
    type: 'resource',
  },
  {
    properties: {
      agent_version: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      berkshelf_version: { type: 'string', optional: true },
      color: { type: 'string', optional: true },
      configuration_manager_name: { type: 'string', optional: true },
      configuration_manager_version: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      default_availability_zone: {
        type: 'string',
        optional: true,
        computed: true,
      },
      default_instance_profile_arn: { type: 'string', required: true },
      default_os: { type: 'string', optional: true },
      default_root_device_type: { type: 'string', optional: true },
      default_ssh_key_name: { type: 'string', optional: true },
      default_subnet_id: { type: 'string', optional: true, computed: true },
      hostname_theme: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      manage_berkshelf: { type: 'boolean', optional: true },
      name: { type: 'string', required: true },
      region: { type: 'string', required: true },
      service_role_arn: { type: 'string', required: true },
      stack_endpoint: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      use_custom_cookbooks: { type: 'boolean', optional: true },
      use_opsworks_security_groups: { type: 'boolean', optional: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      custom_cookbooks_source: {
        nesting_mode: 'list',
        properties: {
          password: { type: 'string', optional: true, sensitive: true },
          revision: { type: 'string', optional: true },
          ssh_key: { type: 'string', optional: true, sensitive: true },
          type: { type: 'string', required: true },
          url: { type: 'string', required: true },
          username: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_stack',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_assign_elastic_ips: { type: 'boolean', optional: true },
      auto_assign_public_ips: { type: 'boolean', optional: true },
      auto_healing: { type: 'boolean', optional: true },
      custom_configure_recipes: { type: ['array', 'string'], optional: true },
      custom_deploy_recipes: { type: ['array', 'string'], optional: true },
      custom_instance_profile_arn: { type: 'string', optional: true },
      custom_json: { type: 'string', optional: true },
      custom_security_group_ids: { type: 'object', optional: true },
      custom_setup_recipes: { type: ['array', 'string'], optional: true },
      custom_shutdown_recipes: { type: ['array', 'string'], optional: true },
      custom_undeploy_recipes: { type: ['array', 'string'], optional: true },
      drain_elb_on_shutdown: { type: 'boolean', optional: true },
      elastic_load_balancer: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      install_updates_on_boot: { type: 'boolean', optional: true },
      instance_shutdown_timeout: { type: 'number', optional: true },
      name: { type: 'string', optional: true },
      stack_id: { type: 'string', required: true },
      system_packages: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
      use_ebs_optimized_instances: { type: 'boolean', optional: true },
      ebs_volume: {
        nesting_mode: 'set',
        properties: {
          encrypted: { type: 'boolean', optional: true },
          iops: { type: 'number', optional: true },
          mount_point: { type: 'string', required: true },
          number_of_disks: { type: 'number', required: true },
          raid_level: { type: 'string', optional: true },
          size: { type: 'number', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_opsworks_static_web_layer',
    type: 'resource',
  },
  {
    properties: {
      allow_self_management: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ssh_public_key: { type: 'string', optional: true },
      ssh_username: { type: 'string', required: true },
      user_arn: { type: 'string', required: true },
    },
    title: 'aws_opsworks_user_profile',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      email: { type: 'string', required: true },
      iam_user_access_to_billing: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      joined_method: { type: 'string', computed: true },
      joined_timestamp: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      parent_id: { type: 'string', optional: true, computed: true },
      role_name: { type: 'string', optional: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_organizations_account',
    type: 'resource',
  },
  {
    properties: {
      accounts: {
        type: [
          'array',
          [
            'object',
            {
              arn: 'string',
              email: 'string',
              id: 'string',
              name: 'string',
              status: 'string',
            },
          ],
        ],
        computed: true,
      },
      arn: { type: 'string', computed: true },
      aws_service_access_principals: { type: 'object', optional: true },
      enabled_policy_types: { type: 'object', optional: true },
      feature_set: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      master_account_arn: { type: 'string', computed: true },
      master_account_email: { type: 'string', computed: true },
      master_account_id: { type: 'string', computed: true },
      non_master_accounts: {
        type: [
          'array',
          [
            'object',
            {
              arn: 'string',
              email: 'string',
              id: 'string',
              name: 'string',
              status: 'string',
            },
          ],
        ],
        computed: true,
      },
      roots: {
        type: [
          'array',
          [
            'object',
            {
              arn: 'string',
              id: 'string',
              name: 'string',
              policy_types: [
                'list',
                ['object', { status: 'string', type: 'string' }],
              ],
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_organizations_organization',
    type: 'resource',
  },
  {
    properties: {
      accounts: {
        type: [
          'array',
          [
            'object',
            { arn: 'string', email: 'string', id: 'string', name: 'string' },
          ],
        ],
        computed: true,
      },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      parent_id: { type: 'string', required: true },
    },
    title: 'aws_organizations_organizational_unit',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      content: { type: 'string', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', optional: true },
    },
    title: 'aws_organizations_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy_id: { type: 'string', required: true },
      target_id: { type: 'string', required: true },
    },
    title: 'aws_organizations_policy_attachment',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      client_id: { type: 'string', required: true, sensitive: true },
      client_secret: { type: 'string', required: true, sensitive: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_pinpoint_adm_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      bundle_id: { type: 'string', optional: true, sensitive: true },
      certificate: { type: 'string', optional: true, sensitive: true },
      default_authentication_method: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      private_key: { type: 'string', optional: true, sensitive: true },
      team_id: { type: 'string', optional: true, sensitive: true },
      token_key: { type: 'string', optional: true, sensitive: true },
      token_key_id: { type: 'string', optional: true, sensitive: true },
    },
    title: 'aws_pinpoint_apns_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      bundle_id: { type: 'string', optional: true, sensitive: true },
      certificate: { type: 'string', optional: true, sensitive: true },
      default_authentication_method: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      private_key: { type: 'string', optional: true, sensitive: true },
      team_id: { type: 'string', optional: true, sensitive: true },
      token_key: { type: 'string', optional: true, sensitive: true },
      token_key_id: { type: 'string', optional: true, sensitive: true },
    },
    title: 'aws_pinpoint_apns_sandbox_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      bundle_id: { type: 'string', optional: true, sensitive: true },
      certificate: { type: 'string', optional: true, sensitive: true },
      default_authentication_method: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      private_key: { type: 'string', optional: true, sensitive: true },
      team_id: { type: 'string', optional: true, sensitive: true },
      token_key: { type: 'string', optional: true, sensitive: true },
      token_key_id: { type: 'string', optional: true, sensitive: true },
    },
    title: 'aws_pinpoint_apns_voip_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      bundle_id: { type: 'string', optional: true, sensitive: true },
      certificate: { type: 'string', optional: true, sensitive: true },
      default_authentication_method: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      private_key: { type: 'string', optional: true, sensitive: true },
      team_id: { type: 'string', optional: true, sensitive: true },
      token_key: { type: 'string', optional: true, sensitive: true },
      token_key_id: { type: 'string', optional: true, sensitive: true },
    },
    title: 'aws_pinpoint_apns_voip_sandbox_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      campaign_hook: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          lambda_function_name: { type: 'string', optional: true },
          mode: { type: 'string', optional: true },
          web_url: { type: 'string', optional: true },
        },
      },
      limits: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          daily: { type: 'number', optional: true },
          maximum_duration: { type: 'number', optional: true },
          messages_per_second: { type: 'number', optional: true },
          total: { type: 'number', optional: true },
        },
      },
      quiet_time: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          end: { type: 'string', optional: true },
          start: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_pinpoint_app',
    type: 'resource',
  },
  {
    properties: {
      api_key: { type: 'string', required: true, sensitive: true },
      application_id: { type: 'string', required: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      secret_key: { type: 'string', required: true, sensitive: true },
    },
    title: 'aws_pinpoint_baidu_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      configuration_set: { type: 'string', optional: true },
      enabled: { type: 'boolean', optional: true },
      from_address: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      identity: { type: 'string', required: true },
      messages_per_second: { type: 'number', computed: true },
      role_arn: { type: 'string', required: true },
    },
    title: 'aws_pinpoint_email_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      destination_stream_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      role_arn: { type: 'string', required: true },
    },
    title: 'aws_pinpoint_event_stream',
    type: 'resource',
  },
  {
    properties: {
      api_key: { type: 'string', required: true, sensitive: true },
      application_id: { type: 'string', required: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_pinpoint_gcm_channel',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      promotional_messages_per_second: { type: 'number', computed: true },
      sender_id: { type: 'string', optional: true },
      short_code: { type: 'string', optional: true },
      transactional_messages_per_second: { type: 'number', computed: true },
    },
    title: 'aws_pinpoint_sms_channel',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      placement_group_id: { type: 'string', computed: true },
      strategy: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_placement_group',
    type: 'resource',
  },
  {
    properties: {
      alias: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      prometheus_endpoint: { type: 'string', computed: true },
    },
    title: 'aws_prometheus_workspace',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_ports: { type: 'object', required: true },
      load_balancer: { type: 'string', required: true },
    },
    title: 'aws_proxy_protocol_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      deletion_protection: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_qldb_ledger',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      aws_account_id: { type: 'string', optional: true, computed: true },
      description: { type: 'string', optional: true },
      group_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      namespace: { type: 'string', optional: true },
    },
    title: 'aws_quicksight_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      aws_account_id: { type: 'string', optional: true, computed: true },
      email: { type: 'string', required: true },
      iam_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      identity_type: { type: 'string', required: true },
      namespace: { type: 'string', optional: true },
      session_name: { type: 'string', optional: true },
      user_name: { type: 'string', optional: true },
      user_role: { type: 'string', required: true },
    },
    title: 'aws_quicksight_user',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      principal: { type: 'string', required: true },
      resource_share_arn: { type: 'string', required: true },
    },
    title: 'aws_ram_principal_association',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      resource_arn: { type: 'string', required: true },
      resource_share_arn: { type: 'string', required: true },
    },
    title: 'aws_ram_resource_association',
    type: 'resource',
  },
  {
    properties: {
      allow_external_principals: { type: 'boolean', optional: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ram_resource_share',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      invitation_arn: { type: 'string', computed: true },
      receiver_account_id: { type: 'string', computed: true },
      resources: { type: ['array', 'string'], computed: true },
      sender_account_id: { type: 'string', computed: true },
      share_arn: { type: 'string', required: true },
      share_id: { type: 'string', computed: true },
      share_name: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ram_resource_share_accepter',
    type: 'resource',
  },
  {
    properties: {
      allow_major_version_upgrade: { type: 'boolean', optional: true },
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', optional: true, computed: true },
      backtrack_window: { type: 'number', optional: true },
      backup_retention_period: { type: 'number', optional: true },
      cluster_identifier: { type: 'string', optional: true, computed: true },
      cluster_identifier_prefix: {
        type: 'string',
        optional: true,
        computed: true,
      },
      cluster_members: { type: 'object', optional: true, computed: true },
      cluster_resource_id: { type: 'string', computed: true },
      copy_tags_to_snapshot: { type: 'boolean', optional: true },
      database_name: { type: 'string', optional: true, computed: true },
      db_cluster_parameter_group_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      db_subnet_group_name: { type: 'string', optional: true, computed: true },
      deletion_protection: { type: 'boolean', optional: true },
      enable_http_endpoint: { type: 'boolean', optional: true },
      enabled_cloudwatch_logs_exports: { type: 'object', optional: true },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true },
      engine_mode: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      final_snapshot_identifier: { type: 'string', optional: true },
      global_cluster_identifier: { type: 'string', optional: true },
      hosted_zone_id: { type: 'string', computed: true },
      iam_database_authentication_enabled: { type: 'boolean', optional: true },
      iam_roles: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      master_password: { type: 'string', optional: true, sensitive: true },
      master_username: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true, computed: true },
      preferred_backup_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      reader_endpoint: { type: 'string', computed: true },
      replication_source_identifier: { type: 'string', optional: true },
      skip_final_snapshot: { type: 'boolean', optional: true },
      snapshot_identifier: { type: 'string', optional: true },
      source_region: { type: 'string', optional: true },
      storage_encrypted: { type: 'boolean', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      restore_to_point_in_time: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          restore_to_time: { type: 'string', optional: true },
          restore_type: { type: 'string', optional: true },
          source_cluster_identifier: { type: 'string', required: true },
          use_latest_restorable_time: { type: 'boolean', optional: true },
        },
      },
      s3_import: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_name: { type: 'string', required: true },
          bucket_prefix: { type: 'string', optional: true },
          ingestion_role: { type: 'string', required: true },
          source_engine: { type: 'string', required: true },
          source_engine_version: { type: 'string', required: true },
        },
      },
      scaling_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          auto_pause: { type: 'boolean', optional: true },
          max_capacity: { type: 'number', optional: true },
          min_capacity: { type: 'number', optional: true },
          seconds_until_auto_pause: { type: 'number', optional: true },
          timeout_action: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_rds_cluster',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cluster_endpoint_identifier: { type: 'string', required: true },
      cluster_identifier: { type: 'string', required: true },
      custom_endpoint_type: { type: 'string', required: true },
      endpoint: { type: 'string', computed: true },
      excluded_members: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      static_members: { type: 'object', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_rds_cluster_endpoint',
    type: 'resource',
  },
  {
    properties: {
      apply_immediately: { type: 'boolean', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      auto_minor_version_upgrade: { type: 'boolean', optional: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      ca_cert_identifier: { type: 'string', optional: true, computed: true },
      cluster_identifier: { type: 'string', required: true },
      copy_tags_to_snapshot: { type: 'boolean', optional: true },
      db_parameter_group_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      db_subnet_group_name: { type: 'string', optional: true, computed: true },
      dbi_resource_id: { type: 'string', computed: true },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      identifier: { type: 'string', optional: true, computed: true },
      identifier_prefix: { type: 'string', optional: true, computed: true },
      instance_class: { type: 'string', required: true },
      kms_key_id: { type: 'string', computed: true },
      monitoring_interval: { type: 'number', optional: true },
      monitoring_role_arn: { type: 'string', optional: true, computed: true },
      performance_insights_enabled: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      performance_insights_kms_key_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      port: { type: 'number', computed: true },
      preferred_backup_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      promotion_tier: { type: 'number', optional: true },
      publicly_accessible: { type: 'boolean', optional: true },
      storage_encrypted: { type: 'boolean', computed: true },
      tags: { type: 'object', optional: true },
      writer: { type: 'boolean', computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_rds_cluster_instance',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      parameter: {
        nesting_mode: 'set',
        properties: {
          apply_method: { type: 'string', optional: true },
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_rds_cluster_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      database_name: { type: 'string', optional: true },
      deletion_protection: { type: 'boolean', optional: true },
      engine: { type: 'string', optional: true, computed: true },
      engine_version: { type: 'string', optional: true, computed: true },
      force_destroy: { type: 'boolean', optional: true },
      global_cluster_identifier: { type: 'string', required: true },
      global_cluster_members: { type: 'object', computed: true },
      global_cluster_resource_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      source_db_cluster_identifier: {
        type: 'string',
        optional: true,
        computed: true,
      },
      storage_encrypted: { type: 'boolean', optional: true, computed: true },
    },
    title: 'aws_rds_global_cluster',
    type: 'resource',
  },
  {
    properties: {
      allow_version_upgrade: { type: 'boolean', optional: true },
      arn: { type: 'string', computed: true },
      automated_snapshot_retention_period: { type: 'number', optional: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      cluster_identifier: { type: 'string', required: true },
      cluster_parameter_group_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      cluster_public_key: { type: 'string', optional: true, computed: true },
      cluster_revision_number: {
        type: 'string',
        optional: true,
        computed: true,
      },
      cluster_security_groups: {
        type: 'object',
        optional: true,
        computed: true,
      },
      cluster_subnet_group_name: {
        type: 'string',
        optional: true,
        computed: true,
      },
      cluster_type: { type: 'string', optional: true, computed: true },
      cluster_version: { type: 'string', optional: true },
      database_name: { type: 'string', optional: true, computed: true },
      dns_name: { type: 'string', computed: true },
      elastic_ip: { type: 'string', optional: true },
      encrypted: { type: 'boolean', optional: true },
      endpoint: { type: 'string', optional: true, computed: true },
      enhanced_vpc_routing: { type: 'boolean', optional: true, computed: true },
      final_snapshot_identifier: { type: 'string', optional: true },
      iam_roles: { type: 'object', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      master_password: { type: 'string', optional: true, sensitive: true },
      master_username: { type: 'string', optional: true },
      node_type: { type: 'string', required: true },
      number_of_nodes: { type: 'number', optional: true },
      owner_account: { type: 'string', optional: true },
      port: { type: 'number', optional: true },
      preferred_maintenance_window: {
        type: 'string',
        optional: true,
        computed: true,
      },
      publicly_accessible: { type: 'boolean', optional: true },
      skip_final_snapshot: { type: 'boolean', optional: true },
      snapshot_cluster_identifier: { type: 'string', optional: true },
      snapshot_identifier: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      logging: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          bucket_name: { type: 'string', optional: true, computed: true },
          enable: { type: 'boolean', required: true },
          s3_key_prefix: { type: 'string', optional: true, computed: true },
        },
      },
      snapshot_copy: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          destination_region: { type: 'string', required: true },
          grant_name: { type: 'string', optional: true },
          retention_period: { type: 'number', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_redshift_cluster',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      customer_aws_id: { type: 'string', computed: true },
      enabled: { type: 'boolean', optional: true },
      event_categories: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      severity: { type: 'string', optional: true },
      sns_topic_arn: { type: 'string', required: true },
      source_ids: { type: 'object', optional: true },
      source_type: { type: 'string', optional: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_redshift_event_subscription',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      family: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      parameter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_redshift_parameter_group',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      ingress: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          cidr: { type: 'string', optional: true },
          security_group_name: {
            type: 'string',
            optional: true,
            computed: true,
          },
          security_group_owner_id: {
            type: 'string',
            optional: true,
            computed: true,
          },
        },
      },
    },
    title: 'aws_redshift_security_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      snapshot_copy_grant_name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_redshift_snapshot_copy_grant',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      definitions: { type: 'object', required: true },
      description: { type: 'string', optional: true },
      force_destroy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      identifier: { type: 'string', optional: true, computed: true },
      identifier_prefix: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_redshift_snapshot_schedule',
    type: 'resource',
  },
  {
    properties: {
      cluster_identifier: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      schedule_identifier: { type: 'string', required: true },
    },
    title: 'aws_redshift_snapshot_schedule_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_redshift_subnet_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      resource_query: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          query: { type: 'string', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_resourcegroups_group',
    type: 'resource',
  },
  {
    properties: {
      carrier_gateway_id: { type: 'string', optional: true },
      destination_cidr_block: { type: 'string', optional: true },
      destination_ipv6_cidr_block: { type: 'string', optional: true },
      destination_prefix_list_id: { type: 'string', optional: true },
      egress_only_gateway_id: { type: 'string', optional: true },
      gateway_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', optional: true, computed: true },
      instance_owner_id: { type: 'string', computed: true },
      local_gateway_id: { type: 'string', optional: true },
      nat_gateway_id: { type: 'string', optional: true },
      network_interface_id: { type: 'string', optional: true, computed: true },
      origin: { type: 'string', computed: true },
      route_table_id: { type: 'string', required: true },
      state: { type: 'string', computed: true },
      transit_gateway_id: { type: 'string', optional: true },
      vpc_endpoint_id: { type: 'string', optional: true },
      vpc_peering_connection_id: { type: 'string', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_route',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name_servers: { type: ['array', 'string'], computed: true },
      reference_name: { type: 'string', optional: true },
    },
    title: 'aws_route53_delegation_set',
    type: 'resource',
  },
  {
    properties: {
      child_health_threshold: { type: 'number', optional: true },
      child_healthchecks: { type: 'object', optional: true },
      cloudwatch_alarm_name: { type: 'string', optional: true },
      cloudwatch_alarm_region: { type: 'string', optional: true },
      disabled: { type: 'boolean', optional: true },
      enable_sni: { type: 'boolean', optional: true, computed: true },
      failure_threshold: { type: 'number', optional: true },
      fqdn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      insufficient_data_health_status: { type: 'string', optional: true },
      invert_healthcheck: { type: 'boolean', optional: true },
      ip_address: { type: 'string', optional: true },
      measure_latency: { type: 'boolean', optional: true },
      port: { type: 'number', optional: true },
      reference_name: { type: 'string', optional: true },
      regions: { type: 'object', optional: true },
      request_interval: { type: 'number', optional: true },
      resource_path: { type: 'string', optional: true },
      search_string: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', required: true },
    },
    title: 'aws_route53_health_check',
    type: 'resource',
  },
  {
    properties: {
      hosted_zone_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      signing_status: { type: 'string', optional: true },
    },
    title: 'aws_route53_hosted_zone_dnssec',
    type: 'resource',
  },
  {
    properties: {
      digest_algorithm_mnemonic: { type: 'string', computed: true },
      digest_algorithm_type: { type: 'number', computed: true },
      digest_value: { type: 'string', computed: true },
      dnskey_record: { type: 'string', computed: true },
      ds_record: { type: 'string', computed: true },
      flag: { type: 'number', computed: true },
      hosted_zone_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      key_management_service_arn: { type: 'string', required: true },
      key_tag: { type: 'number', computed: true },
      name: { type: 'string', required: true },
      public_key: { type: 'string', computed: true },
      signing_algorithm_mnemonic: { type: 'string', computed: true },
      signing_algorithm_type: { type: 'number', computed: true },
      status: { type: 'string', optional: true },
    },
    title: 'aws_route53_key_signing_key',
    type: 'resource',
  },
  {
    properties: {
      cloudwatch_log_group_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      zone_id: { type: 'string', required: true },
    },
    title: 'aws_route53_query_log',
    type: 'resource',
  },
  {
    properties: {
      allow_overwrite: { type: 'boolean', optional: true, computed: true },
      fqdn: { type: 'string', computed: true },
      health_check_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      multivalue_answer_routing_policy: { type: 'boolean', optional: true },
      name: { type: 'string', required: true },
      records: { type: 'object', optional: true },
      set_identifier: { type: 'string', optional: true },
      ttl: { type: 'number', optional: true },
      type: { type: 'string', required: true },
      zone_id: { type: 'string', required: true },
      alias: {
        nesting_mode: 'set',
        properties: {
          evaluate_target_health: { type: 'boolean', required: true },
          name: { type: 'string', required: true },
          zone_id: { type: 'string', required: true },
        },
      },
      failover_routing_policy: {
        nesting_mode: 'list',
        properties: { type: { type: 'string', required: true } },
      },
      geolocation_routing_policy: {
        nesting_mode: 'list',
        properties: {
          continent: { type: 'string', optional: true },
          country: { type: 'string', optional: true },
          subdivision: { type: 'string', optional: true },
        },
      },
      latency_routing_policy: {
        nesting_mode: 'list',
        properties: { region: { type: 'string', required: true } },
      },
      weighted_routing_policy: {
        nesting_mode: 'list',
        properties: { weight: { type: 'number', required: true } },
      },
    },
    title: 'aws_route53_record',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      resource_id: { type: 'string', required: true },
      validation_status: { type: 'string', computed: true },
    },
    title: 'aws_route53_resolver_dnssec_config',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      direction: { type: 'string', required: true },
      host_vpc_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      security_group_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      ip_address: {
        nesting_mode: 'set',
        min_items: 2,
        max_items: 10,
        properties: {
          ip: { type: 'string', optional: true, computed: true },
          ip_id: { type: 'string', computed: true },
          subnet_id: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_route53_resolver_endpoint',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domains: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_route53_resolver_firewall_domain_list',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      share_status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_route53_resolver_firewall_rule_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      destination_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owner_id: { type: 'string', computed: true },
      share_status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_route53_resolver_query_log_config',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      resolver_query_log_config_id: { type: 'string', required: true },
      resource_id: { type: 'string', required: true },
    },
    title: 'aws_route53_resolver_query_log_config_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      owner_id: { type: 'string', computed: true },
      resolver_endpoint_id: { type: 'string', optional: true },
      rule_type: { type: 'string', required: true },
      share_status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      target_ip: {
        nesting_mode: 'set',
        properties: {
          ip: { type: 'string', required: true },
          port: { type: 'number', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_route53_resolver_rule',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      resolver_rule_id: { type: 'string', required: true },
      vpc_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_route53_resolver_rule_association',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      vpc_id: { type: 'string', required: true },
      vpc_region: { type: 'string', optional: true, computed: true },
      zone_id: { type: 'string', required: true },
    },
    title: 'aws_route53_vpc_association_authorization',
    type: 'resource',
  },
  {
    properties: {
      comment: { type: 'string', optional: true },
      delegation_set_id: { type: 'string', optional: true },
      force_destroy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      name_servers: { type: ['array', 'string'], computed: true },
      tags: { type: 'object', optional: true },
      zone_id: { type: 'string', computed: true },
      vpc: {
        nesting_mode: 'set',
        properties: {
          vpc_id: { type: 'string', required: true },
          vpc_region: { type: 'string', optional: true, computed: true },
        },
      },
    },
    title: 'aws_route53_zone',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      owning_account: { type: 'string', computed: true },
      vpc_id: { type: 'string', required: true },
      vpc_region: { type: 'string', optional: true, computed: true },
      zone_id: { type: 'string', required: true },
    },
    title: 'aws_route53_zone_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      propagating_vgws: { type: 'object', optional: true, computed: true },
      route: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', required: true },
    },
    title: 'aws_route_table',
    type: 'resource',
  },
  {
    properties: {
      gateway_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      route_table_id: { type: 'string', required: true },
      subnet_id: { type: 'string', optional: true },
    },
    title: 'aws_route_table_association',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      bucket: { type: 'string', required: true },
      domain_name: { type: 'string', computed: true },
      has_public_access_policy: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      network_origin: { type: 'string', computed: true },
      policy: { type: 'string', optional: true },
      public_access_block_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          block_public_acls: { type: 'boolean', optional: true },
          block_public_policy: { type: 'boolean', optional: true },
          ignore_public_acls: { type: 'boolean', optional: true },
          restrict_public_buckets: { type: 'boolean', optional: true },
        },
      },
      vpc_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { vpc_id: { type: 'string', required: true } },
      },
    },
    title: 'aws_s3_access_point',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', optional: true, computed: true },
      block_public_acls: { type: 'boolean', optional: true },
      block_public_policy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ignore_public_acls: { type: 'boolean', optional: true },
      restrict_public_buckets: { type: 'boolean', optional: true },
    },
    title: 'aws_s3_account_public_access_block',
    type: 'resource',
  },
  {
    properties: {
      acceleration_status: { type: 'string', optional: true, computed: true },
      acl: { type: 'string', optional: true },
      arn: { type: 'string', optional: true, computed: true },
      bucket: { type: 'string', optional: true, computed: true },
      bucket_domain_name: { type: 'string', computed: true },
      bucket_prefix: { type: 'string', optional: true },
      bucket_regional_domain_name: { type: 'string', computed: true },
      force_destroy: { type: 'boolean', optional: true },
      hosted_zone_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', optional: true },
      region: { type: 'string', computed: true },
      request_payer: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      website_domain: { type: 'string', optional: true, computed: true },
      website_endpoint: { type: 'string', optional: true, computed: true },
      cors_rule: {
        nesting_mode: 'list',
        properties: {
          allowed_headers: { type: ['array', 'string'], optional: true },
          allowed_methods: { type: ['array', 'string'], required: true },
          allowed_origins: { type: ['array', 'string'], required: true },
          expose_headers: { type: ['array', 'string'], optional: true },
          max_age_seconds: { type: 'number', optional: true },
        },
      },
      grant: {
        nesting_mode: 'set',
        properties: {
          id: { type: 'string', optional: true },
          permissions: { type: 'object', required: true },
          type: { type: 'string', required: true },
          uri: { type: 'string', optional: true },
        },
      },
      lifecycle_rule: {
        nesting_mode: 'list',
        properties: {
          abort_incomplete_multipart_upload_days: {
            type: 'number',
            optional: true,
          },
          enabled: { type: 'boolean', required: true },
          id: { type: 'string', optional: true, computed: true },
          prefix: { type: 'string', optional: true },
          tags: { type: 'object', optional: true },
        },
      },
      logging: {
        nesting_mode: 'set',
        properties: {
          target_bucket: { type: 'string', required: true },
          target_prefix: { type: 'string', optional: true },
        },
      },
      object_lock_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { object_lock_enabled: { type: 'string', required: true } },
      },
      replication_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { role: { type: 'string', required: true } },
      },
      server_side_encryption_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            rule: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  bucket_key_enabled: { type: 'bool', optional: true },
                },
                block_types: {
                  apply_server_side_encryption_by_default: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        kms_master_key_id: { type: 'string', optional: true },
                        sse_algorithm: { type: 'string', required: true },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      versioning: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true },
          mfa_delete: { type: 'boolean', optional: true },
        },
      },
      website: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          error_document: { type: 'string', optional: true },
          index_document: { type: 'string', optional: true },
          redirect_all_requests_to: { type: 'string', optional: true },
          routing_rules: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_s3_bucket',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      filter: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          prefix: { type: 'string', optional: true },
          tags: { type: 'object', optional: true },
        },
      },
      storage_class_analysis: {
        nesting_mode: 'list',
        block: {
          block_types: {
            data_export: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  output_schema_version: { type: 'string', optional: true },
                },
                block_types: {
                  destination: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        s3_bucket_destination: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              bucket_account_id: {
                                type: 'string',
                                optional: true,
                              },
                              bucket_arn: { type: 'string', required: true },
                              format: { type: 'string', optional: true },
                              prefix: { type: 'string', optional: true },
                            },
                          },
                          min_items: 1,
                          max_items: 1,
                        },
                      },
                    },
                    min_items: 1,
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_s3_bucket_analytics_configuration',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      included_object_versions: { type: 'string', required: true },
      name: { type: 'string', required: true },
      optional_fields: { type: 'object', optional: true },
      destination: {
        nesting_mode: 'list',
        block: {
          block_types: {
            bucket: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  account_id: { type: 'string', optional: true },
                  bucket_arn: { type: 'string', required: true },
                  format: { type: 'string', required: true },
                  prefix: { type: 'string', optional: true },
                },
                block_types: {
                  encryption: {
                    nesting_mode: 'list',
                    block: {
                      block_types: {
                        sse_kms: {
                          nesting_mode: 'list',
                          block: {
                            attributes: {
                              key_id: { type: 'string', required: true },
                            },
                          },
                          max_items: 1,
                        },
                        sse_s3: {
                          nesting_mode: 'list',
                          block: {},
                          max_items: 1,
                        },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
      filter: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { prefix: { type: 'string', optional: true } },
      },
      schedule: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { frequency: { type: 'string', required: true } },
      },
    },
    title: 'aws_s3_bucket_inventory',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      filter: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          prefix: { type: 'string', optional: true },
          tags: { type: 'object', optional: true },
        },
      },
    },
    title: 'aws_s3_bucket_metric',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      lambda_function: {
        nesting_mode: 'list',
        properties: {
          events: { type: 'object', required: true },
          filter_prefix: { type: 'string', optional: true },
          filter_suffix: { type: 'string', optional: true },
          id: { type: 'string', optional: true, computed: true },
          lambda_function_arn: { type: 'string', optional: true },
        },
      },
      queue: {
        nesting_mode: 'list',
        properties: {
          events: { type: 'object', required: true },
          filter_prefix: { type: 'string', optional: true },
          filter_suffix: { type: 'string', optional: true },
          id: { type: 'string', optional: true, computed: true },
          queue_arn: { type: 'string', required: true },
        },
      },
      topic: {
        nesting_mode: 'list',
        properties: {
          events: { type: 'object', required: true },
          filter_prefix: { type: 'string', optional: true },
          filter_suffix: { type: 'string', optional: true },
          id: { type: 'string', optional: true, computed: true },
          topic_arn: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_s3_bucket_notification',
    type: 'resource',
  },
  {
    properties: {
      acl: { type: 'string', optional: true },
      bucket: { type: 'string', required: true },
      bucket_key_enabled: { type: 'boolean', optional: true, computed: true },
      cache_control: { type: 'string', optional: true },
      content: { type: 'string', optional: true },
      content_base64: { type: 'string', optional: true },
      content_disposition: { type: 'string', optional: true },
      content_encoding: { type: 'string', optional: true },
      content_language: { type: 'string', optional: true },
      content_type: { type: 'string', optional: true, computed: true },
      etag: { type: 'string', optional: true, computed: true },
      force_destroy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      key: { type: 'string', required: true },
      kms_key_id: { type: 'string', optional: true, computed: true },
      metadata: { type: 'object', optional: true },
      object_lock_legal_hold_status: { type: 'string', optional: true },
      object_lock_mode: { type: 'string', optional: true },
      object_lock_retain_until_date: { type: 'string', optional: true },
      server_side_encryption: {
        type: 'string',
        optional: true,
        computed: true,
      },
      source: { type: 'string', optional: true },
      storage_class: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      version_id: { type: 'string', computed: true },
      website_redirect: { type: 'string', optional: true },
    },
    title: 'aws_s3_bucket_object',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      rule: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { object_ownership: { type: 'string', required: true } },
      },
    },
    title: 'aws_s3_bucket_ownership_controls',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_s3_bucket_policy',
    type: 'resource',
  },
  {
    properties: {
      block_public_acls: { type: 'boolean', optional: true },
      block_public_policy: { type: 'boolean', optional: true },
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      ignore_public_acls: { type: 'boolean', optional: true },
      restrict_public_buckets: { type: 'boolean', optional: true },
    },
    title: 'aws_s3_bucket_public_access_block',
    type: 'resource',
  },
  {
    properties: {
      acl: { type: 'string', optional: true },
      bucket: { type: 'string', required: true },
      bucket_key_enabled: { type: 'boolean', optional: true, computed: true },
      cache_control: { type: 'string', optional: true, computed: true },
      content_disposition: { type: 'string', optional: true, computed: true },
      content_encoding: { type: 'string', optional: true, computed: true },
      content_language: { type: 'string', optional: true, computed: true },
      content_type: { type: 'string', optional: true, computed: true },
      copy_if_match: { type: 'string', optional: true },
      copy_if_modified_since: { type: 'string', optional: true },
      copy_if_none_match: { type: 'string', optional: true },
      copy_if_unmodified_since: { type: 'string', optional: true },
      customer_algorithm: { type: 'string', optional: true, computed: true },
      customer_key: { type: 'string', optional: true, sensitive: true },
      customer_key_md5: { type: 'string', optional: true, computed: true },
      etag: { type: 'string', computed: true },
      expected_bucket_owner: { type: 'string', optional: true },
      expected_source_bucket_owner: { type: 'string', optional: true },
      expiration: { type: 'string', computed: true },
      expires: { type: 'string', optional: true },
      force_destroy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      key: { type: 'string', required: true },
      kms_encryption_context: {
        type: 'string',
        optional: true,
        computed: true,
        sensitive: true,
      },
      kms_key_id: {
        type: 'string',
        optional: true,
        computed: true,
        sensitive: true,
      },
      last_modified: { type: 'string', computed: true },
      metadata: { type: 'object', optional: true, computed: true },
      metadata_directive: { type: 'string', optional: true },
      object_lock_legal_hold_status: {
        type: 'string',
        optional: true,
        computed: true,
      },
      object_lock_mode: { type: 'string', optional: true, computed: true },
      object_lock_retain_until_date: {
        type: 'string',
        optional: true,
        computed: true,
      },
      request_charged: { type: 'boolean', computed: true },
      request_payer: { type: 'string', optional: true },
      server_side_encryption: {
        type: 'string',
        optional: true,
        computed: true,
      },
      source: { type: 'string', required: true },
      source_customer_algorithm: { type: 'string', optional: true },
      source_customer_key: { type: 'string', optional: true, sensitive: true },
      source_customer_key_md5: { type: 'string', optional: true },
      source_version_id: { type: 'string', computed: true },
      storage_class: { type: 'string', optional: true, computed: true },
      tagging_directive: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      version_id: { type: 'string', computed: true },
      website_redirect: { type: 'string', optional: true, computed: true },
      grant: {
        nesting_mode: 'set',
        properties: {
          email: { type: 'string', optional: true },
          id: { type: 'string', optional: true },
          permissions: { type: 'object', required: true },
          type: { type: 'string', required: true },
          uri: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_s3_object_copy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bucket: { type: 'string', required: true },
      creation_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      outpost_id: { type: 'string', required: true },
      public_access_block_enabled: { type: 'boolean', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_s3control_bucket',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      rule: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          id: { type: 'string', required: true },
          status: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_s3control_bucket_lifecycle_configuration',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_s3control_bucket_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cidr_block: { type: 'string', computed: true },
      creation_time: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      network_interfaces: { type: 'object', computed: true },
      outpost_id: { type: 'string', required: true },
      security_group_id: { type: 'string', required: true },
      subnet_id: { type: 'string', required: true },
    },
    title: 'aws_s3outposts_endpoint',
    type: 'resource',
  },
  {
    properties: {
      app_name: { type: 'string', required: true },
      app_type: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      domain_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      user_profile_name: { type: 'string', required: true },
      resource_spec: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          instance_type: { type: 'string', optional: true },
          sagemaker_image_arn: {
            type: 'string',
            optional: true,
            computed: true,
          },
        },
      },
    },
    title: 'aws_sagemaker_app',
    type: 'resource',
  },
  {
    properties: {
      app_image_config_name: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kernel_gateway_image_config: {
        nesting_mode: 'list',
        block: {
          block_types: {
            file_system_config: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  default_gid: { type: 'number', optional: true },
                  default_uid: { type: 'number', optional: true },
                  mount_path: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
            kernel_spec: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  display_name: { type: 'string', optional: true },
                  name: { type: 'string', required: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_sagemaker_app_image_config',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      code_repository_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      git_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          branch: { type: 'string', optional: true },
          repository_url: { type: 'string', required: true },
          secret_arn: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_sagemaker_code_repository',
    type: 'resource',
  },
  {
    properties: {
      app_network_access_type: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      auth_mode: { type: 'string', required: true },
      domain_name: { type: 'string', required: true },
      home_efs_file_system_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true },
      single_sign_on_managed_application_instance_id: {
        type: 'string',
        computed: true,
      },
      subnet_ids: { type: 'object', required: true },
      tags: { type: 'object', optional: true },
      url: { type: 'string', computed: true },
      vpc_id: { type: 'string', required: true },
      default_user_settings: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          execution_role: { type: 'string', required: true },
          security_groups: { type: 'object', optional: true },
        },
      },
    },
    title: 'aws_sagemaker_domain',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      endpoint_config_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_sagemaker_endpoint',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_arn: { type: 'string', optional: true },
      name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      data_capture_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          destination_s3_uri: { type: 'string', required: true },
          enable_capture: { type: 'boolean', optional: true },
          initial_sampling_percentage: { type: 'number', required: true },
          kms_key_id: { type: 'string', optional: true },
        },
      },
      production_variants: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          accelerator_type: { type: 'string', optional: true },
          initial_instance_count: { type: 'number', required: true },
          initial_variant_weight: { type: 'number', optional: true },
          instance_type: { type: 'string', required: true },
          model_name: { type: 'string', required: true },
          variant_name: { type: 'string', optional: true, computed: true },
        },
      },
    },
    title: 'aws_sagemaker_endpoint_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      event_time_feature_name: { type: 'string', required: true },
      feature_group_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      record_identifier_feature_name: { type: 'string', required: true },
      role_arn: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      feature_definition: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 2500,
        properties: {
          feature_name: { type: 'string', optional: true },
          feature_type: { type: 'string', optional: true },
        },
      },
      offline_store_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          disable_glue_table_creation: { type: 'boolean', optional: true },
        },
      },
      online_store_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enable_online_store: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_sagemaker_feature_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      display_name: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      image_name: { type: 'string', required: true },
      role_arn: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_sagemaker_image',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      base_image: { type: 'string', required: true },
      container_image: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_arn: { type: 'string', computed: true },
      image_name: { type: 'string', required: true },
      version: { type: 'number', computed: true },
    },
    title: 'aws_sagemaker_image_version',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      enable_network_isolation: { type: 'boolean', optional: true },
      execution_role_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      container: {
        nesting_mode: 'list',
        properties: {
          container_hostname: { type: 'string', optional: true },
          environment: { type: 'object', optional: true },
          image: { type: 'string', required: true },
          mode: { type: 'string', optional: true },
          model_data_url: { type: 'string', optional: true },
        },
      },
      primary_container: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          container_hostname: { type: 'string', optional: true },
          environment: { type: 'object', optional: true },
          image: { type: 'string', required: true },
          mode: { type: 'string', optional: true },
          model_data_url: { type: 'string', optional: true },
        },
      },
      vpc_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          security_group_ids: { type: 'object', required: true },
          subnets: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_sagemaker_model',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      model_package_group_description: { type: 'string', optional: true },
      model_package_group_name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_sagemaker_model_package_group',
    type: 'resource',
  },
  {
    properties: {
      additional_code_repositories: { type: 'object', optional: true },
      arn: { type: 'string', computed: true },
      default_code_repository: { type: 'string', optional: true },
      direct_internet_access: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_type: { type: 'string', required: true },
      kms_key_id: { type: 'string', optional: true },
      lifecycle_config_name: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      network_interface_id: { type: 'string', computed: true },
      role_arn: { type: 'string', required: true },
      root_access: { type: 'string', optional: true },
      security_groups: { type: 'object', optional: true, computed: true },
      subnet_id: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      url: { type: 'string', computed: true },
      volume_size: { type: 'number', optional: true },
    },
    title: 'aws_sagemaker_notebook_instance',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      on_create: { type: 'string', optional: true },
      on_start: { type: 'string', optional: true },
    },
    title: 'aws_sagemaker_notebook_instance_lifecycle_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain_id: { type: 'string', required: true },
      home_efs_file_system_uid: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      single_sign_on_user_identifier: { type: 'string', optional: true },
      single_sign_on_user_value: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      user_profile_name: { type: 'string', required: true },
      user_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          execution_role: { type: 'string', required: true },
          security_groups: { type: 'object', optional: true },
        },
      },
    },
    title: 'aws_sagemaker_user_profile',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', optional: true, computed: true },
      recovery_window_in_days: { type: 'number', optional: true },
      rotation_enabled: { type: 'boolean', computed: true },
      rotation_lambda_arn: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      rotation_rules: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          automatically_after_days: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_secretsmanager_secret',
    type: 'resource',
  },
  {
    properties: {
      block_public_policy: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      secret_arn: { type: 'string', required: true },
    },
    title: 'aws_secretsmanager_secret_policy',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      rotation_enabled: { type: 'boolean', computed: true },
      rotation_lambda_arn: { type: 'string', required: true },
      secret_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      rotation_rules: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          automatically_after_days: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_secretsmanager_secret_rotation',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      secret_binary: { type: 'string', optional: true, sensitive: true },
      secret_id: { type: 'string', required: true },
      secret_string: { type: 'string', optional: true, sensitive: true },
      version_id: { type: 'string', computed: true },
      version_stages: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_secretsmanager_secret_version',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      egress: { type: 'object', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      ingress: { type: 'object', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      revoke_rules_on_delete: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_security_group',
    type: 'resource',
  },
  {
    properties: {
      cidr_blocks: { type: ['array', 'string'], optional: true },
      description: { type: 'string', optional: true },
      from_port: { type: 'number', required: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_cidr_blocks: { type: ['array', 'string'], optional: true },
      prefix_list_ids: { type: ['array', 'string'], optional: true },
      protocol: { type: 'string', required: true },
      security_group_id: { type: 'string', required: true },
      self: { type: 'boolean', optional: true },
      source_security_group_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      to_port: { type: 'number', required: true },
      type: {
        type: 'string',
        description: 'Type of rule, ingress (inbound) or egress (outbound).',
        required: true,
      },
    },
    title: 'aws_security_group_rule',
    type: 'resource',
  },
  {
    properties: { id: { type: 'string', optional: true, computed: true } },
    title: 'aws_securityhub_account',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      identifier: { type: 'string', required: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_securityhub_action_target',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      group_by_attribute: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      filters: {
        nesting_mode: 'list',
        block: {
          block_types: {
            aws_account_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            company_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            compliance_status: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            confidence: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            created_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            criticality: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            description: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            finding_provider_fields_confidence: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            finding_provider_fields_criticality: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            finding_provider_fields_related_findings_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            finding_provider_fields_related_findings_product_arn: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            finding_provider_fields_severity_label: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            finding_provider_fields_severity_original: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            finding_provider_fields_types: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            first_observed_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            generator_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            keyword: {
              nesting_mode: 'set',
              block: {
                attributes: { value: { type: 'string', required: true } },
              },
              max_items: 20,
            },
            last_observed_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            malware_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            malware_path: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            malware_state: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            malware_type: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            network_destination_domain: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            network_destination_ipv4: {
              nesting_mode: 'set',
              block: {
                attributes: { cidr: { type: 'string', required: true } },
              },
              max_items: 20,
            },
            network_destination_ipv6: {
              nesting_mode: 'set',
              block: {
                attributes: { cidr: { type: 'string', required: true } },
              },
              max_items: 20,
            },
            network_destination_port: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            network_direction: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            network_protocol: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            network_source_domain: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            network_source_ipv4: {
              nesting_mode: 'set',
              block: {
                attributes: { cidr: { type: 'string', required: true } },
              },
              max_items: 20,
            },
            network_source_ipv6: {
              nesting_mode: 'set',
              block: {
                attributes: { cidr: { type: 'string', required: true } },
              },
              max_items: 20,
            },
            network_source_mac: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            network_source_port: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            note_text: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            note_updated_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            note_updated_by: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            process_launched_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            process_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            process_parent_pid: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            process_path: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            process_pid: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  eq: { type: 'string', optional: true },
                  gte: { type: 'string', optional: true },
                  lte: { type: 'string', optional: true },
                },
              },
              max_items: 20,
            },
            process_terminated_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            product_arn: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            product_fields: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  key: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            product_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            recommendation_text: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            record_state: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            related_findings_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            related_findings_product_arn: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_iam_instance_profile_arn: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_image_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_ipv4_addresses: {
              nesting_mode: 'set',
              block: {
                attributes: { cidr: { type: 'string', required: true } },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_ipv6_addresses: {
              nesting_mode: 'set',
              block: {
                attributes: { cidr: { type: 'string', required: true } },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_key_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_launched_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_subnet_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_type: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_ec2_instance_vpc_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_iam_access_key_created_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            resource_aws_iam_access_key_status: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_iam_access_key_user_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_s3_bucket_owner_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_aws_s3_bucket_owner_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_container_image_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_container_image_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_container_launched_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            resource_container_name: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_details_other: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  key: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_id: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_partition: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_region: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_tags: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  key: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            resource_type: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            severity_label: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            source_url: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            threat_intel_indicator_category: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            threat_intel_indicator_last_observed_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            threat_intel_indicator_source: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            threat_intel_indicator_source_url: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            threat_intel_indicator_type: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            threat_intel_indicator_value: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            title: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            type: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            updated_at: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  end: { type: 'string', optional: true },
                  start: { type: 'string', optional: true },
                },
                block_types: {
                  date_range: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        unit: { type: 'string', required: true },
                        value: { type: 'number', required: true },
                      },
                    },
                    max_items: 1,
                  },
                },
              },
              max_items: 20,
            },
            user_defined_values: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  key: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            verification_state: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
            workflow_status: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  comparison: { type: 'string', required: true },
                  value: { type: 'string', required: true },
                },
              },
              max_items: 20,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_securityhub_insight',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      invitation_id: { type: 'string', computed: true },
      master_id: { type: 'string', required: true },
    },
    title: 'aws_securityhub_invite_accepter',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', required: true },
      email: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      invite: { type: 'boolean', optional: true },
      master_id: { type: 'string', computed: true },
      member_status: { type: 'string', computed: true },
    },
    title: 'aws_securityhub_member',
    type: 'resource',
  },
  {
    properties: {
      admin_account_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_securityhub_organization_admin_account',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      product_arn: { type: 'string', required: true },
    },
    title: 'aws_securityhub_product_subscription',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      standards_arn: { type: 'string', required: true },
    },
    title: 'aws_securityhub_standards_subscription',
    type: 'resource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      capabilities: { type: 'object', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      outputs: { type: 'object', computed: true },
      parameters: { type: 'object', optional: true, computed: true },
      semantic_version: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_serverlessapplicationrepository_cloudformation_stack',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_service_discovery_http_namespace',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      hosted_zone: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      vpc: { type: 'string', required: true },
    },
    title: 'aws_service_discovery_private_dns_namespace',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      hosted_zone: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_service_discovery_public_dns_namespace',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      namespace_id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      dns_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          namespace_id: { type: 'string', required: true },
          routing_policy: { type: 'string', optional: true },
        },
      },
      health_check_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          failure_threshold: { type: 'number', optional: true },
          resource_path: { type: 'string', optional: true },
          type: { type: 'string', optional: true },
        },
      },
      health_check_custom_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { failure_threshold: { type: 'number', optional: true } },
      },
    },
    title: 'aws_service_discovery_service',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_time: { type: 'string', computed: true },
      description: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      provider_name: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_servicecatalog_portfolio',
    type: 'resource',
  },
  {
    properties: {
      adjustable: { type: 'boolean', computed: true },
      arn: { type: 'string', computed: true },
      default_value: { type: 'number', computed: true },
      id: { type: 'string', optional: true, computed: true },
      quota_code: { type: 'string', required: true },
      quota_name: { type: 'string', computed: true },
      request_id: { type: 'string', computed: true },
      request_status: { type: 'string', computed: true },
      service_code: { type: 'string', required: true },
      service_name: { type: 'string', computed: true },
      value: { type: 'number', required: true },
    },
    title: 'aws_servicequotas_service_quota',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      rule_set_name: { type: 'string', required: true },
    },
    title: 'aws_ses_active_receipt_rule_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      delivery_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { tls_policy: { type: 'string', optional: true } },
      },
    },
    title: 'aws_ses_configuration_set',
    type: 'resource',
  },
  {
    properties: {
      dkim_tokens: { type: ['array', 'string'], computed: true },
      domain: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_ses_domain_dkim',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      verification_token: { type: 'string', computed: true },
    },
    title: 'aws_ses_domain_identity',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_ses_domain_identity_verification',
    type: 'resource',
  },
  {
    properties: {
      behavior_on_mx_failure: { type: 'string', optional: true },
      domain: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      mail_from_domain: { type: 'string', required: true },
    },
    title: 'aws_ses_domain_mail_from',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      email: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_ses_email_identity',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      configuration_set_name: { type: 'string', required: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      matching_types: { type: 'object', required: true },
      name: { type: 'string', required: true },
      cloudwatch_destination: {
        nesting_mode: 'set',
        properties: {
          default_value: { type: 'string', required: true },
          dimension_name: { type: 'string', required: true },
          value_source: { type: 'string', required: true },
        },
      },
      kinesis_destination: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          role_arn: { type: 'string', required: true },
          stream_arn: { type: 'string', required: true },
        },
      },
      sns_destination: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { topic_arn: { type: 'string', required: true } },
      },
    },
    title: 'aws_ses_event_destination',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      identity: { type: 'string', required: true },
      include_original_headers: { type: 'boolean', optional: true },
      notification_type: { type: 'string', required: true },
      topic_arn: { type: 'string', optional: true },
    },
    title: 'aws_ses_identity_notification_topic',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      identity: { type: 'string', required: true },
      name: { type: 'string', required: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_ses_identity_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cidr: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_ses_receipt_filter',
    type: 'resource',
  },
  {
    properties: {
      after: { type: 'string', optional: true },
      arn: { type: 'string', computed: true },
      enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      recipients: { type: 'object', optional: true },
      rule_set_name: { type: 'string', required: true },
      scan_enabled: { type: 'boolean', optional: true },
      tls_policy: { type: 'string', optional: true, computed: true },
      add_header_action: {
        nesting_mode: 'set',
        properties: {
          header_name: { type: 'string', required: true },
          header_value: { type: 'string', required: true },
          position: { type: 'number', required: true },
        },
      },
      bounce_action: {
        nesting_mode: 'set',
        properties: {
          message: { type: 'string', required: true },
          position: { type: 'number', required: true },
          sender: { type: 'string', required: true },
          smtp_reply_code: { type: 'string', required: true },
          status_code: { type: 'string', optional: true },
          topic_arn: { type: 'string', optional: true },
        },
      },
      lambda_action: {
        nesting_mode: 'set',
        properties: {
          function_arn: { type: 'string', required: true },
          invocation_type: { type: 'string', optional: true, computed: true },
          position: { type: 'number', required: true },
          topic_arn: { type: 'string', optional: true },
        },
      },
      s3_action: {
        nesting_mode: 'set',
        properties: {
          bucket_name: { type: 'string', required: true },
          kms_key_arn: { type: 'string', optional: true },
          object_key_prefix: { type: 'string', optional: true },
          position: { type: 'number', required: true },
          topic_arn: { type: 'string', optional: true },
        },
      },
      sns_action: {
        nesting_mode: 'set',
        properties: {
          position: { type: 'number', required: true },
          topic_arn: { type: 'string', required: true },
        },
      },
      stop_action: {
        nesting_mode: 'set',
        properties: {
          position: { type: 'number', required: true },
          scope: { type: 'string', required: true },
          topic_arn: { type: 'string', optional: true },
        },
      },
      workmail_action: {
        nesting_mode: 'set',
        properties: {
          organization_arn: { type: 'string', required: true },
          position: { type: 'number', required: true },
          topic_arn: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ses_receipt_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      rule_set_name: { type: 'string', required: true },
    },
    title: 'aws_ses_receipt_rule_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      html: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      subject: { type: 'string', optional: true },
      text: { type: 'string', optional: true },
    },
    title: 'aws_ses_template',
    type: 'resource',
  },
  {
    properties: {
      creation_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_sfn_activity',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      creation_date: { type: 'string', computed: true },
      definition: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      role_arn: { type: 'string', required: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', optional: true },
      logging_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          include_execution_data: { type: 'boolean', optional: true },
          level: { type: 'string', optional: true },
          log_destination: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_sfn_state_machine',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      resource_arn: { type: 'string', required: true },
    },
    title: 'aws_shield_protection',
    type: 'resource',
  },
  {
    properties: {
      completed_at: { type: 'string', computed: true },
      created_at: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ignore_signing_job_failure: { type: 'boolean', optional: true },
      job_id: { type: 'string', computed: true },
      job_invoker: { type: 'string', computed: true },
      job_owner: { type: 'string', computed: true },
      platform_display_name: { type: 'string', computed: true },
      platform_id: { type: 'string', computed: true },
      profile_name: { type: 'string', required: true },
      profile_version: { type: 'string', computed: true },
      requested_by: { type: 'string', computed: true },
      revocation_record: {
        type: [
          'array',
          [
            'object',
            { reason: 'string', revoked_at: 'string', revoked_by: 'string' },
          ],
        ],
        computed: true,
      },
      signature_expires_at: { type: 'string', computed: true },
      signed_object: {
        type: [
          'array',
          [
            'object',
            { s3: ['list', ['object', { bucket: 'string', key: 'string' }]] },
          ],
        ],
        computed: true,
      },
      status: { type: 'string', computed: true },
      status_reason: { type: 'string', computed: true },
      destination: {
        nesting_mode: 'list',
        block: {
          block_types: {
            s3: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  bucket: { type: 'string', required: true },
                  prefix: { type: 'string', optional: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
      source: {
        nesting_mode: 'list',
        block: {
          block_types: {
            s3: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  bucket: { type: 'string', required: true },
                  key: { type: 'string', required: true },
                  version: { type: 'string', required: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
          },
        },
        min_items: 1,
        max_items: 1,
      },
    },
    title: 'aws_signer_signing_job',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      platform_display_name: { type: 'string', computed: true },
      platform_id: { type: 'string', required: true },
      revocation_record: {
        type: [
          'array',
          [
            'object',
            {
              revocation_effective_from: 'string',
              revoked_at: 'string',
              revoked_by: 'string',
            },
          ],
        ],
        computed: true,
      },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', computed: true },
      version_arn: { type: 'string', computed: true },
      signature_validity_period: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          type: { type: 'string', required: true },
          value: { type: 'number', required: true },
        },
      },
    },
    title: 'aws_signer_signing_profile',
    type: 'resource',
  },
  {
    properties: {
      action: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      principal: { type: 'string', required: true },
      profile_name: { type: 'string', required: true },
      profile_version: { type: 'string', optional: true, computed: true },
      statement_id: { type: 'string', optional: true, computed: true },
      statement_id_prefix: { type: 'string', optional: true },
    },
    title: 'aws_signer_signing_profile_permission',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_simpledb_domain',
    type: 'resource',
  },
  {
    properties: {
      account_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      snapshot_id: { type: 'string', required: true },
    },
    title: 'aws_snapshot_create_volume_permission',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      event_delivery_failure_topic_arn: { type: 'string', optional: true },
      event_endpoint_created_topic_arn: { type: 'string', optional: true },
      event_endpoint_deleted_topic_arn: { type: 'string', optional: true },
      event_endpoint_updated_topic_arn: { type: 'string', optional: true },
      failure_feedback_role_arn: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      platform: { type: 'string', required: true },
      platform_credential: { type: 'string', required: true, sensitive: true },
      platform_principal: { type: 'string', optional: true, sensitive: true },
      success_feedback_role_arn: { type: 'string', optional: true },
      success_feedback_sample_rate: { type: 'string', optional: true },
    },
    title: 'aws_sns_platform_application',
    type: 'resource',
  },
  {
    properties: {
      default_sender_id: { type: 'string', optional: true },
      default_sms_type: { type: 'string', optional: true },
      delivery_status_iam_role_arn: { type: 'string', optional: true },
      delivery_status_success_sampling_rate: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      monthly_spend_limit: { type: 'string', optional: true },
      usage_report_s3_bucket: { type: 'string', optional: true },
    },
    title: 'aws_sns_sms_preferences',
    type: 'resource',
  },
  {
    properties: {
      application_failure_feedback_role_arn: { type: 'string', optional: true },
      application_success_feedback_role_arn: { type: 'string', optional: true },
      application_success_feedback_sample_rate: {
        type: 'number',
        optional: true,
      },
      arn: { type: 'string', computed: true },
      content_based_deduplication: { type: 'boolean', optional: true },
      delivery_policy: { type: 'string', optional: true },
      display_name: { type: 'string', optional: true },
      fifo_topic: { type: 'boolean', optional: true },
      http_failure_feedback_role_arn: { type: 'string', optional: true },
      http_success_feedback_role_arn: { type: 'string', optional: true },
      http_success_feedback_sample_rate: { type: 'number', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_master_key_id: { type: 'string', optional: true },
      lambda_failure_feedback_role_arn: { type: 'string', optional: true },
      lambda_success_feedback_role_arn: { type: 'string', optional: true },
      lambda_success_feedback_sample_rate: { type: 'number', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', optional: true, computed: true },
      sqs_failure_feedback_role_arn: { type: 'string', optional: true },
      sqs_success_feedback_role_arn: { type: 'string', optional: true },
      sqs_success_feedback_sample_rate: { type: 'number', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_sns_topic',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
    },
    title: 'aws_sns_topic_policy',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      confirmation_timeout_in_minutes: { type: 'number', optional: true },
      confirmation_was_authenticated: { type: 'boolean', computed: true },
      delivery_policy: { type: 'string', optional: true },
      endpoint: { type: 'string', required: true },
      endpoint_auto_confirms: { type: 'boolean', optional: true },
      filter_policy: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      pending_confirmation: { type: 'boolean', computed: true },
      protocol: { type: 'string', required: true },
      raw_message_delivery: { type: 'boolean', optional: true },
      redrive_policy: { type: 'string', optional: true },
      subscription_role_arn: { type: 'string', optional: true },
      topic_arn: { type: 'string', required: true },
    },
    title: 'aws_sns_topic_subscription',
    type: 'resource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      prefix: { type: 'string', optional: true },
    },
    title: 'aws_spot_datafeed_subscription',
    type: 'resource',
  },
  {
    properties: {
      allocation_strategy: { type: 'string', optional: true },
      client_token: { type: 'string', computed: true },
      excess_capacity_termination_policy: { type: 'string', optional: true },
      fleet_type: { type: 'string', optional: true },
      iam_fleet_role: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      instance_interruption_behaviour: { type: 'string', optional: true },
      instance_pools_to_use_count: { type: 'number', optional: true },
      load_balancers: { type: 'object', optional: true, computed: true },
      replace_unhealthy_instances: { type: 'boolean', optional: true },
      spot_price: { type: 'string', optional: true },
      spot_request_state: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      target_capacity: { type: 'number', required: true },
      target_group_arns: { type: 'object', optional: true, computed: true },
      terminate_instances_with_expiration: { type: 'boolean', optional: true },
      valid_from: { type: 'string', optional: true },
      valid_until: { type: 'string', optional: true },
      wait_for_fulfillment: { type: 'boolean', optional: true },
      launch_specification: {
        nesting_mode: 'set',
        properties: {
          ami: { type: 'string', required: true },
          associate_public_ip_address: { type: 'boolean', optional: true },
          availability_zone: { type: 'string', optional: true, computed: true },
          ebs_optimized: { type: 'boolean', optional: true },
          iam_instance_profile: { type: 'string', optional: true },
          iam_instance_profile_arn: { type: 'string', optional: true },
          instance_type: { type: 'string', required: true },
          key_name: { type: 'string', optional: true, computed: true },
          monitoring: { type: 'boolean', optional: true },
          placement_group: { type: 'string', optional: true, computed: true },
          placement_tenancy: { type: 'string', optional: true },
          spot_price: { type: 'string', optional: true },
          subnet_id: { type: 'string', optional: true, computed: true },
          tags: { type: 'object', optional: true },
          user_data: { type: 'string', optional: true },
          vpc_security_group_ids: {
            type: 'object',
            optional: true,
            computed: true,
          },
          weighted_capacity: { type: 'string', optional: true },
        },
      },
      launch_template_config: {
        nesting_mode: 'set',
        block: {
          block_types: {
            launch_template_specification: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  id: { type: 'string', optional: true },
                  name: { type: 'string', optional: true },
                  version: { type: 'string', optional: true },
                },
              },
              min_items: 1,
              max_items: 1,
            },
            overrides: {
              nesting_mode: 'set',
              block: {
                attributes: {
                  availability_zone: { type: 'string', optional: true },
                  instance_type: { type: 'string', optional: true },
                  priority: { type: 'number', optional: true, computed: true },
                  spot_price: {
                    type: 'string',
                    optional: true,
                    computed: true,
                  },
                  subnet_id: { type: 'string', optional: true, computed: true },
                  weighted_capacity: {
                    type: 'number',
                    optional: true,
                    computed: true,
                  },
                },
              },
            },
          },
        },
      },
      spot_maintenance_strategies: {
        nesting_mode: 'list',
        block: {
          block_types: {
            capacity_rebalance: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  replacement_strategy: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_spot_fleet_request',
    type: 'resource',
  },
  {
    properties: {
      ami: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      associate_public_ip_address: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      availability_zone: { type: 'string', optional: true, computed: true },
      block_duration_minutes: { type: 'number', optional: true },
      cpu_core_count: { type: 'number', optional: true, computed: true },
      cpu_threads_per_core: { type: 'number', optional: true, computed: true },
      disable_api_termination: { type: 'boolean', optional: true },
      ebs_optimized: { type: 'boolean', optional: true },
      get_password_data: { type: 'boolean', optional: true },
      hibernation: { type: 'boolean', optional: true },
      host_id: { type: 'string', optional: true, computed: true },
      iam_instance_profile: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_initiated_shutdown_behavior: { type: 'string', optional: true },
      instance_interruption_behaviour: { type: 'string', optional: true },
      instance_state: { type: 'string', computed: true },
      instance_type: { type: 'string', required: true },
      ipv6_address_count: { type: 'number', optional: true, computed: true },
      ipv6_addresses: {
        type: ['array', 'string'],
        optional: true,
        computed: true,
      },
      key_name: { type: 'string', optional: true, computed: true },
      launch_group: { type: 'string', optional: true },
      monitoring: { type: 'boolean', optional: true },
      outpost_arn: { type: 'string', computed: true },
      password_data: { type: 'string', computed: true },
      placement_group: { type: 'string', optional: true, computed: true },
      primary_network_interface_id: { type: 'string', computed: true },
      private_dns: { type: 'string', computed: true },
      private_ip: { type: 'string', optional: true, computed: true },
      public_dns: { type: 'string', computed: true },
      public_ip: { type: 'string', computed: true },
      secondary_private_ips: { type: 'object', optional: true, computed: true },
      security_groups: { type: 'object', optional: true, computed: true },
      source_dest_check: { type: 'boolean', optional: true },
      spot_bid_status: { type: 'string', computed: true },
      spot_instance_id: { type: 'string', computed: true },
      spot_price: { type: 'string', optional: true, computed: true },
      spot_request_state: { type: 'string', computed: true },
      spot_type: { type: 'string', optional: true },
      subnet_id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      tenancy: { type: 'string', optional: true, computed: true },
      user_data: { type: 'string', optional: true },
      user_data_base64: { type: 'string', optional: true },
      valid_from: { type: 'string', optional: true, computed: true },
      valid_until: { type: 'string', optional: true, computed: true },
      volume_tags: { type: 'object', optional: true },
      vpc_security_group_ids: {
        type: 'object',
        optional: true,
        computed: true,
      },
      wait_for_fulfillment: { type: 'boolean', optional: true },
      credit_specification: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { cpu_credits: { type: 'string', optional: true } },
      },
      ebs_block_device: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_name: { type: 'string', required: true },
          encrypted: { type: 'boolean', optional: true, computed: true },
          iops: { type: 'number', optional: true, computed: true },
          kms_key_id: { type: 'string', optional: true, computed: true },
          snapshot_id: { type: 'string', optional: true, computed: true },
          tags: { type: 'object', optional: true },
          throughput: { type: 'number', optional: true, computed: true },
          volume_id: { type: 'string', computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      enclave_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', optional: true, computed: true },
        },
      },
      ephemeral_block_device: {
        nesting_mode: 'set',
        properties: {
          device_name: { type: 'string', required: true },
          no_device: { type: 'boolean', optional: true },
          virtual_name: { type: 'string', optional: true },
        },
      },
      metadata_options: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          http_endpoint: { type: 'string', optional: true, computed: true },
          http_put_response_hop_limit: {
            type: 'number',
            optional: true,
            computed: true,
          },
          http_tokens: { type: 'string', optional: true, computed: true },
        },
      },
      network_interface: {
        nesting_mode: 'set',
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_index: { type: 'number', required: true },
          network_interface_id: { type: 'string', required: true },
        },
      },
      root_block_device: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          delete_on_termination: { type: 'boolean', optional: true },
          device_name: { type: 'string', computed: true },
          encrypted: { type: 'boolean', optional: true, computed: true },
          iops: { type: 'number', optional: true, computed: true },
          kms_key_id: { type: 'string', optional: true, computed: true },
          tags: { type: 'object', optional: true },
          throughput: { type: 'number', optional: true, computed: true },
          volume_id: { type: 'string', computed: true },
          volume_size: { type: 'number', optional: true, computed: true },
          volume_type: { type: 'string', optional: true, computed: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_spot_instance_request',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      content_based_deduplication: { type: 'boolean', optional: true },
      delay_seconds: { type: 'number', optional: true },
      fifo_queue: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_data_key_reuse_period_seconds: {
        type: 'number',
        optional: true,
        computed: true,
      },
      kms_master_key_id: { type: 'string', optional: true },
      max_message_size: { type: 'number', optional: true },
      message_retention_seconds: { type: 'number', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', optional: true, computed: true },
      receive_wait_time_seconds: { type: 'number', optional: true },
      redrive_policy: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      visibility_timeout_seconds: { type: 'number', optional: true },
    },
    title: 'aws_sqs_queue',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', required: true },
      queue_url: { type: 'string', required: true },
    },
    title: 'aws_sqs_queue_policy',
    type: 'resource',
  },
  {
    properties: {
      activation_code: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      expiration_date: { type: 'string', optional: true, computed: true },
      expired: { type: 'boolean', computed: true },
      iam_role: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      registration_count: { type: 'number', computed: true },
      registration_limit: { type: 'number', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_ssm_activation',
    type: 'resource',
  },
  {
    properties: {
      apply_only_at_cron_interval: { type: 'boolean', optional: true },
      association_id: { type: 'string', computed: true },
      association_name: { type: 'string', optional: true },
      automation_target_parameter_name: { type: 'string', optional: true },
      compliance_severity: { type: 'string', optional: true },
      document_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', optional: true },
      max_concurrency: { type: 'string', optional: true },
      max_errors: { type: 'string', optional: true },
      name: { type: 'string', required: true },
      parameters: { type: 'object', optional: true, computed: true },
      schedule_expression: { type: 'string', optional: true },
      output_location: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          s3_bucket_name: { type: 'string', required: true },
          s3_key_prefix: { type: 'string', optional: true },
        },
      },
      targets: {
        nesting_mode: 'list',
        max_items: 5,
        properties: {
          key: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ssm_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      content: { type: 'string', required: true },
      created_date: { type: 'string', computed: true },
      default_version: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      document_format: { type: 'string', optional: true },
      document_type: { type: 'string', required: true },
      document_version: { type: 'string', computed: true },
      hash: { type: 'string', computed: true },
      hash_type: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      latest_version: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      owner: { type: 'string', computed: true },
      parameter: {
        type: [
          'array',
          [
            'object',
            {
              default_value: 'string',
              description: 'string',
              name: 'string',
              type: 'string',
            },
          ],
        ],
        computed: true,
      },
      permissions: { type: 'object', optional: true },
      platform_types: { type: ['array', 'string'], computed: true },
      schema_version: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      target_type: { type: 'string', optional: true },
      version_name: { type: 'string', optional: true },
      attachments_source: {
        nesting_mode: 'list',
        max_items: 20,
        properties: {
          key: { type: 'string', required: true },
          name: { type: 'string', optional: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ssm_document',
    type: 'resource',
  },
  {
    properties: {
      allow_unassociated_targets: { type: 'boolean', optional: true },
      cutoff: { type: 'number', required: true },
      description: { type: 'string', optional: true },
      duration: { type: 'number', required: true },
      enabled: { type: 'boolean', optional: true },
      end_date: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      schedule: { type: 'string', required: true },
      schedule_offset: { type: 'number', optional: true },
      schedule_timezone: { type: 'string', optional: true },
      start_date: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_ssm_maintenance_window',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      owner_information: { type: 'string', optional: true },
      resource_type: { type: 'string', required: true },
      window_id: { type: 'string', required: true },
      targets: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 5,
        properties: {
          key: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ssm_maintenance_window_target',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      max_concurrency: { type: 'string', required: true },
      max_errors: { type: 'string', required: true },
      name: { type: 'string', optional: true },
      priority: { type: 'number', optional: true },
      service_role_arn: { type: 'string', optional: true, computed: true },
      task_arn: { type: 'string', required: true },
      task_type: { type: 'string', required: true },
      window_id: { type: 'string', required: true },
      targets: {
        nesting_mode: 'list',
        max_items: 5,
        properties: {
          key: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
      task_invocation_parameters: {
        nesting_mode: 'list',
        block: {
          block_types: {
            automation_parameters: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  document_version: { type: 'string', optional: true },
                },
                block_types: {
                  parameter: {
                    nesting_mode: 'set',
                    block: {
                      attributes: {
                        name: { type: 'string', required: true },
                        values: { type: ['list', 'string'], required: true },
                      },
                    },
                  },
                },
              },
              max_items: 1,
            },
            lambda_parameters: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  client_context: { type: 'string', optional: true },
                  payload: { type: 'string', optional: true, sensitive: true },
                  qualifier: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
            run_command_parameters: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  comment: { type: 'string', optional: true },
                  document_hash: { type: 'string', optional: true },
                  document_hash_type: { type: 'string', optional: true },
                  document_version: { type: 'string', optional: true },
                  output_s3_bucket: { type: 'string', optional: true },
                  output_s3_key_prefix: { type: 'string', optional: true },
                  service_role_arn: { type: 'string', optional: true },
                  timeout_seconds: { type: 'number', optional: true },
                },
                block_types: {
                  cloudwatch_config: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        cloudwatch_log_group_name: {
                          type: 'string',
                          optional: true,
                          computed: true,
                        },
                        cloudwatch_output_enabled: {
                          type: 'bool',
                          optional: true,
                        },
                      },
                    },
                    max_items: 1,
                  },
                  notification_config: {
                    nesting_mode: 'list',
                    block: {
                      attributes: {
                        notification_arn: { type: 'string', optional: true },
                        notification_events: {
                          type: ['list', 'string'],
                          optional: true,
                        },
                        notification_type: { type: 'string', optional: true },
                      },
                    },
                    max_items: 1,
                  },
                  parameter: {
                    nesting_mode: 'set',
                    block: {
                      attributes: {
                        name: { type: 'string', required: true },
                        values: { type: ['list', 'string'], required: true },
                      },
                    },
                  },
                },
              },
              max_items: 1,
            },
            step_functions_parameters: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  input: { type: 'string', optional: true, sensitive: true },
                  name: { type: 'string', optional: true },
                },
              },
              max_items: 1,
            },
          },
        },
        max_items: 1,
      },
    },
    title: 'aws_ssm_maintenance_window_task',
    type: 'resource',
  },
  {
    properties: {
      allowed_pattern: { type: 'string', optional: true },
      arn: { type: 'string', optional: true, computed: true },
      data_type: { type: 'string', optional: true, computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      key_id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      overwrite: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      tier: { type: 'string', optional: true },
      type: { type: 'string', required: true },
      value: { type: 'string', required: true, sensitive: true },
      version: { type: 'number', computed: true },
    },
    title: 'aws_ssm_parameter',
    type: 'resource',
  },
  {
    properties: {
      approved_patches: { type: 'object', optional: true },
      approved_patches_compliance_level: { type: 'string', optional: true },
      approved_patches_enable_non_security: { type: 'boolean', optional: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      operating_system: { type: 'string', optional: true },
      rejected_patches: { type: 'object', optional: true },
      rejected_patches_action: {
        type: 'string',
        optional: true,
        computed: true,
      },
      tags: { type: 'object', optional: true },
      approval_rule: {
        nesting_mode: 'list',
        properties: {
          approve_after_days: { type: 'number', optional: true },
          approve_until_date: { type: 'string', optional: true },
          compliance_level: { type: 'string', optional: true },
          enable_non_security: { type: 'boolean', optional: true },
        },
      },
      global_filter: {
        nesting_mode: 'list',
        max_items: 4,
        properties: {
          key: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
      source: {
        nesting_mode: 'list',
        max_items: 20,
        properties: {
          configuration: { type: 'string', required: true },
          name: { type: 'string', required: true },
          products: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ssm_patch_baseline',
    type: 'resource',
  },
  {
    properties: {
      baseline_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      patch_group: { type: 'string', required: true },
    },
    title: 'aws_ssm_patch_group',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      s3_destination: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          bucket_name: { type: 'string', required: true },
          kms_key_arn: { type: 'string', optional: true },
          prefix: { type: 'string', optional: true },
          region: { type: 'string', required: true },
          sync_format: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_ssm_resource_data_sync',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_arn: { type: 'string', required: true },
      permission_set_arn: { type: 'string', required: true },
      principal_id: { type: 'string', required: true },
      principal_type: { type: 'string', required: true },
      target_id: { type: 'string', required: true },
      target_type: { type: 'string', optional: true },
    },
    title: 'aws_ssoadmin_account_assignment',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_arn: { type: 'string', required: true },
      managed_policy_arn: { type: 'string', required: true },
      managed_policy_name: { type: 'string', computed: true },
      permission_set_arn: { type: 'string', required: true },
    },
    title: 'aws_ssoadmin_managed_policy_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_arn: { type: 'string', required: true },
      name: { type: 'string', required: true },
      relay_state: { type: 'string', optional: true },
      session_duration: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_ssoadmin_permission_set',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      inline_policy: { type: 'string', required: true },
      instance_arn: { type: 'string', required: true },
      permission_set_arn: { type: 'string', required: true },
    },
    title: 'aws_ssoadmin_permission_set_inline_policy',
    type: 'resource',
  },
  {
    properties: {
      disk_id: { type: 'string', required: true },
      gateway_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_storagegateway_cache',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      chap_enabled: { type: 'boolean', computed: true },
      gateway_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      kms_encrypted: { type: 'boolean', optional: true },
      kms_key: { type: 'string', optional: true },
      lun_number: { type: 'number', computed: true },
      network_interface_id: { type: 'string', required: true },
      network_interface_port: { type: 'number', computed: true },
      snapshot_id: { type: 'string', optional: true },
      source_volume_arn: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      target_arn: { type: 'string', computed: true },
      target_name: { type: 'string', required: true },
      volume_arn: { type: 'string', computed: true },
      volume_id: { type: 'string', computed: true },
      volume_size_in_bytes: { type: 'number', required: true },
    },
    title: 'aws_storagegateway_cached_iscsi_volume',
    type: 'resource',
  },
  {
    properties: {
      activation_key: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      average_download_rate_limit_in_bits_per_sec: {
        type: 'number',
        optional: true,
      },
      average_upload_rate_limit_in_bits_per_sec: {
        type: 'number',
        optional: true,
      },
      cloudwatch_log_group_arn: { type: 'string', optional: true },
      ec2_instance_id: { type: 'string', computed: true },
      endpoint_type: { type: 'string', computed: true },
      gateway_id: { type: 'string', computed: true },
      gateway_ip_address: { type: 'string', optional: true, computed: true },
      gateway_name: { type: 'string', required: true },
      gateway_network_interface: {
        type: ['array', ['object', { ipv4_address: 'string' }]],
        computed: true,
      },
      gateway_timezone: { type: 'string', required: true },
      gateway_type: { type: 'string', optional: true },
      gateway_vpc_endpoint: { type: 'string', optional: true },
      host_environment: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      medium_changer_type: { type: 'string', optional: true },
      smb_file_share_visibility: { type: 'boolean', optional: true },
      smb_guest_password: { type: 'string', optional: true, sensitive: true },
      smb_security_strategy: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      tape_drive_type: { type: 'string', optional: true },
      smb_active_directory_settings: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          active_directory_status: { type: 'string', computed: true },
          domain_controllers: { type: 'object', optional: true },
          domain_name: { type: 'string', required: true },
          organizational_unit: { type: 'string', optional: true },
          password: { type: 'string', required: true, sensitive: true },
          timeout_in_seconds: { type: 'number', optional: true },
          username: { type: 'string', required: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: { create: { type: 'string', optional: true } },
      },
    },
    title: 'aws_storagegateway_gateway',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      client_list: { type: 'object', required: true },
      default_storage_class: { type: 'string', optional: true },
      file_share_name: { type: 'string', optional: true, computed: true },
      fileshare_id: { type: 'string', computed: true },
      gateway_arn: { type: 'string', required: true },
      guess_mime_type_enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      kms_encrypted: { type: 'boolean', optional: true },
      kms_key_arn: { type: 'string', optional: true },
      location_arn: { type: 'string', required: true },
      notification_policy: { type: 'string', optional: true },
      object_acl: { type: 'string', optional: true },
      path: { type: 'string', computed: true },
      read_only: { type: 'boolean', optional: true },
      requester_pays: { type: 'boolean', optional: true },
      role_arn: { type: 'string', required: true },
      squash: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      cache_attributes: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cache_stale_timeout_in_seconds: { type: 'number', optional: true },
        },
      },
      nfs_file_share_defaults: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          directory_mode: { type: 'string', optional: true },
          file_mode: { type: 'string', optional: true },
          group_id: { type: 'string', optional: true },
          owner_id: { type: 'string', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_storagegateway_nfs_file_share',
    type: 'resource',
  },
  {
    properties: {
      access_based_enumeration: { type: 'boolean', optional: true },
      admin_user_list: { type: 'object', optional: true },
      arn: { type: 'string', computed: true },
      audit_destination_arn: { type: 'string', optional: true },
      authentication: { type: 'string', optional: true },
      case_sensitivity: { type: 'string', optional: true },
      default_storage_class: { type: 'string', optional: true },
      file_share_name: { type: 'string', optional: true, computed: true },
      fileshare_id: { type: 'string', computed: true },
      gateway_arn: { type: 'string', required: true },
      guess_mime_type_enabled: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      invalid_user_list: { type: 'object', optional: true },
      kms_encrypted: { type: 'boolean', optional: true },
      kms_key_arn: { type: 'string', optional: true },
      location_arn: { type: 'string', required: true },
      notification_policy: { type: 'string', optional: true },
      object_acl: { type: 'string', optional: true },
      path: { type: 'string', computed: true },
      read_only: { type: 'boolean', optional: true },
      requester_pays: { type: 'boolean', optional: true },
      role_arn: { type: 'string', required: true },
      smb_acl_enabled: { type: 'boolean', optional: true },
      tags: { type: 'object', optional: true },
      valid_user_list: { type: 'object', optional: true },
      cache_attributes: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          cache_stale_timeout_in_seconds: { type: 'number', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_storagegateway_smb_file_share',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      chap_enabled: { type: 'boolean', computed: true },
      disk_id: { type: 'string', required: true },
      gateway_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      kms_encrypted: { type: 'boolean', optional: true },
      kms_key: { type: 'string', optional: true },
      lun_number: { type: 'number', computed: true },
      network_interface_id: { type: 'string', required: true },
      network_interface_port: { type: 'number', computed: true },
      preserve_existing_data: { type: 'boolean', required: true },
      snapshot_id: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      target_arn: { type: 'string', computed: true },
      target_name: { type: 'string', required: true },
      volume_attachment_status: { type: 'string', computed: true },
      volume_id: { type: 'string', computed: true },
      volume_size_in_bytes: { type: 'number', computed: true },
      volume_status: { type: 'string', computed: true },
      volume_type: { type: 'string', computed: true },
    },
    title: 'aws_storagegateway_stored_iscsi_volume',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      pool_name: { type: 'string', required: true },
      retention_lock_time_in_days: { type: 'number', optional: true },
      retention_lock_type: { type: 'string', optional: true },
      storage_class: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_storagegateway_tape_pool',
    type: 'resource',
  },
  {
    properties: {
      disk_id: { type: 'string', optional: true, computed: true },
      disk_path: { type: 'string', optional: true, computed: true },
      gateway_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_storagegateway_upload_buffer',
    type: 'resource',
  },
  {
    properties: {
      disk_id: { type: 'string', required: true },
      gateway_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_storagegateway_working_storage',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      assign_ipv6_address_on_creation: { type: 'boolean', optional: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      availability_zone_id: { type: 'string', optional: true, computed: true },
      cidr_block: { type: 'string', required: true },
      customer_owned_ipv4_pool: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_cidr_block: { type: 'string', optional: true },
      ipv6_cidr_block_association_id: { type: 'string', computed: true },
      map_customer_owned_ip_on_launch: { type: 'boolean', optional: true },
      map_public_ip_on_launch: { type: 'boolean', optional: true },
      outpost_arn: { type: 'string', optional: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      tags_all: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_subnet',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      workflow_execution_retention_period_in_days: {
        type: 'string',
        required: true,
      },
    },
    title: 'aws_swf_domain',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      artifact_s3_location: { type: 'string', required: true },
      engine_arn: { type: 'string', computed: true },
      execution_role_arn: { type: 'string', required: true },
      failure_retention_period: { type: 'number', optional: true },
      handler: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      runtime_version: { type: 'string', required: true },
      s3_bucket: { type: 'string', optional: true },
      s3_key: { type: 'string', optional: true },
      s3_version: { type: 'string', optional: true },
      source_location_arn: { type: 'string', computed: true },
      start_canary: { type: 'boolean', optional: true },
      status: { type: 'string', computed: true },
      success_retention_period: { type: 'number', optional: true },
      tags: { type: 'object', optional: true },
      timeline: {
        type: [
          'array',
          [
            'object',
            {
              created: 'string',
              last_modified: 'string',
              last_started: 'string',
              last_stopped: 'string',
            },
          ],
        ],
        computed: true,
      },
      zip_file: { type: 'string', optional: true },
      run_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          active_tracing: { type: 'boolean', optional: true },
          memory_in_mb: { type: 'number', optional: true, computed: true },
          timeout_in_seconds: { type: 'number', optional: true },
        },
      },
      schedule: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          duration_in_seconds: { type: 'number', optional: true },
          expression: { type: 'string', required: true },
        },
      },
      vpc_config: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          security_group_ids: { type: 'object', optional: true },
          subnet_ids: { type: 'object', optional: true },
          vpc_id: { type: 'string', computed: true },
        },
      },
    },
    title: 'aws_synthetics_canary',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      endpoint: { type: 'string', computed: true },
      endpoint_type: { type: 'string', optional: true },
      force_destroy: { type: 'boolean', optional: true },
      host_key: { type: 'string', optional: true, sensitive: true },
      host_key_fingerprint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      identity_provider_type: { type: 'string', optional: true },
      invocation_role: { type: 'string', optional: true },
      logging_role: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
      url: { type: 'string', optional: true },
      endpoint_details: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          address_allocation_ids: { type: 'object', optional: true },
          subnet_ids: { type: 'object', optional: true },
          vpc_endpoint_id: { type: 'string', optional: true, computed: true },
          vpc_id: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_transfer_server',
    type: 'resource',
  },
  {
    properties: {
      body: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      server_id: { type: 'string', required: true },
      user_name: { type: 'string', required: true },
    },
    title: 'aws_transfer_ssh_key',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      home_directory: { type: 'string', optional: true },
      home_directory_type: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', optional: true },
      role: { type: 'string', required: true },
      server_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      user_name: { type: 'string', required: true },
      home_directory_mappings: {
        nesting_mode: 'list',
        properties: {
          entry: { type: 'string', required: true },
          target: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_transfer_user',
    type: 'resource',
  },
  {
    properties: {
      device_name: { type: 'string', required: true },
      force_detach: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', required: true },
      skip_destroy: { type: 'boolean', optional: true },
      volume_id: { type: 'string', required: true },
    },
    title: 'aws_volume_attachment',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      assign_generated_ipv6_cidr_block: { type: 'boolean', optional: true },
      cidr_block: { type: 'string', required: true },
      default_network_acl_id: { type: 'string', computed: true },
      default_route_table_id: { type: 'string', computed: true },
      default_security_group_id: { type: 'string', computed: true },
      dhcp_options_id: { type: 'string', computed: true },
      enable_classiclink: { type: 'boolean', optional: true, computed: true },
      enable_classiclink_dns_support: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      enable_dns_hostnames: { type: 'boolean', optional: true, computed: true },
      enable_dns_support: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_tenancy: { type: 'string', optional: true },
      ipv6_association_id: { type: 'string', computed: true },
      ipv6_cidr_block: { type: 'string', computed: true },
      main_route_table_id: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      tags_all: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_vpc',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain_name: { type: 'string', optional: true },
      domain_name_servers: { type: ['array', 'string'], optional: true },
      id: { type: 'string', optional: true, computed: true },
      netbios_name_servers: { type: ['array', 'string'], optional: true },
      netbios_node_type: { type: 'string', optional: true },
      ntp_servers: { type: ['array', 'string'], optional: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_vpc_dhcp_options',
    type: 'resource',
  },
  {
    properties: {
      dhcp_options_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      vpc_id: { type: 'string', required: true },
    },
    title: 'aws_vpc_dhcp_options_association',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auto_accept: { type: 'boolean', optional: true },
      cidr_blocks: { type: ['array', 'string'], computed: true },
      dns_entry: {
        type: [
          'array',
          ['object', { dns_name: 'string', hosted_zone_id: 'string' }],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      network_interface_ids: { type: 'object', computed: true },
      owner_id: { type: 'string', computed: true },
      policy: { type: 'string', optional: true, computed: true },
      prefix_list_id: { type: 'string', computed: true },
      private_dns_enabled: { type: 'boolean', optional: true },
      requester_managed: { type: 'boolean', computed: true },
      route_table_ids: { type: 'object', optional: true, computed: true },
      security_group_ids: { type: 'object', optional: true, computed: true },
      service_name: { type: 'string', required: true },
      state: { type: 'string', computed: true },
      subnet_ids: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_endpoint_type: { type: 'string', optional: true },
      vpc_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_vpc_endpoint',
    type: 'resource',
  },
  {
    properties: {
      connection_events: { type: 'object', required: true },
      connection_notification_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      notification_type: { type: 'string', computed: true },
      state: { type: 'string', computed: true },
      vpc_endpoint_id: { type: 'string', optional: true },
      vpc_endpoint_service_id: { type: 'string', optional: true },
    },
    title: 'aws_vpc_endpoint_connection_notification',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      route_table_id: { type: 'string', required: true },
      vpc_endpoint_id: { type: 'string', required: true },
    },
    title: 'aws_vpc_endpoint_route_table_association',
    type: 'resource',
  },
  {
    properties: {
      acceptance_required: { type: 'boolean', required: true },
      allowed_principals: { type: 'object', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', computed: true },
      base_endpoint_dns_names: { type: 'object', computed: true },
      gateway_load_balancer_arns: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      manages_vpc_endpoints: { type: 'boolean', computed: true },
      network_load_balancer_arns: { type: 'object', optional: true },
      private_dns_name: { type: 'string', optional: true, computed: true },
      private_dns_name_configuration: {
        type: [
          'array',
          [
            'object',
            {
              name: 'string',
              state: 'string',
              type: 'string',
              value: 'string',
            },
          ],
        ],
        computed: true,
      },
      service_name: { type: 'string', computed: true },
      service_type: { type: 'string', computed: true },
      state: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_vpc_endpoint_service',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      principal_arn: { type: 'string', required: true },
      vpc_endpoint_service_id: { type: 'string', required: true },
    },
    title: 'aws_vpc_endpoint_service_allowed_principal',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      subnet_id: { type: 'string', required: true },
      vpc_endpoint_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_vpc_endpoint_subnet_association',
    type: 'resource',
  },
  {
    properties: {
      cidr_block: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      vpc_id: { type: 'string', required: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_vpc_ipv4_cidr_block_association',
    type: 'resource',
  },
  {
    properties: {
      accept_status: { type: 'string', computed: true },
      auto_accept: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      peer_owner_id: { type: 'string', optional: true, computed: true },
      peer_region: { type: 'string', optional: true, computed: true },
      peer_vpc_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', required: true },
      accepter: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_classic_link_to_remote_vpc: { type: 'boolean', optional: true },
          allow_remote_vpc_dns_resolution: { type: 'boolean', optional: true },
          allow_vpc_to_remote_classic_link: { type: 'boolean', optional: true },
        },
      },
      requester: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_classic_link_to_remote_vpc: { type: 'boolean', optional: true },
          allow_remote_vpc_dns_resolution: { type: 'boolean', optional: true },
          allow_vpc_to_remote_classic_link: { type: 'boolean', optional: true },
        },
      },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_vpc_peering_connection',
    type: 'resource',
  },
  {
    properties: {
      accept_status: { type: 'string', computed: true },
      auto_accept: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      peer_owner_id: { type: 'string', computed: true },
      peer_region: { type: 'string', computed: true },
      peer_vpc_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      vpc_peering_connection_id: { type: 'string', required: true },
      accepter: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_classic_link_to_remote_vpc: { type: 'boolean', optional: true },
          allow_remote_vpc_dns_resolution: { type: 'boolean', optional: true },
          allow_vpc_to_remote_classic_link: { type: 'boolean', optional: true },
        },
      },
      requester: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_classic_link_to_remote_vpc: { type: 'boolean', optional: true },
          allow_remote_vpc_dns_resolution: { type: 'boolean', optional: true },
          allow_vpc_to_remote_classic_link: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_vpc_peering_connection_accepter',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      vpc_peering_connection_id: { type: 'string', required: true },
      accepter: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_classic_link_to_remote_vpc: { type: 'boolean', optional: true },
          allow_remote_vpc_dns_resolution: { type: 'boolean', optional: true },
          allow_vpc_to_remote_classic_link: { type: 'boolean', optional: true },
        },
      },
      requester: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          allow_classic_link_to_remote_vpc: { type: 'boolean', optional: true },
          allow_remote_vpc_dns_resolution: { type: 'boolean', optional: true },
          allow_vpc_to_remote_classic_link: { type: 'boolean', optional: true },
        },
      },
    },
    title: 'aws_vpc_peering_connection_options',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      customer_gateway_configuration: { type: 'string', computed: true },
      customer_gateway_id: { type: 'string', required: true },
      enable_acceleration: { type: 'boolean', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      local_ipv4_network_cidr: {
        type: 'string',
        optional: true,
        computed: true,
      },
      local_ipv6_network_cidr: {
        type: 'string',
        optional: true,
        computed: true,
      },
      remote_ipv4_network_cidr: {
        type: 'string',
        optional: true,
        computed: true,
      },
      remote_ipv6_network_cidr: {
        type: 'string',
        optional: true,
        computed: true,
      },
      routes: { type: 'object', computed: true },
      static_routes_only: { type: 'boolean', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      transit_gateway_attachment_id: { type: 'string', computed: true },
      transit_gateway_id: { type: 'string', optional: true },
      tunnel1_address: { type: 'string', computed: true },
      tunnel1_bgp_asn: { type: 'string', computed: true },
      tunnel1_bgp_holdtime: { type: 'number', computed: true },
      tunnel1_cgw_inside_address: { type: 'string', computed: true },
      tunnel1_dpd_timeout_action: { type: 'string', optional: true },
      tunnel1_dpd_timeout_seconds: { type: 'number', optional: true },
      tunnel1_ike_versions: { type: 'object', optional: true },
      tunnel1_inside_cidr: { type: 'string', optional: true, computed: true },
      tunnel1_inside_ipv6_cidr: {
        type: 'string',
        optional: true,
        computed: true,
      },
      tunnel1_phase1_dh_group_numbers: { type: 'object', optional: true },
      tunnel1_phase1_encryption_algorithms: { type: 'object', optional: true },
      tunnel1_phase1_integrity_algorithms: { type: 'object', optional: true },
      tunnel1_phase1_lifetime_seconds: { type: 'number', optional: true },
      tunnel1_phase2_dh_group_numbers: { type: 'object', optional: true },
      tunnel1_phase2_encryption_algorithms: { type: 'object', optional: true },
      tunnel1_phase2_integrity_algorithms: { type: 'object', optional: true },
      tunnel1_phase2_lifetime_seconds: { type: 'number', optional: true },
      tunnel1_preshared_key: {
        type: 'string',
        optional: true,
        computed: true,
        sensitive: true,
      },
      tunnel1_rekey_fuzz_percentage: { type: 'number', optional: true },
      tunnel1_rekey_margin_time_seconds: { type: 'number', optional: true },
      tunnel1_replay_window_size: { type: 'number', optional: true },
      tunnel1_startup_action: { type: 'string', optional: true },
      tunnel1_vgw_inside_address: { type: 'string', computed: true },
      tunnel2_address: { type: 'string', computed: true },
      tunnel2_bgp_asn: { type: 'string', computed: true },
      tunnel2_bgp_holdtime: { type: 'number', computed: true },
      tunnel2_cgw_inside_address: { type: 'string', computed: true },
      tunnel2_dpd_timeout_action: { type: 'string', optional: true },
      tunnel2_dpd_timeout_seconds: { type: 'number', optional: true },
      tunnel2_ike_versions: { type: 'object', optional: true },
      tunnel2_inside_cidr: { type: 'string', optional: true, computed: true },
      tunnel2_inside_ipv6_cidr: {
        type: 'string',
        optional: true,
        computed: true,
      },
      tunnel2_phase1_dh_group_numbers: { type: 'object', optional: true },
      tunnel2_phase1_encryption_algorithms: { type: 'object', optional: true },
      tunnel2_phase1_integrity_algorithms: { type: 'object', optional: true },
      tunnel2_phase1_lifetime_seconds: { type: 'number', optional: true },
      tunnel2_phase2_dh_group_numbers: { type: 'object', optional: true },
      tunnel2_phase2_encryption_algorithms: { type: 'object', optional: true },
      tunnel2_phase2_integrity_algorithms: { type: 'object', optional: true },
      tunnel2_phase2_lifetime_seconds: { type: 'number', optional: true },
      tunnel2_preshared_key: {
        type: 'string',
        optional: true,
        computed: true,
        sensitive: true,
      },
      tunnel2_rekey_fuzz_percentage: { type: 'number', optional: true },
      tunnel2_rekey_margin_time_seconds: { type: 'number', optional: true },
      tunnel2_replay_window_size: { type: 'number', optional: true },
      tunnel2_startup_action: { type: 'string', optional: true },
      tunnel2_vgw_inside_address: { type: 'string', computed: true },
      tunnel_inside_ip_version: {
        type: 'string',
        optional: true,
        computed: true,
      },
      type: { type: 'string', required: true },
      vgw_telemetry: { type: 'object', computed: true },
      vpn_gateway_id: { type: 'string', optional: true },
    },
    title: 'aws_vpn_connection',
    type: 'resource',
  },
  {
    properties: {
      destination_cidr_block: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      vpn_connection_id: { type: 'string', required: true },
    },
    title: 'aws_vpn_connection_route',
    type: 'resource',
  },
  {
    properties: {
      amazon_side_asn: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_vpn_gateway',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      vpc_id: { type: 'string', required: true },
      vpn_gateway_id: { type: 'string', required: true },
    },
    title: 'aws_vpn_gateway_attachment',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      route_table_id: { type: 'string', required: true },
      vpn_gateway_id: { type: 'string', required: true },
    },
    title: 'aws_vpn_gateway_route_propagation',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      byte_match_tuples: {
        nesting_mode: 'set',
        properties: {
          positional_constraint: { type: 'string', required: true },
          target_string: { type: 'string', optional: true },
          text_transformation: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_waf_byte_match_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      geo_match_constraint: {
        nesting_mode: 'set',
        properties: {
          type: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_waf_geo_match_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      ip_set_descriptors: {
        nesting_mode: 'set',
        properties: {
          type: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_waf_ipset',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      rate_key: { type: 'string', required: true },
      rate_limit: { type: 'number', required: true },
      tags: { type: 'object', optional: true },
      predicates: {
        nesting_mode: 'set',
        properties: {
          data_id: { type: 'string', required: true },
          negated: { type: 'boolean', required: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_waf_rate_based_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      regex_match_tuple: {
        nesting_mode: 'set',
        properties: {
          regex_pattern_set_id: { type: 'string', required: true },
          text_transformation: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_waf_regex_match_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      regex_pattern_strings: { type: 'object', optional: true },
    },
    title: 'aws_waf_regex_pattern_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      predicates: {
        nesting_mode: 'set',
        properties: {
          data_id: { type: 'string', required: true },
          negated: { type: 'boolean', required: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_waf_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      activated_rule: {
        nesting_mode: 'set',
        properties: {
          priority: { type: 'number', required: true },
          rule_id: { type: 'string', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_waf_rule_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      size_constraints: {
        nesting_mode: 'set',
        properties: {
          comparison_operator: { type: 'string', required: true },
          size: { type: 'number', required: true },
          text_transformation: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_waf_size_constraint_set',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      sql_injection_match_tuples: {
        nesting_mode: 'set',
        properties: { text_transformation: { type: 'string', required: true } },
      },
    },
    title: 'aws_waf_sql_injection_match_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      default_action: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { type: { type: 'string', required: true } },
      },
      logging_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { log_destination: { type: 'string', required: true } },
      },
      rules: {
        nesting_mode: 'set',
        properties: {
          priority: { type: 'number', required: true },
          rule_id: { type: 'string', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_waf_web_acl',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      xss_match_tuples: {
        nesting_mode: 'set',
        properties: { text_transformation: { type: 'string', required: true } },
      },
    },
    title: 'aws_waf_xss_match_set',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      byte_match_tuples: {
        nesting_mode: 'set',
        properties: {
          positional_constraint: { type: 'string', required: true },
          target_string: { type: 'string', optional: true },
          text_transformation: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_wafregional_byte_match_set',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      geo_match_constraint: {
        nesting_mode: 'set',
        properties: {
          type: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_wafregional_geo_match_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      ip_set_descriptor: {
        nesting_mode: 'set',
        properties: {
          type: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_wafregional_ipset',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      rate_key: { type: 'string', required: true },
      rate_limit: { type: 'number', required: true },
      tags: { type: 'object', optional: true },
      predicate: {
        nesting_mode: 'set',
        properties: {
          data_id: { type: 'string', required: true },
          negated: { type: 'boolean', required: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_wafregional_rate_based_rule',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      regex_match_tuple: {
        nesting_mode: 'set',
        properties: {
          regex_pattern_set_id: { type: 'string', required: true },
          text_transformation: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_wafregional_regex_match_set',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      regex_pattern_strings: { type: 'object', optional: true },
    },
    title: 'aws_wafregional_regex_pattern_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      predicate: {
        nesting_mode: 'set',
        properties: {
          data_id: { type: 'string', required: true },
          negated: { type: 'boolean', required: true },
          type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_wafregional_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      activated_rule: {
        nesting_mode: 'set',
        properties: {
          priority: { type: 'number', required: true },
          rule_id: { type: 'string', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_wafregional_rule_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      size_constraints: {
        nesting_mode: 'set',
        properties: {
          comparison_operator: { type: 'string', required: true },
          size: { type: 'number', required: true },
          text_transformation: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_wafregional_size_constraint_set',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      sql_injection_match_tuple: {
        nesting_mode: 'set',
        properties: { text_transformation: { type: 'string', required: true } },
      },
    },
    title: 'aws_wafregional_sql_injection_match_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      metric_name: { type: 'string', required: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      default_action: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: { type: { type: 'string', required: true } },
      },
      logging_configuration: {
        nesting_mode: 'list',
        max_items: 1,
        properties: { log_destination: { type: 'string', required: true } },
      },
      rule: {
        nesting_mode: 'set',
        properties: {
          priority: { type: 'number', required: true },
          rule_id: { type: 'string', required: true },
          type: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_wafregional_web_acl',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      resource_arn: { type: 'string', required: true },
      web_acl_id: { type: 'string', required: true },
    },
    title: 'aws_wafregional_web_acl_association',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      xss_match_tuple: {
        nesting_mode: 'set',
        properties: { text_transformation: { type: 'string', required: true } },
      },
    },
    title: 'aws_wafregional_xss_match_set',
    type: 'resource',
  },
  {
    properties: {
      addresses: { type: 'object', optional: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address_version: { type: 'string', required: true },
      lock_token: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      scope: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_wafv2_ip_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      lock_token: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      scope: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      regular_expression: {
        nesting_mode: 'set',
        max_items: 10,
        properties: { regex_string: { type: 'string', required: true } },
      },
    },
    title: 'aws_wafv2_regex_pattern_set',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      capacity: { type: 'number', required: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      lock_token: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      scope: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      rule: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          priority: { type: 'number', required: true },
        },
      },
      visibility_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          cloudwatch_metrics_enabled: { type: 'boolean', required: true },
          metric_name: { type: 'string', required: true },
          sampled_requests_enabled: { type: 'boolean', required: true },
        },
      },
    },
    title: 'aws_wafv2_rule_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      capacity: { type: 'number', computed: true },
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      lock_token: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      scope: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      default_action: {
        nesting_mode: 'list',
        block: {
          block_types: {
            allow: { nesting_mode: 'list', block: {}, max_items: 1 },
            block: { nesting_mode: 'list', block: {}, max_items: 1 },
          },
        },
        min_items: 1,
        max_items: 1,
      },
      rule: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          priority: { type: 'number', required: true },
        },
      },
      visibility_config: {
        nesting_mode: 'list',
        min_items: 1,
        max_items: 1,
        properties: {
          cloudwatch_metrics_enabled: { type: 'boolean', required: true },
          metric_name: { type: 'string', required: true },
          sampled_requests_enabled: { type: 'boolean', required: true },
        },
      },
    },
    title: 'aws_wafv2_web_acl',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      resource_arn: { type: 'string', required: true },
      web_acl_arn: { type: 'string', required: true },
    },
    title: 'aws_wafv2_web_acl_association',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      log_destination_configs: {
        type: 'object',
        description: 'AWS Kinesis Firehose Delivery Stream ARNs',
        required: true,
      },
      resource_arn: {
        type: 'string',
        description: 'AWS WebACL ARN',
        required: true,
      },
      redacted_fields: {
        nesting_mode: 'list',
        block: {
          block_types: {
            all_query_arguments: {
              nesting_mode: 'list',
              block: {},
              max_items: 1,
            },
            body: { nesting_mode: 'list', block: {}, max_items: 1 },
            method: { nesting_mode: 'list', block: {}, max_items: 1 },
            query_string: { nesting_mode: 'list', block: {}, max_items: 1 },
            single_header: {
              nesting_mode: 'list',
              block: {
                attributes: { name: { type: 'string', required: true } },
              },
              max_items: 1,
            },
            single_query_argument: {
              nesting_mode: 'list',
              block: {
                attributes: { name: { type: 'string', required: true } },
              },
              max_items: 1,
            },
            uri_path: { nesting_mode: 'list', block: {}, max_items: 1 },
          },
        },
        max_items: 100,
      },
    },
    title: 'aws_wafv2_web_acl_logging_configuration',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      audit_stream_arn: { type: 'string', optional: true },
      company_code: { type: 'string', computed: true },
      created_time: { type: 'string', computed: true },
      device_ca_certificate: { type: 'string', optional: true },
      display_name: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_time: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      optimize_for_end_user_location: { type: 'boolean', optional: true },
      identity_provider: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          saml_metadata: { type: 'string', required: true },
          type: { type: 'string', required: true },
        },
      },
      network: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          security_group_ids: { type: 'object', required: true },
          subnet_ids: { type: 'object', required: true },
          vpc_id: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_worklink_fleet',
    type: 'resource',
  },
  {
    properties: {
      certificate: { type: 'string', required: true },
      display_name: { type: 'string', optional: true },
      fleet_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      website_ca_id: { type: 'string', computed: true },
    },
    title: 'aws_worklink_website_certificate_authority_association',
    type: 'resource',
  },
  {
    properties: {
      alias: { type: 'string', computed: true },
      customer_user_name: { type: 'string', computed: true },
      directory_id: { type: 'string', required: true },
      directory_name: { type: 'string', computed: true },
      directory_type: { type: 'string', computed: true },
      dns_ip_addresses: { type: 'object', computed: true },
      iam_role_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_group_ids: { type: 'object', optional: true, computed: true },
      registration_code: { type: 'string', computed: true },
      subnet_ids: { type: 'object', optional: true, computed: true },
      tags: { type: 'object', optional: true },
      workspace_security_group_id: { type: 'string', computed: true },
      self_service_permissions: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          change_compute_type: { type: 'boolean', optional: true },
          increase_volume_size: { type: 'boolean', optional: true },
          rebuild_workspace: { type: 'boolean', optional: true },
          restart_workspace: { type: 'boolean', optional: true },
          switch_running_mode: { type: 'boolean', optional: true },
        },
      },
      workspace_access_properties: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          device_type_android: { type: 'string', optional: true },
          device_type_chromeos: { type: 'string', optional: true },
          device_type_ios: { type: 'string', optional: true },
          device_type_osx: { type: 'string', optional: true },
          device_type_web: { type: 'string', optional: true },
          device_type_windows: { type: 'string', optional: true },
          device_type_zeroclient: { type: 'string', optional: true },
        },
      },
      workspace_creation_properties: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          custom_security_group_id: { type: 'string', optional: true },
          default_ou: { type: 'string', optional: true },
          enable_internet_access: { type: 'boolean', optional: true },
          enable_maintenance_mode: { type: 'boolean', optional: true },
          user_enabled_as_local_administrator: {
            type: 'boolean',
            optional: true,
          },
        },
      },
    },
    title: 'aws_workspaces_directory',
    type: 'resource',
  },
  {
    properties: {
      description: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      rules: {
        nesting_mode: 'set',
        properties: {
          description: { type: 'string', optional: true },
          source: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_workspaces_ip_group',
    type: 'resource',
  },
  {
    properties: {
      bundle_id: { type: 'string', required: true },
      computer_name: { type: 'string', computed: true },
      directory_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', computed: true },
      root_volume_encryption_enabled: { type: 'boolean', optional: true },
      state: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      user_name: { type: 'string', required: true },
      user_volume_encryption_enabled: { type: 'boolean', optional: true },
      volume_encryption_key: { type: 'string', optional: true },
      timeouts: {
        nesting_mode: 'single',
        properties: {
          create: { type: 'string', optional: true },
          delete: { type: 'string', optional: true },
          update: { type: 'string', optional: true },
        },
      },
      workspace_properties: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          compute_type_name: { type: 'string', optional: true },
          root_volume_size_gib: { type: 'number', optional: true },
          running_mode: { type: 'string', optional: true },
          running_mode_auto_stop_timeout_in_minutes: {
            type: 'number',
            optional: true,
            computed: true,
          },
          user_volume_size_gib: { type: 'number', optional: true },
        },
      },
    },
    title: 'aws_workspaces_workspace',
    type: 'resource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      key_id: { type: 'string', optional: true },
      type: { type: 'string', required: true },
    },
    title: 'aws_xray_encryption_config',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      filter_expression: { type: 'string', required: true },
      group_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_xray_group',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      attributes: { type: 'object', optional: true },
      fixed_rate: { type: 'number', required: true },
      host: { type: 'string', required: true },
      http_method: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      priority: { type: 'number', required: true },
      reservoir_size: { type: 'number', required: true },
      resource_arn: { type: 'string', required: true },
      rule_name: { type: 'string', optional: true },
      service_name: { type: 'string', required: true },
      service_type: { type: 'string', required: true },
      tags: { type: 'object', optional: true },
      url_path: { type: 'string', required: true },
      version: { type: 'number', required: true },
    },
    title: 'aws_xray_sampling_rule',
    type: 'resource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      key_types: { type: 'object', optional: true },
      most_recent: { type: 'boolean', optional: true },
      statuses: { type: ['array', 'string'], optional: true },
      tags: { type: 'object', optional: true, computed: true },
      types: { type: ['array', 'string'], optional: true },
    },
    title: 'aws_acm_certificate',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      certificate: { type: 'string', computed: true },
      certificate_authority_arn: { type: 'string', required: true },
      certificate_chain: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_acmpca_certificate',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      certificate: { type: 'string', computed: true },
      certificate_chain: { type: 'string', computed: true },
      certificate_signing_request: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      not_after: { type: 'string', computed: true },
      not_before: { type: 'string', computed: true },
      serial: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      type: { type: 'string', computed: true },
      revocation_configuration: {
        nesting_mode: 'list',
        block: {
          block_types: {
            crl_configuration: {
              nesting_mode: 'list',
              block: {
                attributes: {
                  custom_cname: { type: 'string', computed: true },
                  enabled: { type: 'bool', computed: true },
                  expiration_in_days: { type: 'number', computed: true },
                  s3_bucket_name: { type: 'string', computed: true },
                },
              },
            },
          },
        },
      },
    },
    title: 'aws_acmpca_certificate_authority',
    type: 'datasource',
  },
  {
    properties: {
      access_logs: {
        type: [
          'array',
          ['object', { bucket: 'string', enabled: 'bool', prefix: 'string' }],
        ],
        computed: true,
      },
      arn: { type: 'string', optional: true, computed: true },
      arn_suffix: { type: 'string', computed: true },
      customer_owned_ipv4_pool: { type: 'string', computed: true },
      dns_name: { type: 'string', computed: true },
      drop_invalid_header_fields: { type: 'boolean', computed: true },
      enable_deletion_protection: { type: 'boolean', computed: true },
      enable_http2: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      idle_timeout: { type: 'number', computed: true },
      internal: { type: 'boolean', computed: true },
      ip_address_type: { type: 'string', computed: true },
      load_balancer_type: { type: 'string', computed: true },
      name: { type: 'string', optional: true, computed: true },
      security_groups: { type: 'object', computed: true },
      subnet_mapping: { type: 'object', computed: true },
      subnets: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', computed: true },
      zone_id: { type: 'string', computed: true },
    },
    title: 'aws_alb',
    type: 'datasource',
  },
  {
    properties: {
      alpn_policy: { type: 'string', computed: true },
      arn: { type: 'string', optional: true, computed: true },
      certificate_arn: { type: 'string', computed: true },
      default_action: {
        type: [
          'array',
          [
            'object',
            {
              authenticate_cognito: [
                'list',
                [
                  'object',
                  {
                    authentication_request_extra_params: ['map', 'string'],
                    on_unauthenticated_request: 'string',
                    scope: 'string',
                    session_cookie_name: 'string',
                    session_timeout: 'number',
                    user_pool_arn: 'string',
                    user_pool_client_id: 'string',
                    user_pool_domain: 'string',
                  },
                ],
              ],
              authenticate_oidc: [
                'list',
                [
                  'object',
                  {
                    authentication_request_extra_params: ['map', 'string'],
                    authorization_endpoint: 'string',
                    client_id: 'string',
                    client_secret: 'string',
                    issuer: 'string',
                    on_unauthenticated_request: 'string',
                    scope: 'string',
                    session_cookie_name: 'string',
                    session_timeout: 'number',
                    token_endpoint: 'string',
                    user_info_endpoint: 'string',
                  },
                ],
              ],
              fixed_response: [
                'list',
                [
                  'object',
                  {
                    content_type: 'string',
                    message_body: 'string',
                    status_code: 'string',
                  },
                ],
              ],
              forward: [
                'list',
                [
                  'object',
                  {
                    stickiness: [
                      'list',
                      ['object', { duration: 'number', enabled: 'bool' }],
                    ],
                    target_group: [
                      'set',
                      ['object', { arn: 'string', weight: 'number' }],
                    ],
                  },
                ],
              ],
              order: 'number',
              redirect: [
                'list',
                [
                  'object',
                  {
                    host: 'string',
                    path: 'string',
                    port: 'string',
                    protocol: 'string',
                    query: 'string',
                    status_code: 'string',
                  },
                ],
              ],
              target_group_arn: 'string',
              type: 'string',
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      load_balancer_arn: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true, computed: true },
      protocol: { type: 'string', computed: true },
      ssl_policy: { type: 'string', computed: true },
    },
    title: 'aws_alb_listener',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      arn_suffix: { type: 'string', computed: true },
      deregistration_delay: { type: 'number', computed: true },
      health_check: {
        type: [
          'array',
          [
            'object',
            {
              enabled: 'bool',
              healthy_threshold: 'number',
              interval: 'number',
              matcher: 'string',
              path: 'string',
              port: 'string',
              protocol: 'string',
              timeout: 'number',
              unhealthy_threshold: 'number',
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      lambda_multi_value_headers_enabled: { type: 'boolean', computed: true },
      load_balancing_algorithm_type: { type: 'string', computed: true },
      name: { type: 'string', optional: true, computed: true },
      port: { type: 'number', computed: true },
      preserve_client_ip: { type: 'string', computed: true },
      protocol: { type: 'string', computed: true },
      protocol_version: { type: 'string', computed: true },
      proxy_protocol_v2: { type: 'boolean', computed: true },
      slow_start: { type: 'number', computed: true },
      stickiness: {
        type: [
          'array',
          [
            'object',
            { cookie_duration: 'number', enabled: 'bool', type: 'string' },
          ],
        ],
        computed: true,
      },
      tags: { type: 'object', optional: true, computed: true },
      target_type: { type: 'string', computed: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_alb_target_group',
    type: 'datasource',
  },
  {
    properties: {
      architecture: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      block_device_mappings: { type: 'object', computed: true },
      creation_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      ena_support: { type: 'boolean', computed: true },
      executable_users: { type: ['array', 'string'], optional: true },
      hypervisor: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_id: { type: 'string', computed: true },
      image_location: { type: 'string', computed: true },
      image_owner_alias: { type: 'string', computed: true },
      image_type: { type: 'string', computed: true },
      kernel_id: { type: 'string', computed: true },
      most_recent: { type: 'boolean', optional: true },
      name: { type: 'string', computed: true },
      name_regex: { type: 'string', optional: true },
      owner_id: { type: 'string', computed: true },
      owners: { type: ['array', 'string'], required: true },
      platform: { type: 'string', computed: true },
      platform_details: { type: 'string', computed: true },
      product_codes: { type: 'object', computed: true },
      public: { type: 'boolean', computed: true },
      ramdisk_id: { type: 'string', computed: true },
      root_device_name: { type: 'string', computed: true },
      root_device_type: { type: 'string', computed: true },
      root_snapshot_id: { type: 'string', computed: true },
      sriov_net_support: { type: 'string', computed: true },
      state: { type: 'string', computed: true },
      state_reason: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      usage_operation: { type: 'string', computed: true },
      virtualization_type: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ami',
    type: 'datasource',
  },
  {
    properties: {
      executable_users: { type: ['array', 'string'], optional: true },
      id: { type: 'string', optional: true, computed: true },
      ids: { type: ['array', 'string'], computed: true },
      name_regex: { type: 'string', optional: true },
      owners: { type: ['array', 'string'], required: true },
      sort_ascending: { type: 'boolean', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ami_ids',
    type: 'datasource',
  },
  {
    properties: {
      created_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      enabled: { type: 'boolean', computed: true },
      id: { type: 'string', required: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      value: { type: 'string', computed: true, sensitive: true },
    },
    title: 'aws_api_gateway_api_key',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_arn: { type: 'string', computed: true },
      certificate_name: { type: 'string', computed: true },
      certificate_upload_date: { type: 'string', computed: true },
      cloudfront_domain_name: { type: 'string', computed: true },
      cloudfront_zone_id: { type: 'string', computed: true },
      domain_name: { type: 'string', required: true },
      endpoint_configuration: {
        type: ['array', ['object', { types: ['list', 'string'] }]],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      regional_certificate_arn: { type: 'string', computed: true },
      regional_certificate_name: { type: 'string', computed: true },
      regional_domain_name: { type: 'string', computed: true },
      regional_zone_id: { type: 'string', computed: true },
      security_policy: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_api_gateway_domain_name',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      parent_id: { type: 'string', computed: true },
      path: { type: 'string', required: true },
      path_part: { type: 'string', computed: true },
      rest_api_id: { type: 'string', required: true },
    },
    title: 'aws_api_gateway_resource',
    type: 'datasource',
  },
  {
    properties: {
      api_key_source: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      binary_media_types: { type: ['array', 'string'], computed: true },
      description: { type: 'string', computed: true },
      endpoint_configuration: {
        type: [
          'array',
          [
            'object',
            { types: ['list', 'string'], vpc_endpoint_ids: ['set', 'string'] },
          ],
        ],
        computed: true,
      },
      execution_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      minimum_compression_size: { type: 'number', computed: true },
      name: { type: 'string', required: true },
      policy: { type: 'string', computed: true },
      root_resource_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_api_gateway_rest_api',
    type: 'datasource',
  },
  {
    properties: {
      description: { type: 'string', computed: true },
      id: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      status: { type: 'string', computed: true },
      status_message: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      target_arns: { type: 'object', computed: true },
    },
    title: 'aws_api_gateway_vpc_link',
    type: 'datasource',
  },
  {
    properties: {
      api_endpoint: { type: 'string', computed: true },
      api_id: { type: 'string', required: true },
      api_key_selection_expression: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      cors_configuration: {
        type: [
          'array',
          [
            'object',
            {
              allow_credentials: 'bool',
              allow_headers: ['set', 'string'],
              allow_methods: ['set', 'string'],
              allow_origins: ['set', 'string'],
              expose_headers: ['set', 'string'],
              max_age: 'number',
            },
          ],
        ],
        computed: true,
      },
      description: { type: 'string', computed: true },
      disable_execute_api_endpoint: { type: 'boolean', computed: true },
      execution_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      protocol_type: { type: 'string', computed: true },
      route_selection_expression: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      version: { type: 'string', computed: true },
    },
    title: 'aws_apigatewayv2_api',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      name: { type: 'string', optional: true },
      protocol_type: { type: 'string', optional: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_apigatewayv2_apis',
    type: 'datasource',
  },
  {
    properties: {
      account: { type: 'string', computed: true },
      arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      partition: { type: 'string', computed: true },
      region: { type: 'string', computed: true },
      resource: { type: 'string', computed: true },
      service: { type: 'string', computed: true },
    },
    title: 'aws_arn',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', computed: true },
      default_cooldown: { type: 'number', computed: true },
      desired_capacity: { type: 'number', computed: true },
      health_check_grace_period: { type: 'number', computed: true },
      health_check_type: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      launch_configuration: { type: 'string', computed: true },
      launch_template: {
        type: [
          'array',
          ['object', { id: 'string', name: 'string', version: 'string' }],
        ],
        computed: true,
      },
      load_balancers: { type: 'object', computed: true },
      max_size: { type: 'number', computed: true },
      min_size: { type: 'number', computed: true },
      name: { type: 'string', required: true },
      new_instances_protected_from_scale_in: {
        type: 'boolean',
        computed: true,
      },
      placement_group: { type: 'string', computed: true },
      service_linked_role_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      target_group_arns: { type: 'object', computed: true },
      termination_policies: { type: 'object', computed: true },
      vpc_zone_identifier: { type: 'string', computed: true },
    },
    title: 'aws_autoscaling_group',
    type: 'datasource',
  },
  {
    properties: {
      arns: { type: ['array', 'string'], computed: true },
      id: { type: 'string', optional: true, computed: true },
      names: { type: ['array', 'string'], computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_autoscaling_groups',
    type: 'datasource',
  },
  {
    properties: {
      all_availability_zones: { type: 'boolean', optional: true },
      group_name: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_suffix: { type: 'string', computed: true },
      network_border_group: { type: 'string', computed: true },
      opt_in_status: { type: 'string', computed: true },
      parent_zone_id: { type: 'string', computed: true },
      parent_zone_name: { type: 'string', computed: true },
      region: { type: 'string', computed: true },
      state: { type: 'string', optional: true, computed: true },
      zone_id: { type: 'string', optional: true, computed: true },
      zone_type: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_availability_zone',
    type: 'datasource',
  },
  {
    properties: {
      all_availability_zones: { type: 'boolean', optional: true },
      exclude_names: { type: 'object', optional: true },
      exclude_zone_ids: { type: 'object', optional: true },
      group_names: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      names: { type: ['array', 'string'], computed: true },
      state: { type: 'string', optional: true },
      zone_ids: { type: ['array', 'string'], computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_availability_zones',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      plan_id: { type: 'string', required: true },
      tags: { type: 'object', optional: true, computed: true },
      version: { type: 'string', computed: true },
    },
    title: 'aws_backup_plan',
    type: 'datasource',
  },
  {
    properties: {
      iam_role_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      plan_id: { type: 'string', required: true },
      resources: { type: 'object', computed: true },
      selection_id: { type: 'string', required: true },
    },
    title: 'aws_backup_selection',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_arn: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      recovery_points: { type: 'number', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_backup_vault',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      compute_environment_name: { type: 'string', required: true },
      ecs_cluster_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      service_role: { type: 'string', computed: true },
      state: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      status_reason: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      type: { type: 'string', computed: true },
    },
    title: 'aws_batch_compute_environment',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      compute_environment_order: {
        type: [
          'array',
          ['object', { compute_environment: 'string', order: 'number' }],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      priority: { type: 'number', computed: true },
      state: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      status_reason: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_batch_job_queue',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_billing_service_account',
    type: 'datasource',
  },
  {
    properties: {
      account_id: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      user_id: { type: 'string', computed: true },
    },
    title: 'aws_caller_identity',
    type: 'datasource',
  },
  {
    properties: {
      display_name: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_canonical_user_id',
    type: 'datasource',
  },
  {
    properties: {
      exporting_stack_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      value: { type: 'string', computed: true },
    },
    title: 'aws_cloudformation_export',
    type: 'datasource',
  },
  {
    properties: {
      capabilities: { type: 'object', computed: true },
      description: { type: 'string', computed: true },
      disable_rollback: { type: 'boolean', computed: true },
      iam_role_arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      notification_arns: { type: 'object', computed: true },
      outputs: { type: 'object', computed: true },
      parameters: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      template_body: { type: 'string', computed: true },
      timeout_in_minutes: { type: 'number', computed: true },
    },
    title: 'aws_cloudformation_stack',
    type: 'datasource',
  },
  {
    properties: {
      comment: { type: 'string', computed: true },
      default_ttl: { type: 'number', computed: true },
      etag: { type: 'string', computed: true },
      id: { type: 'string', optional: true },
      max_ttl: { type: 'number', computed: true },
      min_ttl: { type: 'number', computed: true },
      name: { type: 'string', optional: true },
      parameters_in_cache_key_and_forwarded_to_origin: {
        type: [
          'array',
          [
            'object',
            {
              cookies_config: [
                'list',
                [
                  'object',
                  {
                    cookie_behavior: 'string',
                    cookies: ['list', ['object', { items: ['set', 'string'] }]],
                  },
                ],
              ],
              enable_accept_encoding_brotli: 'bool',
              enable_accept_encoding_gzip: 'bool',
              headers_config: [
                'list',
                [
                  'object',
                  {
                    header_behavior: 'string',
                    headers: ['list', ['object', { items: ['set', 'string'] }]],
                  },
                ],
              ],
              query_strings_config: [
                'list',
                [
                  'object',
                  {
                    query_string_behavior: 'string',
                    query_strings: [
                      'list',
                      ['object', { items: ['set', 'string'] }],
                    ],
                  },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_cloudfront_cache_policy',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain_name: { type: 'string', computed: true },
      enabled: { type: 'boolean', computed: true },
      etag: { type: 'string', computed: true },
      hosted_zone_id: { type: 'string', computed: true },
      id: { type: 'string', required: true },
      in_progress_validation_batches: { type: 'number', computed: true },
      last_modified_time: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_cloudfront_distribution',
    type: 'datasource',
  },
  {
    properties: {
      comment: { type: 'string', computed: true },
      cookies_config: {
        type: [
          'array',
          [
            'object',
            {
              cookie_behavior: 'string',
              cookies: ['list', ['object', { items: ['set', 'string'] }]],
            },
          ],
        ],
        computed: true,
      },
      etag: { type: 'string', computed: true },
      headers_config: {
        type: [
          'array',
          [
            'object',
            {
              header_behavior: 'string',
              headers: ['list', ['object', { items: ['set', 'string'] }]],
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true },
      name: { type: 'string', optional: true },
      query_strings_config: {
        type: [
          'array',
          [
            'object',
            {
              query_string_behavior: 'string',
              query_strings: ['list', ['object', { items: ['set', 'string'] }]],
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_cloudfront_origin_request_policy',
    type: 'datasource',
  },
  {
    properties: {
      cluster_certificates: {
        type: [
          'array',
          [
            'object',
            {
              aws_hardware_certificate: 'string',
              cluster_certificate: 'string',
              cluster_csr: 'string',
              hsm_certificate: 'string',
              manufacturer_hardware_certificate: 'string',
            },
          ],
        ],
        computed: true,
      },
      cluster_id: { type: 'string', required: true },
      cluster_state: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      security_group_id: { type: 'string', computed: true },
      subnet_ids: { type: 'object', computed: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_cloudhsm_v2_cluster',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', optional: true },
    },
    title: 'aws_cloudtrail_service_account',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      creation_time: { type: 'number', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      retention_in_days: { type: 'number', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_cloudwatch_log_group',
    type: 'datasource',
  },
  {
    properties: {
      authorization_token: { type: 'string', computed: true },
      domain: { type: 'string', required: true },
      domain_owner: { type: 'string', optional: true, computed: true },
      duration_seconds: { type: 'number', optional: true },
      expiration: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_codeartifact_authorization_token',
    type: 'datasource',
  },
  {
    properties: {
      domain: { type: 'string', required: true },
      domain_owner: { type: 'string', optional: true, computed: true },
      format: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      repository: { type: 'string', required: true },
      repository_endpoint: { type: 'string', computed: true },
    },
    title: 'aws_codeartifact_repository_endpoint',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      clone_url_http: { type: 'string', computed: true },
      clone_url_ssh: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      repository_id: { type: 'string', computed: true },
      repository_name: { type: 'string', required: true },
    },
    title: 'aws_codecommit_repository',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      connection_status: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      provider_type: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_codestarconnections_connection',
    type: 'datasource',
  },
  {
    properties: {
      arns: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_cognito_user_pools',
    type: 'datasource',
  },
  {
    properties: {
      additional_artifacts: { type: 'object', computed: true },
      additional_schema_elements: { type: 'object', computed: true },
      compression: { type: 'string', computed: true },
      format: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      refresh_closed_reports: { type: 'boolean', computed: true },
      report_name: { type: 'string', required: true },
      report_versioning: { type: 'string', computed: true },
      s3_bucket: { type: 'string', computed: true },
      s3_prefix: { type: 'string', computed: true },
      s3_region: { type: 'string', computed: true },
      time_unit: { type: 'string', computed: true },
    },
    title: 'aws_cur_report_definition',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bgp_asn: { type: 'number', computed: true },
      device_name: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      type: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_customer_gateway',
    type: 'datasource',
  },
  {
    properties: {
      allocated_storage: { type: 'number', computed: true },
      availability_zones: { type: ['array', 'string'], computed: true },
      db_cluster_identifier: { type: 'string', optional: true },
      db_cluster_snapshot_arn: { type: 'string', computed: true },
      db_cluster_snapshot_identifier: { type: 'string', optional: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      include_public: { type: 'boolean', optional: true },
      include_shared: { type: 'boolean', optional: true },
      kms_key_id: { type: 'string', computed: true },
      license_model: { type: 'string', computed: true },
      most_recent: { type: 'boolean', optional: true },
      port: { type: 'number', computed: true },
      snapshot_create_time: { type: 'string', computed: true },
      snapshot_type: { type: 'string', optional: true },
      source_db_cluster_snapshot_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      storage_encrypted: { type: 'boolean', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_db_cluster_snapshot',
    type: 'datasource',
  },
  {
    properties: {
      event_categories: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      source_type: { type: 'string', optional: true },
    },
    title: 'aws_db_event_categories',
    type: 'datasource',
  },
  {
    properties: {
      address: { type: 'string', computed: true },
      allocated_storage: { type: 'number', computed: true },
      auto_minor_version_upgrade: { type: 'boolean', computed: true },
      availability_zone: { type: 'string', computed: true },
      backup_retention_period: { type: 'number', computed: true },
      ca_cert_identifier: { type: 'string', computed: true },
      db_cluster_identifier: { type: 'string', computed: true },
      db_instance_arn: { type: 'string', computed: true },
      db_instance_class: { type: 'string', computed: true },
      db_instance_identifier: { type: 'string', required: true },
      db_instance_port: { type: 'number', computed: true },
      db_name: { type: 'string', computed: true },
      db_parameter_groups: { type: ['array', 'string'], computed: true },
      db_security_groups: { type: ['array', 'string'], computed: true },
      db_subnet_group: { type: 'string', computed: true },
      enabled_cloudwatch_logs_exports: {
        type: ['array', 'string'],
        computed: true,
      },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      hosted_zone_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      iops: { type: 'number', computed: true },
      kms_key_id: { type: 'string', computed: true },
      license_model: { type: 'string', computed: true },
      master_username: { type: 'string', computed: true },
      monitoring_interval: { type: 'number', computed: true },
      monitoring_role_arn: { type: 'string', computed: true },
      multi_az: { type: 'boolean', computed: true },
      option_group_memberships: { type: ['array', 'string'], computed: true },
      port: { type: 'number', computed: true },
      preferred_backup_window: { type: 'string', computed: true },
      preferred_maintenance_window: { type: 'string', computed: true },
      publicly_accessible: { type: 'boolean', computed: true },
      replicate_source_db: { type: 'string', computed: true },
      resource_id: { type: 'string', computed: true },
      storage_encrypted: { type: 'boolean', computed: true },
      storage_type: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      timezone: { type: 'string', computed: true },
      vpc_security_groups: { type: ['array', 'string'], computed: true },
    },
    title: 'aws_db_instance',
    type: 'datasource',
  },
  {
    properties: {
      allocated_storage: { type: 'number', computed: true },
      availability_zone: { type: 'string', computed: true },
      db_instance_identifier: { type: 'string', optional: true },
      db_snapshot_arn: { type: 'string', computed: true },
      db_snapshot_identifier: { type: 'string', optional: true },
      encrypted: { type: 'boolean', computed: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      include_public: { type: 'boolean', optional: true },
      include_shared: { type: 'boolean', optional: true },
      iops: { type: 'number', computed: true },
      kms_key_id: { type: 'string', computed: true },
      license_model: { type: 'string', computed: true },
      most_recent: { type: 'boolean', optional: true },
      option_group_name: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      snapshot_create_time: { type: 'string', computed: true },
      snapshot_type: { type: 'string', optional: true },
      source_db_snapshot_identifier: { type: 'string', computed: true },
      source_region: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      storage_type: { type: 'string', computed: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_db_snapshot',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      status: { type: 'string', computed: true },
      subnet_ids: { type: 'object', computed: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_db_subnet_group',
    type: 'datasource',
  },
  {
    properties: {
      access_url: { type: 'string', computed: true },
      alias: { type: 'string', computed: true },
      connect_settings: {
        type: [
          'array',
          [
            'object',
            {
              availability_zones: ['set', 'string'],
              connect_ips: ['set', 'string'],
              customer_dns_ips: ['set', 'string'],
              customer_username: 'string',
              subnet_ids: ['set', 'string'],
              vpc_id: 'string',
            },
          ],
        ],
        computed: true,
      },
      description: { type: 'string', computed: true },
      directory_id: { type: 'string', required: true },
      dns_ip_addresses: { type: 'object', computed: true },
      edition: { type: 'string', computed: true },
      enable_sso: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      security_group_id: { type: 'string', computed: true },
      short_name: { type: 'string', computed: true },
      size: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      type: { type: 'string', computed: true },
      vpc_settings: {
        type: [
          'array',
          [
            'object',
            {
              availability_zones: ['set', 'string'],
              subnet_ids: ['set', 'string'],
              vpc_id: 'string',
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_directory_service_directory',
    type: 'datasource',
  },
  {
    properties: {
      engine: { type: 'string', optional: true },
      engine_description: { type: 'string', computed: true },
      exportable_log_types: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      parameter_group_family: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_versions: { type: ['array', 'string'], optional: true },
      supports_log_exports_to_cloudwatch: { type: 'boolean', computed: true },
      valid_upgrade_targets: { type: 'object', computed: true },
      version: { type: 'string', optional: true, computed: true },
      version_description: { type: 'string', computed: true },
    },
    title: 'aws_docdb_engine_version',
    type: 'datasource',
  },
  {
    properties: {
      availability_zones: { type: ['array', 'string'], computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_class: { type: 'string', optional: true, computed: true },
      license_model: { type: 'string', optional: true },
      preferred_instance_classes: { type: ['array', 'string'], optional: true },
      vpc: { type: 'boolean', optional: true, computed: true },
    },
    title: 'aws_docdb_orderable_db_instance',
    type: 'datasource',
  },
  {
    properties: {
      amazon_side_asn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owner_account_id: { type: 'string', computed: true },
    },
    title: 'aws_dx_gateway',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      attribute: { type: 'object', computed: true },
      billing_mode: { type: 'string', computed: true },
      global_secondary_index: { type: 'object', computed: true },
      hash_key: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      local_secondary_index: { type: 'object', computed: true },
      name: { type: 'string', required: true },
      point_in_time_recovery: {
        type: ['array', ['object', { enabled: 'bool' }]],
        computed: true,
      },
      range_key: { type: 'string', computed: true },
      read_capacity: { type: 'number', computed: true },
      replica: { type: 'object', computed: true },
      stream_arn: { type: 'string', computed: true },
      stream_enabled: { type: 'boolean', computed: true },
      stream_label: { type: 'string', computed: true },
      stream_view_type: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      ttl: { type: 'object', computed: true },
      write_capacity: { type: 'number', computed: true },
      server_side_encryption: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          enabled: { type: 'boolean', computed: true },
          kms_key_arn: { type: 'string', computed: true },
        },
      },
    },
    title: 'aws_dynamodb_table',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      key_arn: { type: 'string', computed: true },
    },
    title: 'aws_ebs_default_kms_key',
    type: 'datasource',
  },
  {
    properties: {
      enabled: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_ebs_encryption_by_default',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      data_encryption_key_id: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      encrypted: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      most_recent: { type: 'boolean', optional: true },
      owner_alias: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      owners: { type: ['array', 'string'], optional: true },
      restorable_by_user_ids: { type: ['array', 'string'], optional: true },
      snapshot_id: { type: 'string', computed: true },
      snapshot_ids: { type: ['array', 'string'], optional: true },
      state: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      volume_id: { type: 'string', computed: true },
      volume_size: { type: 'number', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ebs_snapshot',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: ['array', 'string'], computed: true },
      owners: { type: ['array', 'string'], optional: true },
      restorable_by_user_ids: { type: ['array', 'string'], optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ebs_snapshot_ids',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', computed: true },
      encrypted: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      iops: { type: 'number', computed: true },
      kms_key_id: { type: 'string', computed: true },
      most_recent: { type: 'boolean', optional: true },
      multi_attach_enabled: { type: 'boolean', computed: true },
      outpost_arn: { type: 'string', computed: true },
      size: { type: 'number', computed: true },
      snapshot_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      throughput: { type: 'number', computed: true },
      volume_id: { type: 'string', computed: true },
      volume_type: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ebs_volume',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ebs_volumes',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      local_gateway_route_table_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      pool_cidrs: { type: 'object', computed: true },
      pool_id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_coip_pool',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      pool_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_coip_pools',
    type: 'datasource',
  },
  {
    properties: {
      auto_recovery_supported: { type: 'boolean', computed: true },
      bare_metal: { type: 'boolean', computed: true },
      burstable_performance_supported: { type: 'boolean', computed: true },
      current_generation: { type: 'boolean', computed: true },
      dedicated_hosts_supported: { type: 'boolean', computed: true },
      default_cores: { type: 'number', optional: true, computed: true },
      default_threads_per_core: {
        type: 'number',
        optional: true,
        computed: true,
      },
      default_vcpus: { type: 'number', computed: true },
      ebs_encryption_support: { type: 'string', computed: true },
      ebs_nvme_support: { type: 'string', computed: true },
      ebs_optimized_support: { type: 'string', computed: true },
      ebs_performance_baseline_bandwidth: { type: 'number', computed: true },
      ebs_performance_baseline_iops: { type: 'number', computed: true },
      ebs_performance_baseline_throughput: { type: 'number', computed: true },
      ebs_performance_maximum_bandwidth: { type: 'number', computed: true },
      ebs_performance_maximum_iops: { type: 'number', computed: true },
      ebs_performance_maximum_throughput: { type: 'number', computed: true },
      efa_supported: { type: 'boolean', computed: true },
      ena_support: { type: 'string', computed: true },
      free_tier_eligible: { type: 'boolean', computed: true },
      hibernation_supported: { type: 'boolean', computed: true },
      hypervisor: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_storage_supported: { type: 'boolean', computed: true },
      instance_type: { type: 'string', required: true },
      ipv6_supported: { type: 'boolean', computed: true },
      maximum_ipv4_addresses_per_interface: { type: 'number', computed: true },
      maximum_ipv6_addresses_per_interface: {
        type: 'number',
        optional: true,
        computed: true,
      },
      maximum_network_interfaces: { type: 'number', computed: true },
      memory_size: { type: 'number', computed: true },
      network_performance: { type: 'string', computed: true },
      supported_architectures: { type: ['array', 'string'], computed: true },
      supported_placement_strategies: {
        type: ['array', 'string'],
        computed: true,
      },
      supported_root_device_types: {
        type: ['array', 'string'],
        computed: true,
      },
      supported_usages_classes: { type: ['array', 'string'], computed: true },
      supported_virtualization_types: {
        type: ['array', 'string'],
        computed: true,
      },
      sustained_clock_speed: { type: 'number', computed: true },
      total_fpga_memory: { type: 'number', optional: true, computed: true },
      total_gpu_memory: { type: 'number', optional: true, computed: true },
      total_instance_storage: {
        type: 'number',
        optional: true,
        computed: true,
      },
      valid_cores: { type: ['array', 'number'], computed: true },
      valid_threads_per_core: { type: ['array', 'number'], computed: true },
      fpgas: {
        nesting_mode: 'set',
        properties: {
          count: { type: 'number', computed: true },
          manufacturer: { type: 'string', computed: true },
          memory_size: { type: 'number', computed: true },
          name: { type: 'string', computed: true },
        },
      },
      gpus: {
        nesting_mode: 'set',
        properties: {
          count: { type: 'number', computed: true },
          manufacturer: { type: 'string', computed: true },
          memory_size: { type: 'number', computed: true },
          name: { type: 'string', computed: true },
        },
      },
      inference_accelerators: {
        nesting_mode: 'set',
        properties: {
          count: { type: 'number', computed: true },
          manufacturer: { type: 'string', computed: true },
          name: { type: 'string', computed: true },
        },
      },
      instance_disks: {
        nesting_mode: 'set',
        properties: {
          count: { type: 'number', computed: true },
          size: { type: 'number', computed: true },
          type: { type: 'string', computed: true },
        },
      },
    },
    title: 'aws_ec2_instance_type',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_type: { type: 'string', computed: true },
      location_type: { type: 'string', optional: true },
      preferred_instance_types: { type: ['array', 'string'], optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_instance_type_offering',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      instance_types: { type: 'object', computed: true },
      location_type: { type: 'string', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_instance_type_offerings',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      outpost_arn: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      state: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_local_gateway',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      local_gateway_id: { type: 'string', optional: true, computed: true },
      local_gateway_route_table_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      outpost_arn: { type: 'string', optional: true, computed: true },
      state: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_local_gateway_route_table',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_local_gateway_route_tables',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      local_address: { type: 'string', computed: true },
      local_bgp_asn: { type: 'number', computed: true },
      local_gateway_id: { type: 'string', computed: true },
      local_gateway_virtual_interface_ids: { type: 'object', computed: true },
      peer_address: { type: 'string', computed: true },
      peer_bgp_asn: { type: 'number', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vlan: { type: 'number', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_local_gateway_virtual_interface',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      local_gateway_id: { type: 'string', optional: true, computed: true },
      local_gateway_virtual_interface_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_local_gateway_virtual_interface_group',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      local_gateway_virtual_interface_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_local_gateway_virtual_interface_groups',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_local_gateways',
    type: 'datasource',
  },
  {
    properties: {
      address_family: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      entries: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      max_entries: { type: 'number', computed: true },
      name: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      version: { type: 'number', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_managed_prefix_list',
    type: 'datasource',
  },
  {
    properties: {
      availability_zone: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      instance_type: { type: 'string', optional: true },
      spot_price: { type: 'string', computed: true },
      spot_price_timestamp: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_spot_price',
    type: 'datasource',
  },
  {
    properties: {
      amazon_side_asn: { type: 'number', computed: true },
      arn: { type: 'string', computed: true },
      association_default_route_table_id: { type: 'string', computed: true },
      auto_accept_shared_attachments: { type: 'string', computed: true },
      default_route_table_association: { type: 'string', computed: true },
      default_route_table_propagation: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      dns_support: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      propagation_default_route_table_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpn_ecmp_support: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_transit_gateway',
    type: 'datasource',
  },
  {
    properties: {
      dx_gateway_id: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      transit_gateway_id: { type: 'string', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_transit_gateway_dx_gateway_attachment',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      peer_account_id: { type: 'string', computed: true },
      peer_region: { type: 'string', computed: true },
      peer_transit_gateway_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      transit_gateway_id: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_transit_gateway_peering_attachment',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      default_association_route_table: { type: 'boolean', computed: true },
      default_propagation_route_table: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      transit_gateway_id: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_transit_gateway_route_table',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_ec2_transit_gateway_route_tables',
    type: 'datasource',
  },
  {
    properties: {
      appliance_mode_support: { type: 'string', computed: true },
      dns_support: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_support: { type: 'string', computed: true },
      subnet_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      transit_gateway_id: { type: 'string', computed: true },
      vpc_id: { type: 'string', computed: true },
      vpc_owner_id: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_transit_gateway_vpc_attachment',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      transit_gateway_id: { type: 'string', optional: true },
      vpn_connection_id: { type: 'string', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ec2_transit_gateway_vpn_attachment',
    type: 'datasource',
  },
  {
    properties: {
      authorization_token: { type: 'string', computed: true, sensitive: true },
      expires_at: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      password: { type: 'string', computed: true, sensitive: true },
      proxy_endpoint: { type: 'string', computed: true },
      registry_id: { type: 'string', optional: true },
      user_name: { type: 'string', computed: true },
    },
    title: 'aws_ecr_authorization_token',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      image_digest: { type: 'string', optional: true, computed: true },
      image_pushed_at: { type: 'number', computed: true },
      image_size_in_bytes: { type: 'number', computed: true },
      image_tag: { type: 'string', optional: true },
      image_tags: { type: ['array', 'string'], computed: true },
      registry_id: { type: 'string', optional: true, computed: true },
      repository_name: { type: 'string', required: true },
    },
    title: 'aws_ecr_image',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      encryption_configuration: {
        type: [
          'array',
          ['object', { encryption_type: 'string', kms_key: 'string' }],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      image_scanning_configuration: {
        type: ['array', ['object', { scan_on_push: 'bool' }]],
        computed: true,
      },
      image_tag_mutability: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      registry_id: { type: 'string', optional: true, computed: true },
      repository_url: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_ecr_repository',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cluster_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      pending_tasks_count: { type: 'number', computed: true },
      registered_container_instances_count: { type: 'number', computed: true },
      running_tasks_count: { type: 'number', computed: true },
      setting: { type: 'object', computed: true },
      status: { type: 'string', computed: true },
    },
    title: 'aws_ecs_cluster',
    type: 'datasource',
  },
  {
    properties: {
      container_name: { type: 'string', required: true },
      cpu: { type: 'number', computed: true },
      disable_networking: { type: 'boolean', computed: true },
      docker_labels: { type: 'object', computed: true },
      environment: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image: { type: 'string', computed: true },
      image_digest: { type: 'string', computed: true },
      memory: { type: 'number', computed: true },
      memory_reservation: { type: 'number', computed: true },
      task_definition: { type: 'string', required: true },
    },
    title: 'aws_ecs_container_definition',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cluster_arn: { type: 'string', required: true },
      desired_count: { type: 'number', computed: true },
      id: { type: 'string', optional: true, computed: true },
      launch_type: { type: 'string', computed: true },
      scheduling_strategy: { type: 'string', computed: true },
      service_name: { type: 'string', required: true },
      task_definition: { type: 'string', computed: true },
    },
    title: 'aws_ecs_service',
    type: 'datasource',
  },
  {
    properties: {
      family: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      network_mode: { type: 'string', computed: true },
      revision: { type: 'number', computed: true },
      status: { type: 'string', computed: true },
      task_definition: { type: 'string', required: true },
      task_role_arn: { type: 'string', computed: true },
    },
    title: 'aws_ecs_task_definition',
    type: 'datasource',
  },
  {
    properties: {
      access_point_id: { type: 'string', required: true },
      arn: { type: 'string', computed: true },
      file_system_arn: { type: 'string', computed: true },
      file_system_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      posix_user: {
        type: [
          'array',
          [
            'object',
            { gid: 'number', secondary_gids: ['set', 'number'], uid: 'number' },
          ],
        ],
        computed: true,
      },
      root_directory: {
        type: [
          'array',
          [
            'object',
            {
              creation_info: [
                'list',
                [
                  'object',
                  {
                    owner_gid: 'number',
                    owner_uid: 'number',
                    permissions: 'string',
                  },
                ],
              ],
              path: 'string',
            },
          ],
        ],
        computed: true,
      },
      tags: { type: 'object', optional: true },
    },
    title: 'aws_efs_access_point',
    type: 'datasource',
  },
  {
    properties: {
      arns: { type: 'object', computed: true },
      file_system_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
    },
    title: 'aws_efs_access_points',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zone_id: { type: 'string', computed: true },
      availability_zone_name: { type: 'string', computed: true },
      creation_token: { type: 'string', optional: true, computed: true },
      dns_name: { type: 'string', computed: true },
      encrypted: { type: 'boolean', computed: true },
      file_system_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      lifecycle_policy: {
        type: ['array', ['object', { transition_to_ia: 'string' }]],
        computed: true,
      },
      performance_mode: { type: 'string', computed: true },
      provisioned_throughput_in_mibps: { type: 'number', computed: true },
      size_in_bytes: { type: 'number', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      throughput_mode: { type: 'string', computed: true },
    },
    title: 'aws_efs_file_system',
    type: 'datasource',
  },
  {
    properties: {
      availability_zone_id: { type: 'string', computed: true },
      availability_zone_name: { type: 'string', computed: true },
      dns_name: { type: 'string', computed: true },
      file_system_arn: { type: 'string', computed: true },
      file_system_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', computed: true },
      mount_target_dns_name: { type: 'string', computed: true },
      mount_target_id: { type: 'string', required: true },
      network_interface_id: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      security_groups: { type: 'object', computed: true },
      subnet_id: { type: 'string', computed: true },
    },
    title: 'aws_efs_mount_target',
    type: 'datasource',
  },
  {
    properties: {
      association_id: { type: 'string', computed: true },
      carrier_ip: { type: 'string', computed: true },
      customer_owned_ip: { type: 'string', computed: true },
      customer_owned_ipv4_pool: { type: 'string', computed: true },
      domain: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', computed: true },
      network_interface_id: { type: 'string', computed: true },
      network_interface_owner_id: { type: 'string', computed: true },
      private_dns: { type: 'string', computed: true },
      private_ip: { type: 'string', computed: true },
      public_dns: { type: 'string', computed: true },
      public_ip: { type: 'string', optional: true, computed: true },
      public_ipv4_pool: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_eip',
    type: 'datasource',
  },
  {
    properties: {
      addon_name: { type: 'string', required: true },
      addon_version: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      cluster_name: { type: 'string', required: true },
      created_at: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      modified_at: { type: 'string', computed: true },
      service_account_role_arn: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_eks_addon',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_authority: {
        type: ['array', ['object', { data: 'string' }]],
        computed: true,
      },
      created_at: { type: 'string', computed: true },
      enabled_cluster_log_types: { type: 'object', computed: true },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      identity: {
        type: [
          'array',
          ['object', { oidc: ['list', ['object', { issuer: 'string' }]] }],
        ],
        computed: true,
      },
      kubernetes_network_config: {
        type: ['array', ['object', { service_ipv4_cidr: 'string' }]],
        computed: true,
      },
      name: { type: 'string', required: true },
      platform_version: { type: 'string', computed: true },
      role_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      version: { type: 'string', computed: true },
      vpc_config: {
        type: [
          'array',
          [
            'object',
            {
              cluster_security_group_id: 'string',
              endpoint_private_access: 'bool',
              endpoint_public_access: 'bool',
              public_access_cidrs: ['set', 'string'],
              security_group_ids: ['set', 'string'],
              subnet_ids: ['set', 'string'],
              vpc_id: 'string',
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_eks_cluster',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      token: { type: 'string', computed: true, sensitive: true },
    },
    title: 'aws_eks_cluster_auth',
    type: 'datasource',
  },
  {
    properties: {
      appversion_lifecycle: {
        type: [
          'array',
          [
            'object',
            {
              delete_source_from_s3: 'bool',
              max_age_in_days: 'number',
              max_count: 'number',
              service_role: 'string',
            },
          ],
        ],
        computed: true,
      },
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_elastic_beanstalk_application',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', optional: true },
    },
    title: 'aws_elastic_beanstalk_hosted_zone',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      most_recent: { type: 'boolean', optional: true },
      name: { type: 'string', computed: true },
      name_regex: { type: 'string', required: true },
    },
    title: 'aws_elastic_beanstalk_solution_stack',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zone: { type: 'string', computed: true },
      cache_nodes: {
        type: [
          'array',
          [
            'object',
            {
              address: 'string',
              availability_zone: 'string',
              id: 'string',
              port: 'number',
            },
          ],
        ],
        computed: true,
      },
      cluster_address: { type: 'string', computed: true },
      cluster_id: { type: 'string', required: true },
      configuration_endpoint: { type: 'string', computed: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      maintenance_window: { type: 'string', computed: true },
      node_type: { type: 'string', computed: true },
      notification_topic_arn: { type: 'string', computed: true },
      num_cache_nodes: { type: 'number', computed: true },
      parameter_group_name: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      replication_group_id: { type: 'string', computed: true },
      security_group_ids: { type: 'object', computed: true },
      security_group_names: { type: 'object', computed: true },
      snapshot_retention_limit: { type: 'number', computed: true },
      snapshot_window: { type: 'string', computed: true },
      subnet_group_name: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_elasticache_cluster',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      auth_token_enabled: { type: 'boolean', computed: true },
      automatic_failover_enabled: { type: 'boolean', computed: true },
      configuration_endpoint_address: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      member_clusters: { type: 'object', computed: true },
      multi_az_enabled: { type: 'boolean', computed: true },
      node_type: { type: 'string', computed: true },
      number_cache_clusters: { type: 'number', computed: true },
      port: { type: 'number', computed: true },
      primary_endpoint_address: { type: 'string', computed: true },
      reader_endpoint_address: { type: 'string', computed: true },
      replication_group_description: { type: 'string', computed: true },
      replication_group_id: { type: 'string', required: true },
      snapshot_retention_limit: { type: 'number', computed: true },
      snapshot_window: { type: 'string', computed: true },
    },
    title: 'aws_elasticache_replication_group',
    type: 'datasource',
  },
  {
    properties: {
      access_policies: { type: 'string', computed: true },
      advanced_options: { type: 'object', computed: true },
      advanced_security_options: {
        type: [
          'array',
          [
            'object',
            { enabled: 'bool', internal_user_database_enabled: 'bool' },
          ],
        ],
        computed: true,
      },
      arn: { type: 'string', computed: true },
      cluster_config: {
        type: [
          'array',
          [
            'object',
            {
              dedicated_master_count: 'number',
              dedicated_master_enabled: 'bool',
              dedicated_master_type: 'string',
              instance_count: 'number',
              instance_type: 'string',
              warm_count: 'number',
              warm_enabled: 'bool',
              warm_type: 'string',
              zone_awareness_config: [
                'list',
                ['object', { availability_zone_count: 'number' }],
              ],
              zone_awareness_enabled: 'bool',
            },
          ],
        ],
        computed: true,
      },
      cognito_options: {
        type: [
          'array',
          [
            'object',
            {
              enabled: 'bool',
              identity_pool_id: 'string',
              role_arn: 'string',
              user_pool_id: 'string',
            },
          ],
        ],
        computed: true,
      },
      created: { type: 'boolean', computed: true },
      deleted: { type: 'boolean', computed: true },
      domain_id: { type: 'string', computed: true },
      domain_name: { type: 'string', required: true },
      ebs_options: {
        type: [
          'array',
          [
            'object',
            {
              ebs_enabled: 'bool',
              iops: 'number',
              volume_size: 'number',
              volume_type: 'string',
            },
          ],
        ],
        computed: true,
      },
      elasticsearch_version: { type: 'string', computed: true },
      encryption_at_rest: {
        type: ['array', ['object', { enabled: 'bool', kms_key_id: 'string' }]],
        computed: true,
      },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kibana_endpoint: { type: 'string', computed: true },
      log_publishing_options: { type: 'object', computed: true },
      node_to_node_encryption: {
        type: ['array', ['object', { enabled: 'bool' }]],
        computed: true,
      },
      processing: { type: 'boolean', computed: true },
      snapshot_options: {
        type: [
          'array',
          ['object', { automated_snapshot_start_hour: 'number' }],
        ],
        computed: true,
      },
      tags: { type: 'object', optional: true, computed: true },
      vpc_options: {
        type: [
          'array',
          [
            'object',
            {
              availability_zones: ['set', 'string'],
              security_group_ids: ['set', 'string'],
              subnet_ids: ['set', 'string'],
              vpc_id: 'string',
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_elasticsearch_domain',
    type: 'datasource',
  },
  {
    properties: {
      access_logs: {
        type: [
          'array',
          [
            'object',
            {
              bucket: 'string',
              bucket_prefix: 'string',
              enabled: 'bool',
              interval: 'number',
            },
          ],
        ],
        computed: true,
      },
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', computed: true },
      connection_draining: { type: 'boolean', computed: true },
      connection_draining_timeout: { type: 'number', computed: true },
      cross_zone_load_balancing: { type: 'boolean', computed: true },
      dns_name: { type: 'string', computed: true },
      health_check: {
        type: [
          'array',
          [
            'object',
            {
              healthy_threshold: 'number',
              interval: 'number',
              target: 'string',
              timeout: 'number',
              unhealthy_threshold: 'number',
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      idle_timeout: { type: 'number', computed: true },
      instances: { type: 'object', computed: true },
      internal: { type: 'boolean', computed: true },
      listener: { type: 'object', computed: true },
      name: { type: 'string', required: true },
      security_groups: { type: 'object', computed: true },
      source_security_group: { type: 'string', computed: true },
      source_security_group_id: { type: 'string', computed: true },
      subnets: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      zone_id: { type: 'string', computed: true },
    },
    title: 'aws_elb',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', optional: true },
    },
    title: 'aws_elb_hosted_zone_id',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', optional: true },
    },
    title: 'aws_elb_service_account',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      language: { type: 'string', optional: true },
      python_script: { type: 'string', computed: true },
      scala_code: { type: 'string', computed: true },
      dag_edge: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          source: { type: 'string', required: true },
          target: { type: 'string', required: true },
          target_parameter: { type: 'string', optional: true },
        },
      },
      dag_node: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          id: { type: 'string', required: true },
          line_number: { type: 'number', optional: true },
          node_type: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_glue_script',
    type: 'datasource',
  },
  {
    properties: {
      finding_publishing_frequency: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      service_role_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
    },
    title: 'aws_guardduty_detector',
    type: 'datasource',
  },
  {
    properties: {
      account_alias: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_iam_account_alias',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      group_id: { type: 'string', computed: true },
      group_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      path: { type: 'string', computed: true },
      users: {
        type: [
          'array',
          [
            'object',
            {
              arn: 'string',
              path: 'string',
              user_id: 'string',
              user_name: 'string',
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_iam_group',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      create_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      path: { type: 'string', computed: true },
      role_arn: { type: 'string', computed: true },
      role_id: { type: 'string', computed: true },
      role_name: { type: 'string', computed: true },
    },
    title: 'aws_iam_instance_profile',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      path: { type: 'string', computed: true },
      policy: { type: 'string', computed: true },
      policy_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_iam_policy',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      json: { type: 'string', computed: true },
      override_json: { type: 'string', optional: true },
      override_policy_documents: { type: ['array', 'string'], optional: true },
      policy_id: { type: 'string', optional: true },
      source_json: { type: 'string', optional: true },
      source_policy_documents: { type: ['array', 'string'], optional: true },
      version: { type: 'string', optional: true },
      statement: {
        nesting_mode: 'list',
        properties: {
          actions: { type: 'object', optional: true },
          effect: { type: 'string', optional: true },
          not_actions: { type: 'object', optional: true },
          not_resources: { type: 'object', optional: true },
          resources: { type: 'object', optional: true },
          sid: { type: 'string', optional: true },
        },
      },
    },
    title: 'aws_iam_policy_document',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      assume_role_policy: { type: 'string', computed: true },
      create_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      max_session_duration: { type: 'number', computed: true },
      name: { type: 'string', required: true },
      path: { type: 'string', computed: true },
      permissions_boundary: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      unique_id: { type: 'string', computed: true },
    },
    title: 'aws_iam_role',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_body: { type: 'string', computed: true },
      certificate_chain: { type: 'string', computed: true },
      expiration_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      latest: { type: 'boolean', optional: true },
      name: { type: 'string', optional: true, computed: true },
      name_prefix: { type: 'string', optional: true },
      path: { type: 'string', computed: true },
      path_prefix: { type: 'string', optional: true },
      upload_date: { type: 'string', computed: true },
    },
    title: 'aws_iam_server_certificate',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      path: { type: 'string', computed: true },
      permissions_boundary: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      user_id: { type: 'string', computed: true },
      user_name: { type: 'string', required: true },
    },
    title: 'aws_iam_user',
    type: 'datasource',
  },
  {
    properties: {
      display_name: { type: 'string', computed: true },
      group_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      identity_store_id: { type: 'string', required: true },
      filter: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          attribute_path: { type: 'string', required: true },
          attribute_value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_identitystore_group',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      identity_store_id: { type: 'string', required: true },
      user_id: { type: 'string', optional: true, computed: true },
      user_name: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          attribute_path: { type: 'string', required: true },
          attribute_value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_identitystore_user',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      change_description: { type: 'string', computed: true },
      data: { type: 'string', computed: true },
      date_created: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      encrypted: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      name: { type: 'string', computed: true },
      owner: { type: 'string', computed: true },
      platform: { type: 'string', computed: true },
      supported_os_versions: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      type: { type: 'string', computed: true },
      version: { type: 'string', computed: true },
    },
    title: 'aws_imagebuilder_component',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      date_created: { type: 'string', computed: true },
      date_updated: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      distribution: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_imagebuilder_distribution_configuration',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      build_version_arn: { type: 'string', computed: true },
      date_created: { type: 'string', computed: true },
      distribution_configuration_arn: { type: 'string', computed: true },
      enhanced_image_metadata_enabled: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_recipe_arn: { type: 'string', computed: true },
      image_tests_configuration: {
        type: [
          'array',
          [
            'object',
            { image_tests_enabled: 'bool', timeout_minutes: 'number' },
          ],
        ],
        computed: true,
      },
      infrastructure_configuration_arn: { type: 'string', computed: true },
      name: { type: 'string', computed: true },
      os_version: { type: 'string', computed: true },
      output_resources: {
        type: [
          'array',
          [
            'object',
            {
              amis: [
                'set',
                [
                  'object',
                  {
                    account_id: 'string',
                    description: 'string',
                    image: 'string',
                    name: 'string',
                    region: 'string',
                  },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      platform: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      version: { type: 'string', computed: true },
    },
    title: 'aws_imagebuilder_image',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      date_created: { type: 'string', computed: true },
      date_last_run: { type: 'string', computed: true },
      date_next_run: { type: 'string', computed: true },
      date_updated: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      distribution_configuration_arn: { type: 'string', computed: true },
      enhanced_image_metadata_enabled: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_recipe_arn: { type: 'string', computed: true },
      image_tests_configuration: {
        type: [
          'array',
          [
            'object',
            { image_tests_enabled: 'bool', timeout_minutes: 'number' },
          ],
        ],
        computed: true,
      },
      infrastructure_configuration_arn: { type: 'string', computed: true },
      name: { type: 'string', computed: true },
      platform: { type: 'string', computed: true },
      schedule: {
        type: [
          'array',
          [
            'object',
            {
              pipeline_execution_start_condition: 'string',
              schedule_expression: 'string',
            },
          ],
        ],
        computed: true,
      },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_imagebuilder_image_pipeline',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      block_device_mapping: { type: 'object', computed: true },
      component: {
        type: ['array', ['object', { component_arn: 'string' }]],
        computed: true,
      },
      date_created: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      owner: { type: 'string', computed: true },
      parent_image: { type: 'string', computed: true },
      platform: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      version: { type: 'string', computed: true },
      working_directory: { type: 'string', computed: true },
    },
    title: 'aws_imagebuilder_image_recipe',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      date_created: { type: 'string', computed: true },
      date_updated: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_profile_name: { type: 'string', computed: true },
      instance_types: { type: 'object', computed: true },
      key_pair: { type: 'string', computed: true },
      logging: {
        type: [
          'array',
          [
            'object',
            {
              s3_logs: [
                'list',
                [
                  'object',
                  { s3_bucket_name: 'string', s3_key_prefix: 'string' },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      name: { type: 'string', computed: true },
      resource_tags: { type: 'object', optional: true, computed: true },
      security_group_ids: { type: 'object', computed: true },
      sns_topic_arn: { type: 'string', computed: true },
      subnet_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      terminate_instance_on_failure: { type: 'boolean', computed: true },
    },
    title: 'aws_imagebuilder_infrastructure_configuration',
    type: 'datasource',
  },
  {
    properties: {
      arns: { type: ['array', 'string'], computed: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_inspector_rules_packages',
    type: 'datasource',
  },
  {
    properties: {
      ami: { type: 'string', computed: true },
      arn: { type: 'string', computed: true },
      associate_public_ip_address: { type: 'boolean', computed: true },
      availability_zone: { type: 'string', computed: true },
      credit_specification: {
        type: ['array', ['object', { cpu_credits: 'string' }]],
        computed: true,
      },
      disable_api_termination: { type: 'boolean', computed: true },
      ebs_block_device: { type: 'object', computed: true },
      ebs_optimized: { type: 'boolean', computed: true },
      enclave_options: {
        type: ['array', ['object', { enabled: 'bool' }]],
        computed: true,
      },
      ephemeral_block_device: {
        type: [
          'array',
          [
            'object',
            {
              device_name: 'string',
              no_device: 'bool',
              virtual_name: 'string',
            },
          ],
        ],
        computed: true,
      },
      get_password_data: { type: 'boolean', optional: true },
      get_user_data: { type: 'boolean', optional: true },
      host_id: { type: 'string', computed: true },
      iam_instance_profile: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', optional: true },
      instance_state: { type: 'string', computed: true },
      instance_tags: { type: 'object', optional: true, computed: true },
      instance_type: { type: 'string', computed: true },
      key_name: { type: 'string', computed: true },
      metadata_options: {
        type: [
          'array',
          [
            'object',
            {
              http_endpoint: 'string',
              http_put_response_hop_limit: 'number',
              http_tokens: 'string',
            },
          ],
        ],
        computed: true,
      },
      monitoring: { type: 'boolean', computed: true },
      network_interface_id: { type: 'string', computed: true },
      outpost_arn: { type: 'string', computed: true },
      password_data: { type: 'string', computed: true },
      placement_group: { type: 'string', computed: true },
      private_dns: { type: 'string', computed: true },
      private_ip: { type: 'string', computed: true },
      public_dns: { type: 'string', computed: true },
      public_ip: { type: 'string', computed: true },
      root_block_device: { type: 'object', computed: true },
      secondary_private_ips: { type: 'object', computed: true },
      security_groups: { type: 'object', computed: true },
      source_dest_check: { type: 'boolean', computed: true },
      subnet_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      tenancy: { type: 'string', computed: true },
      user_data: { type: 'string', computed: true },
      user_data_base64: { type: 'string', computed: true },
      vpc_security_group_ids: { type: 'object', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_instance',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: ['array', 'string'], computed: true },
      instance_state_names: { type: 'object', optional: true },
      instance_tags: { type: 'object', optional: true, computed: true },
      private_ips: { type: ['array', 'string'], computed: true },
      public_ips: { type: ['array', 'string'], computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_instances',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      attachments: {
        type: ['array', ['object', { state: 'string', vpc_id: 'string' }]],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      internet_gateway_id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_internet_gateway',
    type: 'datasource',
  },
  {
    properties: {
      endpoint_address: { type: 'string', computed: true },
      endpoint_type: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_iot_endpoint',
    type: 'datasource',
  },
  {
    properties: {
      cidr_blocks: { type: ['array', 'string'], computed: true },
      create_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_cidr_blocks: { type: ['array', 'string'], computed: true },
      regions: { type: 'object', optional: true },
      services: { type: 'object', required: true },
      sync_token: { type: 'number', computed: true },
      url: { type: 'string', optional: true },
    },
    title: 'aws_ip_ranges',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      closed_shards: { type: 'object', computed: true },
      creation_timestamp: { type: 'number', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      open_shards: { type: 'object', computed: true },
      retention_period: { type: 'number', computed: true },
      shard_level_metrics: { type: 'object', computed: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_kinesis_stream',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      creation_timestamp: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      status: { type: 'string', computed: true },
      stream_arn: { type: 'string', required: true },
    },
    title: 'aws_kinesis_stream_consumer',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      target_key_arn: { type: 'string', computed: true },
      target_key_id: { type: 'string', computed: true },
    },
    title: 'aws_kms_alias',
    type: 'datasource',
  },
  {
    properties: {
      ciphertext_blob: { type: 'string', computed: true },
      context: { type: 'object', optional: true },
      id: { type: 'string', optional: true, computed: true },
      key_id: { type: 'string', required: true },
      plaintext: { type: 'string', required: true, sensitive: true },
    },
    title: 'aws_kms_ciphertext',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      aws_account_id: { type: 'string', computed: true },
      creation_date: { type: 'string', computed: true },
      customer_master_key_spec: { type: 'string', computed: true },
      deletion_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      enabled: { type: 'boolean', computed: true },
      expiration_model: { type: 'string', computed: true },
      grant_tokens: { type: ['array', 'string'], optional: true },
      id: { type: 'string', optional: true, computed: true },
      key_id: { type: 'string', required: true },
      key_manager: { type: 'string', computed: true },
      key_state: { type: 'string', computed: true },
      key_usage: { type: 'string', computed: true },
      origin: { type: 'string', computed: true },
      valid_to: { type: 'string', computed: true },
    },
    title: 'aws_kms_key',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      secret: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          context: { type: 'object', optional: true },
          grant_tokens: { type: ['array', 'string'], optional: true },
          name: { type: 'string', required: true },
          payload: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_kms_secret',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      plaintext: { type: 'object', computed: true, sensitive: true },
      secret: {
        nesting_mode: 'set',
        min_items: 1,
        properties: {
          context: { type: 'object', optional: true },
          grant_tokens: { type: ['array', 'string'], optional: true },
          name: { type: 'string', required: true },
          payload: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_kms_secrets',
    type: 'datasource',
  },
  {
    properties: {
      admins: { type: 'object', computed: true },
      catalog_id: { type: 'string', optional: true },
      create_database_default_permissions: {
        type: [
          'array',
          ['object', { permissions: ['set', 'string'], principal: 'string' }],
        ],
        computed: true,
      },
      create_table_default_permissions: {
        type: [
          'array',
          ['object', { permissions: ['set', 'string'], principal: 'string' }],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      trusted_resource_owners: { type: ['array', 'string'], computed: true },
    },
    title: 'aws_lakeformation_data_lake_settings',
    type: 'datasource',
  },
  {
    properties: {
      catalog_id: { type: 'string', optional: true },
      catalog_resource: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      permissions: { type: ['array', 'string'], computed: true },
      permissions_with_grant_option: {
        type: ['array', 'string'],
        computed: true,
      },
      principal: { type: 'string', required: true },
      data_location: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          arn: { type: 'string', required: true },
          catalog_id: { type: 'string', optional: true, computed: true },
        },
      },
      database: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          catalog_id: { type: 'string', optional: true, computed: true },
          name: { type: 'string', required: true },
        },
      },
      table: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          catalog_id: { type: 'string', optional: true, computed: true },
          database_name: { type: 'string', required: true },
          name: { type: 'string', optional: true, computed: true },
          wildcard: { type: 'boolean', optional: true },
        },
      },
      table_with_columns: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          catalog_id: { type: 'string', optional: true, computed: true },
          column_names: { type: ['array', 'string'], optional: true },
          database_name: { type: 'string', required: true },
          excluded_column_names: { type: ['array', 'string'], optional: true },
          name: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_lakeformation_permissions',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      last_modified: { type: 'string', computed: true },
      role_arn: { type: 'string', computed: true },
    },
    title: 'aws_lakeformation_resource',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      function_name: { type: 'string', required: true },
      function_version: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      invoke_arn: { type: 'string', computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_lambda_alias',
    type: 'datasource',
  },
  {
    properties: {
      allowed_publishers: {
        type: [
          'array',
          ['object', { signing_profile_version_arns: ['set', 'string'] }],
        ],
        computed: true,
      },
      arn: { type: 'string', required: true },
      config_id: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_modified: { type: 'string', computed: true },
      policies: {
        type: [
          'array',
          ['object', { untrusted_artifact_on_deployment: 'string' }],
        ],
        computed: true,
      },
    },
    title: 'aws_lambda_code_signing_config',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      code_signing_config_arn: { type: 'string', computed: true },
      dead_letter_config: {
        type: ['array', ['object', { target_arn: 'string' }]],
        computed: true,
      },
      description: { type: 'string', computed: true },
      environment: {
        type: ['array', ['object', { variables: ['map', 'string'] }]],
        computed: true,
      },
      file_system_config: {
        type: [
          'array',
          ['object', { arn: 'string', local_mount_path: 'string' }],
        ],
        computed: true,
      },
      function_name: { type: 'string', required: true },
      handler: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      invoke_arn: { type: 'string', computed: true },
      kms_key_arn: { type: 'string', computed: true },
      last_modified: { type: 'string', computed: true },
      layers: { type: ['array', 'string'], computed: true },
      memory_size: { type: 'number', computed: true },
      qualified_arn: { type: 'string', computed: true },
      qualifier: { type: 'string', optional: true },
      reserved_concurrent_executions: { type: 'number', computed: true },
      role: { type: 'string', computed: true },
      runtime: { type: 'string', computed: true },
      signing_job_arn: { type: 'string', computed: true },
      signing_profile_version_arn: { type: 'string', computed: true },
      source_code_hash: { type: 'string', computed: true },
      source_code_size: { type: 'number', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      timeout: { type: 'number', computed: true },
      tracing_config: {
        type: ['array', ['object', { mode: 'string' }]],
        computed: true,
      },
      version: { type: 'string', computed: true },
      vpc_config: {
        type: [
          'array',
          [
            'object',
            {
              security_group_ids: ['set', 'string'],
              subnet_ids: ['set', 'string'],
              vpc_id: 'string',
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_lambda_function',
    type: 'datasource',
  },
  {
    properties: {
      function_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      input: { type: 'string', required: true },
      qualifier: { type: 'string', optional: true },
      result: { type: 'string', computed: true },
    },
    title: 'aws_lambda_invocation',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      compatible_runtime: { type: 'string', optional: true },
      compatible_runtimes: { type: 'object', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      layer_arn: { type: 'string', computed: true },
      layer_name: { type: 'string', required: true },
      license_info: { type: 'string', computed: true },
      signing_job_arn: { type: 'string', computed: true },
      signing_profile_version_arn: { type: 'string', computed: true },
      source_code_hash: { type: 'string', computed: true },
      source_code_size: { type: 'number', computed: true },
      version: { type: 'number', optional: true, computed: true },
    },
    title: 'aws_lambda_layer_version',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      associate_public_ip_address: { type: 'boolean', computed: true },
      ebs_block_device: { type: 'object', computed: true },
      ebs_optimized: { type: 'boolean', computed: true },
      enable_monitoring: { type: 'boolean', computed: true },
      ephemeral_block_device: { type: 'object', computed: true },
      iam_instance_profile: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_id: { type: 'string', computed: true },
      instance_type: { type: 'string', computed: true },
      key_name: { type: 'string', computed: true },
      metadata_options: {
        type: [
          'array',
          [
            'object',
            {
              http_endpoint: 'string',
              http_put_response_hop_limit: 'number',
              http_tokens: 'string',
            },
          ],
        ],
        computed: true,
      },
      name: { type: 'string', required: true },
      placement_tenancy: { type: 'string', computed: true },
      root_block_device: {
        type: [
          'array',
          [
            'object',
            {
              delete_on_termination: 'bool',
              encrypted: 'bool',
              iops: 'number',
              volume_size: 'number',
              volume_type: 'string',
            },
          ],
        ],
        computed: true,
      },
      security_groups: { type: 'object', computed: true },
      spot_price: { type: 'string', computed: true },
      user_data: { type: 'string', computed: true },
      vpc_classic_link_id: { type: 'string', computed: true },
      vpc_classic_link_security_groups: { type: 'object', computed: true },
    },
    title: 'aws_launch_configuration',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      block_device_mappings: {
        type: [
          'array',
          [
            'object',
            {
              device_name: 'string',
              ebs: [
                'list',
                [
                  'object',
                  {
                    delete_on_termination: 'string',
                    encrypted: 'string',
                    iops: 'number',
                    kms_key_id: 'string',
                    snapshot_id: 'string',
                    throughput: 'number',
                    volume_size: 'number',
                    volume_type: 'string',
                  },
                ],
              ],
              no_device: 'string',
              virtual_name: 'string',
            },
          ],
        ],
        computed: true,
      },
      credit_specification: {
        type: ['array', ['object', { cpu_credits: 'string' }]],
        computed: true,
      },
      default_version: { type: 'number', computed: true },
      description: { type: 'string', computed: true },
      disable_api_termination: { type: 'boolean', computed: true },
      ebs_optimized: { type: 'string', computed: true },
      elastic_gpu_specifications: {
        type: ['array', ['object', { type: 'string' }]],
        computed: true,
      },
      enclave_options: {
        type: ['array', ['object', { enabled: 'bool' }]],
        computed: true,
      },
      hibernation_options: {
        type: ['array', ['object', { configured: 'bool' }]],
        computed: true,
      },
      iam_instance_profile: {
        type: ['array', ['object', { arn: 'string', name: 'string' }]],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      image_id: { type: 'string', computed: true },
      instance_initiated_shutdown_behavior: { type: 'string', computed: true },
      instance_market_options: {
        type: [
          'array',
          [
            'object',
            {
              market_type: 'string',
              spot_options: [
                'list',
                [
                  'object',
                  {
                    block_duration_minutes: 'number',
                    instance_interruption_behavior: 'string',
                    max_price: 'string',
                    spot_instance_type: 'string',
                    valid_until: 'string',
                  },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      instance_type: { type: 'string', computed: true },
      kernel_id: { type: 'string', computed: true },
      key_name: { type: 'string', computed: true },
      latest_version: { type: 'number', computed: true },
      metadata_options: {
        type: [
          'array',
          [
            'object',
            {
              http_endpoint: 'string',
              http_put_response_hop_limit: 'number',
              http_tokens: 'string',
            },
          ],
        ],
        computed: true,
      },
      monitoring: {
        type: ['array', ['object', { enabled: 'bool' }]],
        computed: true,
      },
      name: { type: 'string', optional: true },
      network_interfaces: {
        type: [
          'array',
          [
            'object',
            {
              associate_carrier_ip_address: 'string',
              associate_public_ip_address: 'string',
              delete_on_termination: 'string',
              description: 'string',
              device_index: 'number',
              ipv4_address_count: 'number',
              ipv4_addresses: ['set', 'string'],
              ipv6_address_count: 'number',
              ipv6_addresses: ['set', 'string'],
              network_interface_id: 'string',
              private_ip_address: 'string',
              security_groups: ['set', 'string'],
              subnet_id: 'string',
            },
          ],
        ],
        computed: true,
      },
      placement: {
        type: [
          'array',
          [
            'object',
            {
              affinity: 'string',
              availability_zone: 'string',
              group_name: 'string',
              host_id: 'string',
              partition_number: 'number',
              spread_domain: 'string',
              tenancy: 'string',
            },
          ],
        ],
        computed: true,
      },
      ram_disk_id: { type: 'string', computed: true },
      security_group_names: { type: 'object', computed: true },
      tag_specifications: {
        type: [
          'array',
          ['object', { resource_type: 'string', tags: ['map', 'string'] }],
        ],
        computed: true,
      },
      tags: { type: 'object', optional: true, computed: true },
      user_data: { type: 'string', computed: true },
      vpc_security_group_ids: { type: 'object', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_launch_template',
    type: 'datasource',
  },
  {
    properties: {
      access_logs: {
        type: [
          'array',
          ['object', { bucket: 'string', enabled: 'bool', prefix: 'string' }],
        ],
        computed: true,
      },
      arn: { type: 'string', optional: true, computed: true },
      arn_suffix: { type: 'string', computed: true },
      customer_owned_ipv4_pool: { type: 'string', computed: true },
      dns_name: { type: 'string', computed: true },
      drop_invalid_header_fields: { type: 'boolean', computed: true },
      enable_deletion_protection: { type: 'boolean', computed: true },
      enable_http2: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      idle_timeout: { type: 'number', computed: true },
      internal: { type: 'boolean', computed: true },
      ip_address_type: { type: 'string', computed: true },
      load_balancer_type: { type: 'string', computed: true },
      name: { type: 'string', optional: true, computed: true },
      security_groups: { type: 'object', computed: true },
      subnet_mapping: { type: 'object', computed: true },
      subnets: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', computed: true },
      zone_id: { type: 'string', computed: true },
    },
    title: 'aws_lb',
    type: 'datasource',
  },
  {
    properties: {
      alpn_policy: { type: 'string', computed: true },
      arn: { type: 'string', optional: true, computed: true },
      certificate_arn: { type: 'string', computed: true },
      default_action: {
        type: [
          'array',
          [
            'object',
            {
              authenticate_cognito: [
                'list',
                [
                  'object',
                  {
                    authentication_request_extra_params: ['map', 'string'],
                    on_unauthenticated_request: 'string',
                    scope: 'string',
                    session_cookie_name: 'string',
                    session_timeout: 'number',
                    user_pool_arn: 'string',
                    user_pool_client_id: 'string',
                    user_pool_domain: 'string',
                  },
                ],
              ],
              authenticate_oidc: [
                'list',
                [
                  'object',
                  {
                    authentication_request_extra_params: ['map', 'string'],
                    authorization_endpoint: 'string',
                    client_id: 'string',
                    client_secret: 'string',
                    issuer: 'string',
                    on_unauthenticated_request: 'string',
                    scope: 'string',
                    session_cookie_name: 'string',
                    session_timeout: 'number',
                    token_endpoint: 'string',
                    user_info_endpoint: 'string',
                  },
                ],
              ],
              fixed_response: [
                'list',
                [
                  'object',
                  {
                    content_type: 'string',
                    message_body: 'string',
                    status_code: 'string',
                  },
                ],
              ],
              forward: [
                'list',
                [
                  'object',
                  {
                    stickiness: [
                      'list',
                      ['object', { duration: 'number', enabled: 'bool' }],
                    ],
                    target_group: [
                      'set',
                      ['object', { arn: 'string', weight: 'number' }],
                    ],
                  },
                ],
              ],
              order: 'number',
              redirect: [
                'list',
                [
                  'object',
                  {
                    host: 'string',
                    path: 'string',
                    port: 'string',
                    protocol: 'string',
                    query: 'string',
                    status_code: 'string',
                  },
                ],
              ],
              target_group_arn: 'string',
              type: 'string',
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      load_balancer_arn: { type: 'string', optional: true, computed: true },
      port: { type: 'number', optional: true, computed: true },
      protocol: { type: 'string', computed: true },
      ssl_policy: { type: 'string', computed: true },
    },
    title: 'aws_lb_listener',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      arn_suffix: { type: 'string', computed: true },
      deregistration_delay: { type: 'number', computed: true },
      health_check: {
        type: [
          'array',
          [
            'object',
            {
              enabled: 'bool',
              healthy_threshold: 'number',
              interval: 'number',
              matcher: 'string',
              path: 'string',
              port: 'string',
              protocol: 'string',
              timeout: 'number',
              unhealthy_threshold: 'number',
            },
          ],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      lambda_multi_value_headers_enabled: { type: 'boolean', computed: true },
      load_balancing_algorithm_type: { type: 'string', computed: true },
      name: { type: 'string', optional: true, computed: true },
      port: { type: 'number', computed: true },
      preserve_client_ip: { type: 'string', computed: true },
      protocol: { type: 'string', computed: true },
      protocol_version: { type: 'string', computed: true },
      proxy_protocol_v2: { type: 'boolean', computed: true },
      slow_start: { type: 'number', computed: true },
      stickiness: {
        type: [
          'array',
          [
            'object',
            { cookie_duration: 'number', enabled: 'bool', type: 'string' },
          ],
        ],
        computed: true,
      },
      tags: { type: 'object', optional: true, computed: true },
      target_type: { type: 'string', computed: true },
      vpc_id: { type: 'string', computed: true },
    },
    title: 'aws_lb_target_group',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      checksum: { type: 'string', computed: true },
      child_directed: { type: 'boolean', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      detect_sentiment: { type: 'boolean', computed: true },
      enable_model_improvements: { type: 'boolean', computed: true },
      failure_reason: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      idle_session_ttl_in_seconds: { type: 'number', computed: true },
      last_updated_date: { type: 'string', computed: true },
      locale: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      nlu_intent_confidence_threshold: { type: 'number', computed: true },
      status: { type: 'string', computed: true },
      version: { type: 'string', optional: true },
      voice_id: { type: 'string', computed: true },
    },
    title: 'aws_lex_bot',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bot_name: { type: 'string', required: true },
      bot_version: { type: 'string', computed: true },
      checksum: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_lex_bot_alias',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      checksum: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      parent_intent_signature: { type: 'string', computed: true },
      version: { type: 'string', optional: true },
    },
    title: 'aws_lex_intent',
    type: 'datasource',
  },
  {
    properties: {
      checksum: { type: 'string', computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      enumeration_value: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      last_updated_date: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      value_selection_strategy: { type: 'string', computed: true },
      version: { type: 'string', optional: true },
    },
    title: 'aws_lex_slot_type',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      authentication_strategy: { type: 'string', computed: true },
      auto_minor_version_upgrade: { type: 'boolean', computed: true },
      broker_id: { type: 'string', optional: true, computed: true },
      broker_name: { type: 'string', optional: true, computed: true },
      configuration: {
        type: ['array', ['object', { id: 'string', revision: 'number' }]],
        computed: true,
      },
      deployment_mode: { type: 'string', computed: true },
      encryption_options: {
        type: [
          'array',
          ['object', { kms_key_id: 'string', use_aws_owned_key: 'bool' }],
        ],
        computed: true,
      },
      engine_type: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      host_instance_type: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instances: {
        type: [
          'array',
          [
            'object',
            {
              console_url: 'string',
              endpoints: ['list', 'string'],
              ip_address: 'string',
            },
          ],
        ],
        computed: true,
      },
      ldap_server_metadata: {
        type: [
          'array',
          [
            'object',
            {
              hosts: ['list', 'string'],
              role_base: 'string',
              role_name: 'string',
              role_search_matching: 'string',
              role_search_subtree: 'bool',
              service_account_password: 'string',
              service_account_username: 'string',
              user_base: 'string',
              user_role_name: 'string',
              user_search_matching: 'string',
              user_search_subtree: 'bool',
            },
          ],
        ],
        computed: true,
      },
      maintenance_window_start_time: {
        type: [
          'array',
          [
            'object',
            {
              day_of_week: 'string',
              time_of_day: 'string',
              time_zone: 'string',
            },
          ],
        ],
        computed: true,
      },
      publicly_accessible: { type: 'boolean', computed: true },
      security_groups: { type: 'object', computed: true },
      storage_type: { type: 'string', computed: true },
      subnet_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      user: { type: 'object', computed: true },
      logs: {
        nesting_mode: 'list',
        max_items: 1,
        properties: {
          audit: { type: 'boolean', computed: true },
          general: { type: 'boolean', computed: true },
        },
      },
    },
    title: 'aws_mq_broker',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bootstrap_brokers: { type: 'string', computed: true },
      bootstrap_brokers_sasl_scram: { type: 'string', computed: true },
      bootstrap_brokers_tls: { type: 'string', computed: true },
      cluster_name: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      kafka_version: { type: 'string', computed: true },
      number_of_broker_nodes: { type: 'number', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      zookeeper_connect_string: { type: 'string', computed: true },
    },
    title: 'aws_msk_cluster',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kafka_versions: { type: 'object', computed: true },
      latest_revision: { type: 'number', computed: true },
      name: { type: 'string', required: true },
      server_properties: { type: 'string', computed: true },
    },
    title: 'aws_msk_configuration',
    type: 'datasource',
  },
  {
    properties: {
      allocation_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      network_interface_id: { type: 'string', computed: true },
      private_ip: { type: 'string', computed: true },
      public_ip: { type: 'string', computed: true },
      state: { type: 'string', optional: true, computed: true },
      subnet_id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_nat_gateway',
    type: 'datasource',
  },
  {
    properties: {
      engine: { type: 'string', optional: true },
      engine_description: { type: 'string', computed: true },
      exportable_log_types: { type: ['array', 'string'], computed: true },
      id: { type: 'string', optional: true, computed: true },
      parameter_group_family: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_versions: { type: ['array', 'string'], optional: true },
      supported_timezones: { type: 'object', computed: true },
      supports_log_exports_to_cloudwatch: { type: 'boolean', computed: true },
      supports_read_replica: { type: 'boolean', computed: true },
      valid_upgrade_targets: { type: 'object', computed: true },
      version: { type: 'string', optional: true, computed: true },
      version_description: { type: 'string', computed: true },
    },
    title: 'aws_neptune_engine_version',
    type: 'datasource',
  },
  {
    properties: {
      availability_zones: { type: ['array', 'string'], computed: true },
      engine: { type: 'string', optional: true },
      engine_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_class: { type: 'string', optional: true, computed: true },
      license_model: { type: 'string', optional: true },
      max_iops_per_db_instance: { type: 'number', computed: true },
      max_iops_per_gib: { type: 'number', computed: true },
      max_storage_size: { type: 'number', computed: true },
      min_iops_per_db_instance: { type: 'number', computed: true },
      min_iops_per_gib: { type: 'number', computed: true },
      min_storage_size: { type: 'number', computed: true },
      multi_az_capable: { type: 'boolean', computed: true },
      preferred_instance_classes: { type: ['array', 'string'], optional: true },
      read_replica_capable: { type: 'boolean', computed: true },
      storage_type: { type: 'string', computed: true },
      supports_enhanced_monitoring: { type: 'boolean', computed: true },
      supports_iam_database_authentication: { type: 'boolean', computed: true },
      supports_iops: { type: 'boolean', computed: true },
      supports_performance_insights: { type: 'boolean', computed: true },
      supports_storage_encryption: { type: 'boolean', computed: true },
      vpc: { type: 'boolean', optional: true, computed: true },
    },
    title: 'aws_neptune_orderable_db_instance',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_network_acls',
    type: 'datasource',
  },
  {
    properties: {
      association: {
        type: [
          'array',
          [
            'object',
            {
              allocation_id: 'string',
              association_id: 'string',
              carrier_ip: 'string',
              customer_owned_ip: 'string',
              ip_owner_id: 'string',
              public_dns_name: 'string',
              public_ip: 'string',
            },
          ],
        ],
        computed: true,
      },
      attachment: {
        type: [
          'array',
          [
            'object',
            {
              attachment_id: 'string',
              device_index: 'number',
              instance_id: 'string',
              instance_owner_id: 'string',
            },
          ],
        ],
        computed: true,
      },
      availability_zone: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      interface_type: { type: 'string', computed: true },
      ipv6_addresses: { type: 'object', computed: true },
      mac_address: { type: 'string', computed: true },
      outpost_arn: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      private_dns_name: { type: 'string', computed: true },
      private_ip: { type: 'string', computed: true },
      private_ips: { type: ['array', 'string'], computed: true },
      requester_id: { type: 'string', computed: true },
      security_groups: { type: 'object', computed: true },
      subnet_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_network_interface',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_network_interfaces',
    type: 'datasource',
  },
  {
    properties: {
      accounts: {
        type: [
          'array',
          [
            'object',
            {
              arn: 'string',
              email: 'string',
              id: 'string',
              name: 'string',
              status: 'string',
            },
          ],
        ],
        computed: true,
      },
      arn: { type: 'string', computed: true },
      aws_service_access_principals: { type: 'object', computed: true },
      enabled_policy_types: { type: 'object', computed: true },
      feature_set: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      master_account_arn: { type: 'string', computed: true },
      master_account_email: { type: 'string', computed: true },
      master_account_id: { type: 'string', computed: true },
      non_master_accounts: {
        type: [
          'array',
          [
            'object',
            {
              arn: 'string',
              email: 'string',
              id: 'string',
              name: 'string',
              status: 'string',
            },
          ],
        ],
        computed: true,
      },
      roots: {
        type: [
          'array',
          [
            'object',
            {
              arn: 'string',
              id: 'string',
              name: 'string',
              policy_types: [
                'list',
                ['object', { status: 'string', type: 'string' }],
              ],
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_organizations_organization',
    type: 'datasource',
  },
  {
    properties: {
      children: {
        type: [
          'array',
          ['object', { arn: 'string', id: 'string', name: 'string' }],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      parent_id: { type: 'string', required: true },
    },
    title: 'aws_organizations_organizational_units',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      availability_zone: { type: 'string', computed: true },
      availability_zone_id: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      site_id: { type: 'string', computed: true },
    },
    title: 'aws_outposts_outpost',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      instance_type: { type: 'string', optional: true, computed: true },
      preferred_instance_types: { type: ['array', 'string'], optional: true },
    },
    title: 'aws_outposts_outpost_instance_type',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      instance_types: { type: 'object', computed: true },
    },
    title: 'aws_outposts_outpost_instance_types',
    type: 'datasource',
  },
  {
    properties: {
      arns: { type: 'object', computed: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      availability_zone_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      site_id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_outposts_outposts',
    type: 'datasource',
  },
  {
    properties: {
      account_id: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_outposts_site',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
    },
    title: 'aws_outposts_sites',
    type: 'datasource',
  },
  {
    properties: {
      dns_suffix: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      partition: { type: 'string', computed: true },
      reverse_dns_prefix: { type: 'string', computed: true },
    },
    title: 'aws_partition',
    type: 'datasource',
  },
  {
    properties: {
      cidr_blocks: { type: ['array', 'string'], computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      prefix_list_id: { type: 'string', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_prefix_list',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      result: { type: 'string', computed: true },
      service_code: { type: 'string', required: true },
      filters: {
        nesting_mode: 'list',
        min_items: 1,
        properties: {
          field: { type: 'string', required: true },
          value: { type: 'string', required: true },
        },
      },
    },
    title: 'aws_pricing_product',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      deletion_protection: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_qldb_ledger',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      owning_account_id: { type: 'string', computed: true },
      resource_owner: { type: 'string', required: true },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_ram_resource_share',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      certificate_type: { type: 'string', computed: true },
      customer_override: { type: 'boolean', computed: true },
      customer_override_valid_till: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      latest_valid_till: { type: 'boolean', optional: true },
      thumbprint: { type: 'string', computed: true },
      valid_from: { type: 'string', computed: true },
      valid_till: { type: 'string', computed: true },
    },
    title: 'aws_rds_certificate',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', computed: true },
      backtrack_window: { type: 'number', computed: true },
      backup_retention_period: { type: 'number', computed: true },
      cluster_identifier: { type: 'string', required: true },
      cluster_members: { type: 'object', computed: true },
      cluster_resource_id: { type: 'string', computed: true },
      database_name: { type: 'string', computed: true },
      db_cluster_parameter_group_name: { type: 'string', computed: true },
      db_subnet_group_name: { type: 'string', computed: true },
      enabled_cloudwatch_logs_exports: {
        type: ['array', 'string'],
        computed: true,
      },
      endpoint: { type: 'string', computed: true },
      engine: { type: 'string', computed: true },
      engine_version: { type: 'string', computed: true },
      final_snapshot_identifier: { type: 'string', computed: true },
      hosted_zone_id: { type: 'string', computed: true },
      iam_database_authentication_enabled: { type: 'boolean', computed: true },
      iam_roles: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      master_username: { type: 'string', computed: true },
      port: { type: 'number', computed: true },
      preferred_backup_window: { type: 'string', computed: true },
      preferred_maintenance_window: { type: 'string', computed: true },
      reader_endpoint: { type: 'string', computed: true },
      replication_source_identifier: { type: 'string', computed: true },
      storage_encrypted: { type: 'boolean', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_security_group_ids: { type: 'object', computed: true },
    },
    title: 'aws_rds_cluster',
    type: 'datasource',
  },
  {
    properties: {
      default_character_set: { type: 'string', computed: true },
      engine: { type: 'string', required: true },
      engine_description: { type: 'string', computed: true },
      exportable_log_types: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      parameter_group_family: {
        type: 'string',
        optional: true,
        computed: true,
      },
      preferred_versions: { type: ['array', 'string'], optional: true },
      status: { type: 'string', computed: true },
      supported_character_sets: { type: 'object', computed: true },
      supported_feature_names: { type: 'object', computed: true },
      supported_modes: { type: 'object', computed: true },
      supported_timezones: { type: 'object', computed: true },
      supports_global_databases: { type: 'boolean', computed: true },
      supports_log_exports_to_cloudwatch: { type: 'boolean', computed: true },
      supports_parallel_query: { type: 'boolean', computed: true },
      supports_read_replica: { type: 'boolean', computed: true },
      valid_upgrade_targets: { type: 'object', computed: true },
      version: { type: 'string', optional: true, computed: true },
      version_description: { type: 'string', computed: true },
    },
    title: 'aws_rds_engine_version',
    type: 'datasource',
  },
  {
    properties: {
      availability_zone_group: {
        type: 'string',
        optional: true,
        computed: true,
      },
      availability_zones: { type: ['array', 'string'], computed: true },
      engine: { type: 'string', required: true },
      engine_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_class: { type: 'string', optional: true, computed: true },
      license_model: { type: 'string', optional: true, computed: true },
      max_iops_per_db_instance: { type: 'number', computed: true },
      max_iops_per_gib: { type: 'number', computed: true },
      max_storage_size: { type: 'number', computed: true },
      min_iops_per_db_instance: { type: 'number', computed: true },
      min_iops_per_gib: { type: 'number', computed: true },
      min_storage_size: { type: 'number', computed: true },
      multi_az_capable: { type: 'boolean', computed: true },
      outpost_capable: { type: 'boolean', computed: true },
      preferred_engine_versions: { type: ['array', 'string'], optional: true },
      preferred_instance_classes: { type: ['array', 'string'], optional: true },
      read_replica_capable: { type: 'boolean', computed: true },
      storage_type: { type: 'string', optional: true, computed: true },
      supported_engine_modes: { type: ['array', 'string'], computed: true },
      supports_enhanced_monitoring: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      supports_global_databases: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      supports_iam_database_authentication: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      supports_iops: { type: 'boolean', optional: true, computed: true },
      supports_kerberos_authentication: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      supports_performance_insights: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      supports_storage_autoscaling: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      supports_storage_encryption: {
        type: 'boolean',
        optional: true,
        computed: true,
      },
      vpc: { type: 'boolean', optional: true, computed: true },
    },
    title: 'aws_rds_orderable_db_instance',
    type: 'datasource',
  },
  {
    properties: {
      allow_version_upgrade: { type: 'boolean', computed: true },
      automated_snapshot_retention_period: { type: 'number', computed: true },
      availability_zone: { type: 'string', computed: true },
      bucket_name: { type: 'string', computed: true },
      cluster_identifier: { type: 'string', required: true },
      cluster_parameter_group_name: { type: 'string', computed: true },
      cluster_public_key: { type: 'string', computed: true },
      cluster_revision_number: { type: 'string', computed: true },
      cluster_security_groups: { type: ['array', 'string'], computed: true },
      cluster_subnet_group_name: { type: 'string', computed: true },
      cluster_type: { type: 'string', computed: true },
      cluster_version: { type: 'string', computed: true },
      database_name: { type: 'string', computed: true },
      elastic_ip: { type: 'string', computed: true },
      enable_logging: { type: 'boolean', computed: true },
      encrypted: { type: 'boolean', computed: true },
      endpoint: { type: 'string', computed: true },
      enhanced_vpc_routing: { type: 'boolean', computed: true },
      iam_roles: { type: ['array', 'string'], computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      master_username: { type: 'string', computed: true },
      node_type: { type: 'string', computed: true },
      number_of_nodes: { type: 'number', computed: true },
      port: { type: 'number', computed: true },
      preferred_maintenance_window: { type: 'string', computed: true },
      publicly_accessible: { type: 'boolean', computed: true },
      s3_key_prefix: { type: 'string', computed: true },
      tags: { type: 'object', optional: true },
      vpc_id: { type: 'string', computed: true },
      vpc_security_group_ids: { type: ['array', 'string'], computed: true },
    },
    title: 'aws_redshift_cluster',
    type: 'datasource',
  },
  {
    properties: {
      availability_zones: { type: ['array', 'string'], computed: true },
      cluster_type: { type: 'string', optional: true, computed: true },
      cluster_version: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      node_type: { type: 'string', optional: true, computed: true },
      preferred_node_types: { type: ['array', 'string'], optional: true },
    },
    title: 'aws_redshift_orderable_cluster',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', optional: true },
    },
    title: 'aws_redshift_service_account',
    type: 'datasource',
  },
  {
    properties: {
      description: { type: 'string', computed: true },
      endpoint: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_region',
    type: 'datasource',
  },
  {
    properties: {
      all_regions: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      names: { type: 'object', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_regions',
    type: 'datasource',
  },
  {
    properties: {
      carrier_gateway_id: { type: 'string', optional: true, computed: true },
      destination_cidr_block: {
        type: 'string',
        optional: true,
        computed: true,
      },
      destination_ipv6_cidr_block: {
        type: 'string',
        optional: true,
        computed: true,
      },
      destination_prefix_list_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      egress_only_gateway_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
      gateway_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_id: { type: 'string', optional: true, computed: true },
      local_gateway_id: { type: 'string', optional: true, computed: true },
      nat_gateway_id: { type: 'string', optional: true, computed: true },
      network_interface_id: { type: 'string', optional: true, computed: true },
      route_table_id: { type: 'string', required: true },
      transit_gateway_id: { type: 'string', optional: true, computed: true },
      vpc_peering_connection_id: {
        type: 'string',
        optional: true,
        computed: true,
      },
    },
    title: 'aws_route',
    type: 'datasource',
  },
  {
    properties: {
      caller_reference: { type: 'string', computed: true },
      id: { type: 'string', required: true },
      name_servers: { type: ['array', 'string'], computed: true },
    },
    title: 'aws_route53_delegation_set',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      direction: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_addresses: { type: 'object', computed: true },
      name: { type: 'string', computed: true },
      resolver_endpoint_id: { type: 'string', optional: true },
      status: { type: 'string', computed: true },
      vpc_id: { type: 'string', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_route53_resolver_endpoint',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      domain_name: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      resolver_endpoint_id: { type: 'string', optional: true, computed: true },
      resolver_rule_id: { type: 'string', optional: true, computed: true },
      rule_type: { type: 'string', optional: true, computed: true },
      share_status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_route53_resolver_rule',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', optional: true },
      resolver_endpoint_id: { type: 'string', optional: true },
      resolver_rule_ids: { type: 'object', computed: true },
      rule_type: { type: 'string', optional: true },
      share_status: { type: 'string', optional: true },
    },
    title: 'aws_route53_resolver_rules',
    type: 'datasource',
  },
  {
    properties: {
      caller_reference: { type: 'string', computed: true },
      comment: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      linked_service_description: { type: 'string', computed: true },
      linked_service_principal: { type: 'string', computed: true },
      name: { type: 'string', optional: true, computed: true },
      name_servers: { type: ['array', 'string'], computed: true },
      private_zone: { type: 'boolean', optional: true },
      resource_record_set_count: {
        type: 'number',
        optional: true,
        computed: true,
      },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      zone_id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_route53_zone',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      associations: {
        type: [
          'array',
          [
            'object',
            {
              gateway_id: 'string',
              main: 'bool',
              route_table_association_id: 'string',
              route_table_id: 'string',
              subnet_id: 'string',
            },
          ],
        ],
        computed: true,
      },
      gateway_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', computed: true },
      route_table_id: { type: 'string', optional: true, computed: true },
      routes: {
        type: [
          'array',
          [
            'object',
            {
              carrier_gateway_id: 'string',
              cidr_block: 'string',
              destination_prefix_list_id: 'string',
              egress_only_gateway_id: 'string',
              gateway_id: 'string',
              instance_id: 'string',
              ipv6_cidr_block: 'string',
              local_gateway_id: 'string',
              nat_gateway_id: 'string',
              network_interface_id: 'string',
              transit_gateway_id: 'string',
              vpc_endpoint_id: 'string',
              vpc_peering_connection_id: 'string',
            },
          ],
        ],
        computed: true,
      },
      subnet_id: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_route_table',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_route_tables',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      bucket: { type: 'string', required: true },
      bucket_domain_name: { type: 'string', computed: true },
      bucket_regional_domain_name: { type: 'string', computed: true },
      hosted_zone_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', computed: true },
      website_domain: { type: 'string', computed: true },
      website_endpoint: { type: 'string', computed: true },
    },
    title: 'aws_s3_bucket',
    type: 'datasource',
  },
  {
    properties: {
      body: { type: 'string', computed: true },
      bucket: { type: 'string', required: true },
      bucket_key_enabled: { type: 'boolean', computed: true },
      cache_control: { type: 'string', computed: true },
      content_disposition: { type: 'string', computed: true },
      content_encoding: { type: 'string', computed: true },
      content_language: { type: 'string', computed: true },
      content_length: { type: 'number', computed: true },
      content_type: { type: 'string', computed: true },
      etag: { type: 'string', computed: true },
      expiration: { type: 'string', computed: true },
      expires: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      key: { type: 'string', required: true },
      last_modified: { type: 'string', computed: true },
      metadata: { type: 'object', computed: true },
      object_lock_legal_hold_status: { type: 'string', computed: true },
      object_lock_mode: { type: 'string', computed: true },
      object_lock_retain_until_date: { type: 'string', computed: true },
      range: { type: 'string', optional: true },
      server_side_encryption: { type: 'string', computed: true },
      sse_kms_key_id: { type: 'string', computed: true },
      storage_class: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      version_id: { type: 'string', optional: true, computed: true },
      website_redirect_location: { type: 'string', computed: true },
    },
    title: 'aws_s3_bucket_object',
    type: 'datasource',
  },
  {
    properties: {
      bucket: { type: 'string', required: true },
      common_prefixes: { type: ['array', 'string'], computed: true },
      delimiter: { type: 'string', optional: true },
      encoding_type: { type: 'string', optional: true },
      fetch_owner: { type: 'boolean', optional: true },
      id: { type: 'string', optional: true, computed: true },
      keys: { type: ['array', 'string'], computed: true },
      max_keys: { type: 'number', optional: true },
      owners: { type: ['array', 'string'], computed: true },
      prefix: { type: 'string', optional: true },
      start_after: { type: 'string', optional: true },
    },
    title: 'aws_s3_bucket_objects',
    type: 'datasource',
  },
  {
    properties: {
      dns_suffix: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      image_tag: { type: 'string', optional: true },
      region: { type: 'string', optional: true },
      registry_id: { type: 'string', computed: true },
      registry_path: { type: 'string', computed: true },
      repository_name: { type: 'string', required: true },
    },
    title: 'aws_sagemaker_prebuilt_ecr_image',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      kms_key_id: { type: 'string', computed: true },
      name: { type: 'string', optional: true, computed: true },
      policy: { type: 'string', computed: true },
      rotation_enabled: { type: 'boolean', computed: true },
      rotation_lambda_arn: { type: 'string', computed: true },
      rotation_rules: {
        type: ['array', ['object', { automatically_after_days: 'number' }]],
        computed: true,
      },
      tags: { type: 'object', computed: true },
    },
    title: 'aws_secretsmanager_secret',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      rotation_enabled: { type: 'boolean', computed: true },
      rotation_lambda_arn: { type: 'string', computed: true },
      rotation_rules: {
        type: ['array', ['object', { automatically_after_days: 'number' }]],
        computed: true,
      },
      secret_id: { type: 'string', required: true },
    },
    title: 'aws_secretsmanager_secret_rotation',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      secret_binary: { type: 'string', computed: true, sensitive: true },
      secret_id: { type: 'string', required: true },
      secret_string: { type: 'string', computed: true, sensitive: true },
      version_id: { type: 'string', optional: true, computed: true },
      version_stage: { type: 'string', optional: true },
      version_stages: { type: 'object', computed: true },
    },
    title: 'aws_secretsmanager_secret_version',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_security_group',
    type: 'datasource',
  },
  {
    properties: {
      arns: { type: ['array', 'string'], computed: true },
      id: { type: 'string', optional: true, computed: true },
      ids: { type: ['array', 'string'], computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_ids: { type: ['array', 'string'], computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_security_groups',
    type: 'datasource',
  },
  {
    properties: {
      application_id: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      required_capabilities: { type: 'object', computed: true },
      semantic_version: { type: 'string', optional: true, computed: true },
      source_code_url: { type: 'string', computed: true },
      template_url: { type: 'string', computed: true },
    },
    title: 'aws_serverlessapplicationrepository_application',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      service_code: { type: 'string', computed: true },
      service_name: { type: 'string', required: true },
    },
    title: 'aws_servicequotas_service',
    type: 'datasource',
  },
  {
    properties: {
      adjustable: { type: 'boolean', computed: true },
      arn: { type: 'string', computed: true },
      default_value: { type: 'number', computed: true },
      global_quota: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      quota_code: { type: 'string', optional: true, computed: true },
      quota_name: { type: 'string', optional: true, computed: true },
      service_code: { type: 'string', required: true },
      service_name: { type: 'string', computed: true },
      value: { type: 'number', computed: true },
    },
    title: 'aws_servicequotas_service_quota',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      creation_date: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_sfn_activity',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      creation_date: { type: 'string', computed: true },
      definition: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      role_arn: { type: 'string', computed: true },
      status: { type: 'string', computed: true },
    },
    title: 'aws_sfn_state_machine',
    type: 'datasource',
  },
  {
    properties: {
      completed_at: { type: 'string', computed: true },
      created_at: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      job_id: { type: 'string', required: true },
      job_invoker: { type: 'string', computed: true },
      job_owner: { type: 'string', computed: true },
      platform_display_name: { type: 'string', computed: true },
      platform_id: { type: 'string', computed: true },
      profile_name: { type: 'string', computed: true },
      profile_version: { type: 'string', computed: true },
      requested_by: { type: 'string', computed: true },
      revocation_record: {
        type: [
          'array',
          [
            'object',
            { reason: 'string', revoked_at: 'string', revoked_by: 'string' },
          ],
        ],
        computed: true,
      },
      signature_expires_at: { type: 'string', computed: true },
      signed_object: {
        type: [
          'array',
          [
            'object',
            { s3: ['list', ['object', { bucket: 'string', key: 'string' }]] },
          ],
        ],
        computed: true,
      },
      source: {
        type: [
          'array',
          [
            'object',
            {
              s3: [
                'list',
                [
                  'object',
                  { bucket: 'string', key: 'string', version: 'string' },
                ],
              ],
            },
          ],
        ],
        computed: true,
      },
      status: { type: 'string', computed: true },
      status_reason: { type: 'string', computed: true },
    },
    title: 'aws_signer_signing_job',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      platform_display_name: { type: 'string', computed: true },
      platform_id: { type: 'string', computed: true },
      revocation_record: {
        type: [
          'array',
          [
            'object',
            {
              revocation_effective_from: 'string',
              revoked_at: 'string',
              revoked_by: 'string',
            },
          ],
        ],
        computed: true,
      },
      signature_validity_period: {
        type: ['array', ['object', { type: 'string', value: 'number' }]],
        computed: true,
      },
      status: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      version: { type: 'string', computed: true },
      version_arn: { type: 'string', computed: true },
    },
    title: 'aws_signer_signing_profile',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_sns_topic',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      tags: { type: 'object', optional: true, computed: true },
      url: { type: 'string', computed: true },
    },
    title: 'aws_sqs_queue',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      content: { type: 'string', computed: true },
      document_format: { type: 'string', optional: true },
      document_type: { type: 'string', computed: true },
      document_version: { type: 'string', optional: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_ssm_document',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      type: { type: 'string', computed: true },
      value: { type: 'string', computed: true, sensitive: true },
      version: { type: 'number', computed: true },
      with_decryption: { type: 'boolean', optional: true },
    },
    title: 'aws_ssm_parameter',
    type: 'datasource',
  },
  {
    properties: {
      default_baseline: { type: 'boolean', optional: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', computed: true },
      name_prefix: { type: 'string', optional: true },
      operating_system: { type: 'string', optional: true },
      owner: { type: 'string', required: true },
    },
    title: 'aws_ssm_patch_baseline',
    type: 'datasource',
  },
  {
    properties: {
      arns: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      identity_store_ids: { type: 'object', computed: true },
    },
    title: 'aws_ssoadmin_instances',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', optional: true, computed: true },
      created_date: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_arn: { type: 'string', required: true },
      name: { type: 'string', optional: true, computed: true },
      relay_state: { type: 'string', computed: true },
      session_duration: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
    },
    title: 'aws_ssoadmin_permission_set',
    type: 'datasource',
  },
  {
    properties: {
      disk_id: { type: 'string', computed: true },
      disk_node: { type: 'string', optional: true, computed: true },
      disk_path: { type: 'string', optional: true, computed: true },
      gateway_arn: { type: 'string', required: true },
      id: { type: 'string', optional: true, computed: true },
    },
    title: 'aws_storagegateway_local_disk',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      assign_ipv6_address_on_creation: { type: 'boolean', computed: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      availability_zone_id: { type: 'string', optional: true, computed: true },
      available_ip_address_count: { type: 'number', computed: true },
      cidr_block: { type: 'string', optional: true, computed: true },
      customer_owned_ipv4_pool: { type: 'string', computed: true },
      default_for_az: { type: 'boolean', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      ipv6_cidr_block: { type: 'string', optional: true, computed: true },
      ipv6_cidr_block_association_id: { type: 'string', computed: true },
      map_customer_owned_ip_on_launch: { type: 'boolean', computed: true },
      map_public_ip_on_launch: { type: 'boolean', computed: true },
      outpost_arn: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      state: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_subnet',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', required: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_subnet_ids',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      endpoint: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      identity_provider_type: { type: 'string', computed: true },
      invocation_role: { type: 'string', computed: true },
      logging_role: { type: 'string', computed: true },
      server_id: { type: 'string', required: true },
      url: { type: 'string', computed: true },
    },
    title: 'aws_transfer_server',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cidr_block: { type: 'string', optional: true, computed: true },
      cidr_block_associations: {
        type: [
          'array',
          [
            'object',
            { association_id: 'string', cidr_block: 'string', state: 'string' },
          ],
        ],
        computed: true,
      },
      default: { type: 'boolean', optional: true, computed: true },
      dhcp_options_id: { type: 'string', optional: true, computed: true },
      enable_dns_hostnames: { type: 'boolean', computed: true },
      enable_dns_support: { type: 'boolean', computed: true },
      id: { type: 'string', optional: true, computed: true },
      instance_tenancy: { type: 'string', computed: true },
      ipv6_association_id: { type: 'string', computed: true },
      ipv6_cidr_block: { type: 'string', computed: true },
      main_route_table_id: { type: 'string', computed: true },
      owner_id: { type: 'string', computed: true },
      state: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_vpc',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      dhcp_options_id: { type: 'string', optional: true, computed: true },
      domain_name: { type: 'string', computed: true },
      domain_name_servers: { type: ['array', 'string'], computed: true },
      id: { type: 'string', optional: true, computed: true },
      netbios_name_servers: { type: ['array', 'string'], computed: true },
      netbios_node_type: { type: 'string', computed: true },
      ntp_servers: { type: ['array', 'string'], computed: true },
      owner_id: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_vpc_dhcp_options',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      cidr_blocks: { type: ['array', 'string'], computed: true },
      dns_entry: {
        type: [
          'array',
          ['object', { dns_name: 'string', hosted_zone_id: 'string' }],
        ],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      network_interface_ids: { type: 'object', computed: true },
      owner_id: { type: 'string', computed: true },
      policy: { type: 'string', computed: true },
      prefix_list_id: { type: 'string', computed: true },
      private_dns_enabled: { type: 'boolean', computed: true },
      requester_managed: { type: 'boolean', computed: true },
      route_table_ids: { type: 'object', computed: true },
      security_group_ids: { type: 'object', computed: true },
      service_name: { type: 'string', optional: true, computed: true },
      state: { type: 'string', optional: true, computed: true },
      subnet_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_endpoint_type: { type: 'string', computed: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_vpc_endpoint',
    type: 'datasource',
  },
  {
    properties: {
      acceptance_required: { type: 'boolean', computed: true },
      arn: { type: 'string', computed: true },
      availability_zones: { type: 'object', computed: true },
      base_endpoint_dns_names: { type: 'object', computed: true },
      id: { type: 'string', optional: true, computed: true },
      manages_vpc_endpoints: { type: 'boolean', computed: true },
      owner: { type: 'string', computed: true },
      private_dns_name: { type: 'string', computed: true },
      service: { type: 'string', optional: true },
      service_id: { type: 'string', computed: true },
      service_name: { type: 'string', optional: true, computed: true },
      service_type: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_endpoint_policy_supported: { type: 'boolean', computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: ['array', 'string'], required: true },
        },
      },
    },
    title: 'aws_vpc_endpoint_service',
    type: 'datasource',
  },
  {
    properties: {
      accepter: { type: 'object', computed: true },
      cidr_block: { type: 'string', optional: true, computed: true },
      cidr_block_set: {
        type: ['array', ['object', { cidr_block: 'string' }]],
        computed: true,
      },
      id: { type: 'string', optional: true, computed: true },
      owner_id: { type: 'string', optional: true, computed: true },
      peer_cidr_block: { type: 'string', optional: true, computed: true },
      peer_cidr_block_set: {
        type: ['array', ['object', { cidr_block: 'string' }]],
        computed: true,
      },
      peer_owner_id: { type: 'string', optional: true, computed: true },
      peer_region: { type: 'string', optional: true, computed: true },
      peer_vpc_id: { type: 'string', optional: true, computed: true },
      region: { type: 'string', optional: true, computed: true },
      requester: { type: 'object', computed: true },
      status: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      vpc_id: { type: 'string', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_vpc_peering_connection',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_vpc_peering_connections',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_vpcs',
    type: 'datasource',
  },
  {
    properties: {
      amazon_side_asn: { type: 'string', optional: true, computed: true },
      arn: { type: 'string', computed: true },
      attached_vpc_id: { type: 'string', optional: true, computed: true },
      availability_zone: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      state: { type: 'string', optional: true, computed: true },
      tags: { type: 'object', optional: true, computed: true },
      filter: {
        nesting_mode: 'set',
        properties: {
          name: { type: 'string', required: true },
          values: { type: 'object', required: true },
        },
      },
    },
    title: 'aws_vpn_gateway',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_waf_ipset',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_waf_rate_based_rule',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_waf_rule',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_waf_web_acl',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_wafregional_ipset',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_wafregional_rate_based_rule',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_wafregional_rule',
    type: 'datasource',
  },
  {
    properties: {
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
    },
    title: 'aws_wafregional_web_acl',
    type: 'datasource',
  },
  {
    properties: {
      addresses: { type: 'object', computed: true },
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address_version: { type: 'string', computed: true },
      name: { type: 'string', required: true },
      scope: { type: 'string', required: true },
    },
    title: 'aws_wafv2_ip_set',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      regular_expression: { type: 'object', computed: true },
      scope: { type: 'string', required: true },
    },
    title: 'aws_wafv2_regex_pattern_set',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      scope: { type: 'string', required: true },
    },
    title: 'aws_wafv2_rule_group',
    type: 'datasource',
  },
  {
    properties: {
      arn: { type: 'string', computed: true },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', required: true },
      scope: { type: 'string', required: true },
    },
    title: 'aws_wafv2_web_acl',
    type: 'datasource',
  },
  {
    properties: {
      bundle_id: { type: 'string', optional: true },
      compute_type: {
        type: ['array', ['object', { name: 'string' }]],
        computed: true,
      },
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      name: { type: 'string', optional: true },
      owner: { type: 'string', optional: true },
      root_storage: {
        type: ['array', ['object', { capacity: 'string' }]],
        computed: true,
      },
      user_storage: {
        type: ['array', ['object', { capacity: 'string' }]],
        computed: true,
      },
    },
    title: 'aws_workspaces_bundle',
    type: 'datasource',
  },
  {
    properties: {
      alias: { type: 'string', computed: true },
      customer_user_name: { type: 'string', computed: true },
      directory_id: { type: 'string', required: true },
      directory_name: { type: 'string', computed: true },
      directory_type: { type: 'string', computed: true },
      dns_ip_addresses: { type: 'object', computed: true },
      iam_role_id: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_group_ids: { type: 'object', computed: true },
      registration_code: { type: 'string', computed: true },
      self_service_permissions: {
        type: [
          'array',
          [
            'object',
            {
              change_compute_type: 'bool',
              increase_volume_size: 'bool',
              rebuild_workspace: 'bool',
              restart_workspace: 'bool',
              switch_running_mode: 'bool',
            },
          ],
        ],
        computed: true,
      },
      subnet_ids: { type: 'object', computed: true },
      tags: { type: 'object', optional: true },
      workspace_access_properties: {
        type: [
          'array',
          [
            'object',
            {
              device_type_android: 'string',
              device_type_chromeos: 'string',
              device_type_ios: 'string',
              device_type_osx: 'string',
              device_type_web: 'string',
              device_type_windows: 'string',
              device_type_zeroclient: 'string',
            },
          ],
        ],
        computed: true,
      },
      workspace_creation_properties: {
        type: [
          'array',
          [
            'object',
            {
              custom_security_group_id: 'string',
              default_ou: 'string',
              enable_internet_access: 'bool',
              enable_maintenance_mode: 'bool',
              user_enabled_as_local_administrator: 'bool',
            },
          ],
        ],
        computed: true,
      },
      workspace_security_group_id: { type: 'string', computed: true },
    },
    title: 'aws_workspaces_directory',
    type: 'datasource',
  },
  {
    properties: {
      description: { type: 'string', computed: true },
      id: { type: 'string', optional: true, computed: true },
      image_id: { type: 'string', required: true },
      name: { type: 'string', computed: true },
      operating_system_type: { type: 'string', computed: true },
      required_tenancy: { type: 'string', computed: true },
      state: { type: 'string', computed: true },
    },
    title: 'aws_workspaces_image',
    type: 'datasource',
  },
  {
    properties: {
      bundle_id: { type: 'string', computed: true },
      computer_name: { type: 'string', computed: true },
      directory_id: { type: 'string', optional: true, computed: true },
      id: { type: 'string', optional: true, computed: true },
      ip_address: { type: 'string', computed: true },
      root_volume_encryption_enabled: { type: 'boolean', computed: true },
      state: { type: 'string', computed: true },
      tags: { type: 'object', optional: true, computed: true },
      user_name: { type: 'string', optional: true, computed: true },
      user_volume_encryption_enabled: { type: 'boolean', computed: true },
      volume_encryption_key: { type: 'string', computed: true },
      workspace_id: { type: 'string', optional: true, computed: true },
      workspace_properties: {
        type: [
          'array',
          [
            'object',
            {
              compute_type_name: 'string',
              root_volume_size_gib: 'number',
              running_mode: 'string',
              running_mode_auto_stop_timeout_in_minutes: 'number',
              user_volume_size_gib: 'number',
            },
          ],
        ],
        computed: true,
      },
    },
    title: 'aws_workspaces_workspace',
    type: 'datasource',
  },
];
